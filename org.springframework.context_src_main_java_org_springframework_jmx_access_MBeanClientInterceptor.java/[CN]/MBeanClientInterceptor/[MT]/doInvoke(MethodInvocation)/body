{
  Method method=invocation.getMethod();
  try {
    Object result=null;
    if (this.invocationHandler != null) {
      result=this.invocationHandler.invoke(invocation.getThis(),method,invocation.getArguments());
    }
 else {
      PropertyDescriptor pd=BeanUtils.findPropertyForMethod(method);
      if (pd != null) {
        result=invokeAttribute(pd,invocation);
      }
 else {
        result=invokeOperation(method,invocation.getArguments());
      }
    }
    return convertResultValueIfNecessary(result,method.getReturnType());
  }
 catch (  MBeanException ex) {
    throw ex.getTargetException();
  }
catch (  RuntimeMBeanException ex) {
    throw ex.getTargetException();
  }
catch (  RuntimeErrorException ex) {
    throw ex.getTargetError();
  }
catch (  RuntimeOperationsException ex) {
    RuntimeException rex=ex.getTargetException();
    if (rex instanceof RuntimeMBeanException) {
      throw ((RuntimeMBeanException)rex).getTargetException();
    }
 else     if (rex instanceof RuntimeErrorException) {
      throw ((RuntimeErrorException)rex).getTargetError();
    }
 else {
      throw rex;
    }
  }
catch (  OperationsException ex) {
    if (ReflectionUtils.declaresException(method,ex.getClass())) {
      throw ex;
    }
 else {
      throw new InvalidInvocationException(ex.getMessage());
    }
  }
catch (  JMException ex) {
    if (ReflectionUtils.declaresException(method,ex.getClass())) {
      throw ex;
    }
 else {
      throw new InvocationFailureException("JMX access failed",ex);
    }
  }
catch (  IOException ex) {
    if (ReflectionUtils.declaresException(method,ex.getClass())) {
      throw ex;
    }
 else {
      throw new MBeanConnectFailureException("I/O failure during JMX access",ex);
    }
  }
}
