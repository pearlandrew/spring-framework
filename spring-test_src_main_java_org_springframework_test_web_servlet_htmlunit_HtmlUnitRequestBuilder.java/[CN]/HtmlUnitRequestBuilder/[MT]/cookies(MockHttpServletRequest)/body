{
  List<Cookie> cookies=new ArrayList<Cookie>();
  String cookieHeaderValue=header("Cookie");
  if (cookieHeaderValue != null) {
    StringTokenizer tokens=new StringTokenizer(cookieHeaderValue,"=;");
    while (tokens.hasMoreTokens()) {
      String cookieName=tokens.nextToken().trim();
      if (!tokens.hasMoreTokens()) {
        throw new IllegalArgumentException("Expected value for cookie name '" + cookieName + "'. Full cookie was "+ cookieHeaderValue);
      }
      String cookieValue=tokens.nextToken().trim();
      processCookie(request,cookies,new Cookie(cookieName,cookieValue));
    }
  }
  Set<com.gargoylesoftware.htmlunit.util.Cookie> managedCookies=this.webClient.getCookies(this.webRequest.getUrl());
  for (  com.gargoylesoftware.htmlunit.util.Cookie cookie : managedCookies) {
    processCookie(request,cookies,new Cookie(cookie.getName(),cookie.getValue()));
  }
  Cookie[] parentCookies=request.getCookies();
  if (parentCookies != null) {
    for (    Cookie cookie : parentCookies) {
      cookies.add(cookie);
    }
  }
  if (!ObjectUtils.isEmpty(cookies)) {
    request.setCookies(cookies.toArray(new Cookie[cookies.size()]));
  }
}
