{
  RootBeanDefinition httpRequestHandlerDef;
  RuntimeBeanReference handshakeHandler=WebSocketNamespaceUtils.registerHandshakeHandler(stompEndpointElement,parserCxt,source);
  RuntimeBeanReference sockJsService=WebSocketNamespaceUtils.registerSockJsService(stompEndpointElement,SOCKJS_SCHEDULER_BEAN_NAME,parserCxt,source);
  if (sockJsService != null) {
    ConstructorArgumentValues cavs=new ConstructorArgumentValues();
    cavs.addIndexedArgumentValue(0,sockJsService);
    cavs.addIndexedArgumentValue(1,subProtocolWebSocketHandler);
    httpRequestHandlerDef=new RootBeanDefinition(SockJsHttpRequestHandler.class,cavs,null);
  }
 else {
    ConstructorArgumentValues cavs=new ConstructorArgumentValues();
    cavs.addIndexedArgumentValue(0,subProtocolWebSocketHandler);
    if (handshakeHandler != null) {
      cavs.addIndexedArgumentValue(1,handshakeHandler);
    }
    httpRequestHandlerDef=new RootBeanDefinition(WebSocketHttpRequestHandler.class,cavs,null);
  }
  String httpRequestHandlerBeanName=registerBeanDef(httpRequestHandlerDef,parserCxt,source);
  return new RuntimeBeanReference(httpRequestHandlerBeanName);
}
