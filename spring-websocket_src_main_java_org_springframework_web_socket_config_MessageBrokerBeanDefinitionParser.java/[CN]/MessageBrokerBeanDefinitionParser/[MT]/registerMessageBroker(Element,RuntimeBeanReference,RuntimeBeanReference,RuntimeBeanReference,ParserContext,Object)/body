{
  Element simpleBrokerElem=DomUtils.getChildElementByTagName(messageBrokerElement,"simple-broker");
  Element brokerRelayElem=DomUtils.getChildElementByTagName(messageBrokerElement,"stomp-broker-relay");
  ConstructorArgumentValues cavs=new ConstructorArgumentValues();
  cavs.addIndexedArgumentValue(0,clientInChannelDef);
  cavs.addIndexedArgumentValue(1,clientOutChannelDef);
  cavs.addIndexedArgumentValue(2,brokerChannelDef);
  RootBeanDefinition brokerDef;
  if (simpleBrokerElem != null) {
    String prefix=simpleBrokerElem.getAttribute("prefix");
    cavs.addIndexedArgumentValue(3,Arrays.asList(StringUtils.tokenizeToStringArray(prefix,",")));
    brokerDef=new RootBeanDefinition(SimpleBrokerMessageHandler.class,cavs,null);
    if (messageBrokerElement.hasAttribute("path-matcher")) {
      brokerDef.getPropertyValues().add("pathMatcher",new RuntimeBeanReference(messageBrokerElement.getAttribute("path-matcher")));
    }
  }
 else   if (brokerRelayElem != null) {
    String prefix=brokerRelayElem.getAttribute("prefix");
    cavs.addIndexedArgumentValue(3,Arrays.asList(StringUtils.tokenizeToStringArray(prefix,",")));
    MutablePropertyValues mpvs=new MutablePropertyValues();
    String relayHost=brokerRelayElem.getAttribute("relay-host");
    if (!relayHost.isEmpty()) {
      mpvs.add("relayHost",relayHost);
    }
    String relayPort=brokerRelayElem.getAttribute("relay-port");
    if (!relayPort.isEmpty()) {
      mpvs.add("relayPort",Integer.valueOf(relayPort));
    }
    String attrValue=brokerRelayElem.getAttribute("client-login");
    if (!attrValue.isEmpty()) {
      mpvs.add("clientLogin",attrValue);
    }
    attrValue=brokerRelayElem.getAttribute("client-passcode");
    if (!attrValue.isEmpty()) {
      mpvs.add("clientPasscode",attrValue);
    }
    attrValue=brokerRelayElem.getAttribute("system-login");
    if (!attrValue.isEmpty()) {
      mpvs.add("systemLogin",attrValue);
    }
    attrValue=brokerRelayElem.getAttribute("system-passcode");
    if (!attrValue.isEmpty()) {
      mpvs.add("systemPasscode",attrValue);
    }
    attrValue=brokerRelayElem.getAttribute("heartbeat-send-interval");
    if (!attrValue.isEmpty()) {
      mpvs.add("systemHeartbeatSendInterval",Long.parseLong(attrValue));
    }
    attrValue=brokerRelayElem.getAttribute("heartbeat-receive-interval");
    if (!attrValue.isEmpty()) {
      mpvs.add("systemHeartbeatReceiveInterval",Long.parseLong(attrValue));
    }
    attrValue=brokerRelayElem.getAttribute("virtual-host");
    if (!attrValue.isEmpty()) {
      mpvs.add("virtualHost",attrValue);
    }
    Class<?> handlerType=StompBrokerRelayMessageHandler.class;
    brokerDef=new RootBeanDefinition(handlerType,cavs,mpvs);
  }
 else {
    throw new IllegalStateException("Neither <simple-broker> nor <stomp-broker-relay> elements found.");
  }
  registerBeanDef(brokerDef,parserCxt,source);
  return brokerDef;
}
