{
  StompCommand command=stompAccessor.getCommand();
  try {
    byte[] bytes=this.stompEncoder.encode(stompAccessor.getMessageHeaders(),payload);
    boolean useBinary=(payload.length > 0 && !(session instanceof SockJsSession) && MimeTypeUtils.APPLICATION_OCTET_STREAM.isCompatibleWith(stompAccessor.getContentType()));
    if (useBinary) {
      session.sendMessage(new BinaryMessage(bytes));
    }
 else {
      session.sendMessage(new TextMessage(bytes));
    }
  }
 catch (  SessionLimitExceededException ex) {
    throw ex;
  }
catch (  Throwable ex) {
    logger.debug("Failed to send WebSocket message to client in session " + session.getId() + ".",ex);
    command=StompCommand.ERROR;
  }
 finally {
    if (StompCommand.ERROR.equals(command)) {
      try {
        session.close(CloseStatus.PROTOCOL_ERROR);
      }
 catch (      IOException ex) {
      }
    }
  }
}
