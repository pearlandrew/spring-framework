{
  ProxyFactoryBean config=(ProxyFactoryBean)factory.getBean("&test1");
  assertTrue("Has correct object type",ITestBean.class.isAssignableFrom(config.getObjectType()));
  assertTrue("Has correct object type",ITestBean.class.isAssignableFrom(factory.getType("test1")));
  config.getObject();
  assertEquals("Have one advisors",1,config.getAdvisors().length);
  assertTrue("Has correct object type",ITestBean.class.isAssignableFrom(config.getObjectType()));
  assertTrue("Has correct object type",ITestBean.class.isAssignableFrom(factory.getType("test1")));
  ITestBean tb=(ITestBean)factory.getBean("test1");
  tb.hashCode();
  final Exception ex=new UnsupportedOperationException("invoke");
  config.addAdvice(0,new MethodInterceptor(){
    @Override public Object invoke(    MethodInvocation invocation) throws Throwable {
      throw ex;
    }
  }
);
  assertEquals("Have correct advisor count",2,config.getAdvisors().length);
  tb=(ITestBean)factory.getBean("test1");
  try {
    tb.toString();
    fail("Evil interceptor added programmatically should fail all method calls");
  }
 catch (  Exception thrown) {
    assertTrue(thrown == ex);
  }
}
