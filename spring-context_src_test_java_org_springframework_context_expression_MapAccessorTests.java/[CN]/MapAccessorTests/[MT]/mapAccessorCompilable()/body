{
  Map<String,Object> testMap=getSimpleTestMap();
  StandardEvaluationContext sec=new StandardEvaluationContext();
  sec.addPropertyAccessor(new MapAccessor());
  SpelExpressionParser sep=new SpelExpressionParser();
  Expression ex=sep.parseExpression("foo");
  assertEquals("bar",ex.getValue(sec,testMap));
  assertTrue(SpelCompiler.compile(ex));
  assertEquals("bar",ex.getValue(sec,testMap));
  ex=sep.parseExpression("foo.toUpperCase()");
  assertEquals("BAR",ex.getValue(sec,testMap));
  assertTrue(SpelCompiler.compile(ex));
  assertEquals("BAR",ex.getValue(sec,testMap));
  Map<String,Map<String,Object>> nestedMap=getNestedTestMap();
  ex=sep.parseExpression("aaa.foo.toUpperCase()");
  assertEquals("BAR",ex.getValue(sec,nestedMap));
  assertTrue(SpelCompiler.compile(ex));
  assertEquals("BAR",ex.getValue(sec,nestedMap));
  ex=sep.parseExpression("getMap().foo");
  MapGetter mapGetter=new MapGetter();
  assertEquals("bar",ex.getValue(sec,mapGetter));
  assertTrue(SpelCompiler.compile(ex));
  assertEquals("bar",ex.getValue(sec,mapGetter));
}
