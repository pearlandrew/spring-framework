{
  MockControl dsControl=MockControl.createControl(DataSource.class);
  final DataSource ds=(DataSource)dsControl.getMock();
  MockControl conControl=MockControl.createControl(Connection.class);
  final Connection con=(Connection)conControl.getMock();
  MockControl psControl=MockControl.createControl(PreparedStatement.class);
  PreparedStatement ps=(PreparedStatement)psControl.getMock();
  ds.getConnection();
  dsControl.setReturnValue(con,1);
  con.getAutoCommit();
  conControl.setReturnValue(true,1);
  con.setAutoCommit(false);
  conControl.setVoidCallable(1);
  con.prepareStatement("some SQL statement");
  conControl.setReturnValue(ps,1);
  if (timeout > 1) {
    ps.setQueryTimeout(timeout - 1);
    psControl.setVoidCallable(1);
    con.commit();
  }
 else {
    con.rollback();
  }
  conControl.setVoidCallable(1);
  con.setAutoCommit(true);
  conControl.setVoidCallable(1);
  con.isReadOnly();
  conControl.setReturnValue(false,1);
  con.close();
  conControl.setVoidCallable(1);
  psControl.replay();
  conControl.replay();
  dsControl.replay();
  PlatformTransactionManager tm=new DataSourceTransactionManager(ds);
  TransactionTemplate tt=new TransactionTemplate(tm);
  tt.setTimeout(timeout);
  assertTrue("Hasn't thread connection",!TransactionSynchronizationManager.hasResource(ds));
  try {
    tt.execute(new TransactionCallbackWithoutResult(){
      @Override protected void doInTransactionWithoutResult(      TransactionStatus status){
        try {
          Thread.sleep(1500);
        }
 catch (        InterruptedException ex) {
        }
        try {
          Connection con=DataSourceUtils.getConnection(ds);
          PreparedStatement ps=con.prepareStatement("some SQL statement");
          DataSourceUtils.applyTransactionTimeout(ps,ds);
        }
 catch (        SQLException ex) {
          throw new DataAccessResourceFailureException("",ex);
        }
      }
    }
);
    if (timeout <= 1) {
      fail("Should have thrown TransactionTimedOutException");
    }
  }
 catch (  TransactionTimedOutException ex) {
    if (timeout <= 1) {
    }
 else {
      throw ex;
    }
  }
  assertTrue("Hasn't thread connection",!TransactionSynchronizationManager.hasResource(ds));
  conControl.verify();
  dsControl.verify();
  psControl.verify();
}
