{
  BlockingSession blockingSession=new BlockingSession();
  blockingSession.setOpen(true);
  CountDownLatch sentMessageLatch=blockingSession.getSentMessageLatch();
  int sendTimeLimit=10 * 1000;
  int bufferSizeLimit=1024;
  final ConcurrentWebSocketSessionDecorator concurrentSession=new ConcurrentWebSocketSessionDecorator(blockingSession,sendTimeLimit,bufferSizeLimit);
  Executors.newSingleThreadExecutor().submit(new Runnable(){
    @Override public void run(){
      TextMessage textMessage=new TextMessage("slow message");
      try {
        concurrentSession.sendMessage(textMessage);
      }
 catch (      IOException e) {
        e.printStackTrace();
      }
    }
  }
);
  assertTrue(sentMessageLatch.await(5,TimeUnit.SECONDS));
  StringBuilder sb=new StringBuilder();
  for (int i=0; i < 1023; i++) {
    sb.append("a");
  }
  TextMessage message=new TextMessage(sb.toString());
  concurrentSession.sendMessage(message);
  assertEquals(1023,concurrentSession.getBufferSize());
  assertTrue(blockingSession.isOpen());
  try {
    concurrentSession.sendMessage(message);
    fail("Expected exception");
  }
 catch (  SessionLimitExceededException ex) {
  }
}
