{
  MockControl utControl=MockControl.createControl(UserTransaction.class);
  UserTransaction ut=(UserTransaction)utControl.getMock();
  ut.getStatus();
  utControl.setReturnValue(Status.STATUS_NO_TRANSACTION,1);
  ut.getStatus();
  utControl.setReturnValue(Status.STATUS_ACTIVE,1);
  ut.begin();
  utControl.setVoidCallable(1);
  if (rollback) {
    ut.rollback();
  }
 else {
    ut.getStatus();
    utControl.setReturnValue(Status.STATUS_ACTIVE,1);
    ut.commit();
  }
  utControl.setVoidCallable(1);
  utControl.replay();
  MockControl dsControl=MockControl.createControl(DataSource.class);
  final DataSource ds=(DataSource)dsControl.getMock();
  MockControl conControl=MockControl.createControl(Connection.class);
  Connection con=(Connection)conControl.getMock();
  ds.getConnection();
  dsControl.setReturnValue(con,1);
  con.close();
  conControl.setVoidCallable(1);
  conControl.replay();
  dsControl.replay();
  JtaTransactionManager ptm=new JtaTransactionManager(ut);
  TransactionTemplate tt=new TransactionTemplate(ptm);
  assertTrue("Hasn't thread connection",!TransactionSynchronizationManager.hasResource(ds));
  assertTrue("JTA synchronizations not active",!TransactionSynchronizationManager.isSynchronizationActive());
  tt.execute(new TransactionCallbackWithoutResult(){
    protected void doInTransactionWithoutResult(    TransactionStatus status) throws RuntimeException {
      assertTrue("Hasn't thread connection",!TransactionSynchronizationManager.hasResource(ds));
      assertTrue("JTA synchronizations active",TransactionSynchronizationManager.isSynchronizationActive());
      assertTrue("Is new transaction",status.isNewTransaction());
      Connection c=DataSourceUtils.getConnection(ds);
      assertTrue("Has thread connection",TransactionSynchronizationManager.hasResource(ds));
      DataSourceUtils.releaseConnection(c,ds);
      c=DataSourceUtils.getConnection(ds);
      assertTrue("Has thread connection",TransactionSynchronizationManager.hasResource(ds));
      DataSourceUtils.releaseConnection(c,ds);
      if (rollback) {
        status.setRollbackOnly();
      }
    }
  }
);
  assertTrue("Hasn't thread connection",!TransactionSynchronizationManager.hasResource(ds));
  assertTrue("JTA synchronizations not active",!TransactionSynchronizationManager.isSynchronizationActive());
  dsControl.verify();
  conControl.verify();
  utControl.verify();
}
