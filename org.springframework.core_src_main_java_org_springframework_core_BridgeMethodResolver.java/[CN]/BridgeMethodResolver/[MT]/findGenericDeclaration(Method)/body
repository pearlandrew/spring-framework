{
  Class superclass=bridgeMethod.getDeclaringClass().getSuperclass();
  while (!Object.class.equals(superclass)) {
    Method method=searchForMatch(superclass,bridgeMethod);
    if (method != null && !method.isBridge()) {
      return method;
    }
    superclass=superclass.getSuperclass();
  }
  Class[] interfaces=ClassUtils.getAllInterfacesForClass(bridgeMethod.getDeclaringClass());
  for (int i=0; i < interfaces.length; i++) {
    Class anInterface=interfaces[i];
    Method method=searchForMatch(anInterface,bridgeMethod);
    if (method != null && !method.isBridge()) {
      return method;
    }
  }
  return null;
}
