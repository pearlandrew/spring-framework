{
  if (bridgeMethod == null || !bridgeMethod.isBridge()) {
    return bridgeMethod;
  }
  List<Method> candidateMethods=new ArrayList<Method>();
  Method[] methods=ReflectionUtils.getAllDeclaredMethods(bridgeMethod.getDeclaringClass());
  for (  Method candidateMethod : methods) {
    if (isBridgedCandidateFor(candidateMethod,bridgeMethod)) {
      candidateMethods.add(candidateMethod);
    }
  }
  Method result;
  if (candidateMethods.size() == 1) {
    result=candidateMethods.get(0);
  }
 else {
    result=searchCandidates(candidateMethods,bridgeMethod);
  }
  if (result == null) {
    throw new IllegalStateException("Unable to locate bridged method for bridge method '" + bridgeMethod + "'");
  }
  return result;
}
