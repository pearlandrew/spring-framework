{
  final Class[] args={Object.class};
  for (Class clazz=this.visitorClass; clazz != null; clazz=clazz.getSuperclass()) {
    try {
      return clazz.getDeclaredMethod(VISIT_METHOD,args);
    }
 catch (    NoSuchMethodException ex) {
    }
  }
  if (logger.isWarnEnabled()) {
    logger.warn("No default '" + VISIT_METHOD + "' method found. Returning <null>.");
  }
  return null;
}
