{
  final MultiValueMap<String,Object> attributes=new LinkedMultiValueMap<String,Object>();
  process(element,annotationType,false,new Processor<Void>(){
    @Override public Void process(    Annotation annotation,    int metaDepth){
      if (annotation.annotationType().getName().equals(annotationType)) {
        for (        Map.Entry<String,Object> entry : AnnotationUtils.getAnnotationAttributes(annotation,classValuesAsString,nestedAnnotationsAsMap).entrySet()) {
          attributes.add(entry.getKey(),entry.getValue());
        }
      }
      return null;
    }
    @Override public void postProcess(    Annotation annotation,    Void result){
      for (      String key : attributes.keySet()) {
        if (!VALUE.equals(key)) {
          Object value=getValue(annotation,key);
          if (value != null) {
            attributes.add(key,value);
          }
        }
      }
    }
  }
);
  return (attributes.isEmpty() ? null : attributes);
}
