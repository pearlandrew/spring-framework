{
  if (visited.add(element)) {
    try {
      Annotation[] annotations=(searchClassHierarchy ? element.getDeclaredAnnotations() : element.getAnnotations());
      for (      Annotation annotation : annotations) {
        if (annotation.annotationType().getName().equals(annotationType) || metaDepth > 0) {
          T result=processor.process(annotation,metaDepth);
          if (result != null) {
            return result;
          }
          result=doProcess(annotation.annotationType(),annotationType,searchInterfaces,searchClassHierarchy,processor,visited,metaDepth + 1);
          if (result != null) {
            processor.postProcess(annotation,result);
            return result;
          }
        }
      }
      for (      Annotation annotation : annotations) {
        if (!AnnotationUtils.isInJavaLangAnnotationPackage(annotation)) {
          T result=doProcess(annotation.annotationType(),annotationType,searchInterfaces,searchClassHierarchy,processor,visited,metaDepth);
          if (result != null) {
            processor.postProcess(annotation,result);
            return result;
          }
        }
      }
      if (searchInterfaces && element instanceof Class) {
        Class<?> clazz=(Class<?>)element;
        for (        Class<?> ifc : clazz.getInterfaces()) {
          T result=doProcess(ifc,annotationType,searchInterfaces,searchClassHierarchy,processor,visited,metaDepth);
          if (result != null) {
            return result;
          }
        }
      }
      if (searchClassHierarchy && element instanceof Class) {
        Class<?> superclass=((Class<?>)element).getSuperclass();
        if (superclass != null && !superclass.equals(Object.class)) {
          T result=doProcess(superclass,annotationType,searchInterfaces,searchClassHierarchy,processor,visited,metaDepth);
          if (result != null) {
            return result;
          }
        }
      }
    }
 catch (    Exception ex) {
      AnnotationUtils.logIntrospectionFailure(element,ex);
    }
  }
  return null;
}
