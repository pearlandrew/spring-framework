{
  if (pvs == null || pvs.isEmpty()) {
    return;
  }
  MutablePropertyValues mpvs=null;
  List<PropertyValue> original;
  if (System.getSecurityManager() != null) {
    if (bw instanceof BeanWrapperImpl) {
      ((BeanWrapperImpl)bw).setSecurityContext(getAccessControlContext());
    }
  }
  if (pvs instanceof MutablePropertyValues) {
    mpvs=(MutablePropertyValues)pvs;
    if (mpvs.isConverted()) {
      try {
        bw.setPropertyValues(mpvs);
        return;
      }
 catch (      BeansException ex) {
        throw new BeanCreationException(mbd.getResourceDescription(),beanName,"Error setting property values",ex);
      }
    }
    original=mpvs.getPropertyValueList();
  }
 else {
    original=Arrays.asList(pvs.getPropertyValues());
  }
  TypeConverter converter=getCustomTypeConverter();
  if (converter == null) {
    converter=bw;
  }
  BeanDefinitionValueResolver valueResolver=new BeanDefinitionValueResolver(this,beanName,mbd,converter);
  List<PropertyValue> deepCopy=new ArrayList<>(original.size());
  boolean resolveNecessary=false;
  for (  PropertyValue pv : original) {
    if (pv.isConverted()) {
      deepCopy.add(pv);
    }
 else {
      String propertyName=pv.getName();
      Object originalValue=pv.getValue();
      Object resolvedValue=valueResolver.resolveValueIfNecessary(pv,originalValue);
      Object convertedValue=resolvedValue;
      boolean convertible=bw.isWritableProperty(propertyName) && !PropertyAccessorUtils.isNestedOrIndexedProperty(propertyName);
      if (convertible) {
        convertedValue=convertForProperty(resolvedValue,propertyName,bw,converter);
      }
      if (resolvedValue == originalValue) {
        if (convertible) {
          pv.setConvertedValue(convertedValue);
        }
        deepCopy.add(pv);
      }
 else       if (convertible && originalValue instanceof TypedStringValue && !((TypedStringValue)originalValue).isDynamic()&& !(convertedValue instanceof Collection || ObjectUtils.isArray(convertedValue))) {
        pv.setConvertedValue(convertedValue);
        deepCopy.add(pv);
      }
 else {
        resolveNecessary=true;
        deepCopy.add(new PropertyValue(pv,convertedValue));
      }
    }
  }
  if (mpvs != null && !resolveNecessary) {
    mpvs.setConverted();
  }
  try {
    bw.setPropertyValues(new MutablePropertyValues(deepCopy));
  }
 catch (  BeansException ex) {
    throw new BeanCreationException(mbd.getResourceDescription(),beanName,"Error setting property values",ex);
  }
}
