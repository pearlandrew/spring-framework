{
  Class beanClass;
  if (mbd.getFactoryMethodName() != null) {
    beanClass=getTypeForFactoryMethod(beanName,mbd,typesToMatch);
  }
 else {
    beanClass=resolveBeanClass(mbd,beanName,typesToMatch);
  }
  if (beanClass != null && !mbd.isSynthetic() && hasInstantiationAwareBeanPostProcessors()) {
    for (    BeanPostProcessor bp : getBeanPostProcessors()) {
      if (bp instanceof SmartInstantiationAwareBeanPostProcessor) {
        SmartInstantiationAwareBeanPostProcessor ibp=(SmartInstantiationAwareBeanPostProcessor)bp;
        Class processedType=ibp.predictBeanType(beanClass,beanName);
        if (processedType != null) {
          return processedType;
        }
      }
    }
  }
  if (FactoryBean.class.equals(beanClass) && mbd.isSingleton() && (typesToMatch.length > 1 || (typesToMatch.length == 1 && !typesToMatch[0].equals(FactoryBean.class)))) {
    return getSingletonFactoryBeanForTypeCheck(beanName,mbd).getClass();
  }
  return beanClass;
}
