{
  GsonHttpMessageConverter converter=new GsonHttpMessageConverter(){
    @Override protected TypeToken<?> getTypeToken(    Type type){
      if (type instanceof Class && List.class.isAssignableFrom((Class<?>)type)) {
        return new TypeToken<ArrayList<MyBean>>(){
        }
;
      }
 else {
        return super.getTypeToken(type);
      }
    }
  }
;
  String body="[{\"bytes\":[1,2],\"array\":[\"Foo\",\"Bar\"],\"number\":42,\"string\":\"Foo\",\"bool\":true,\"fraction\":42.0}]";
  MockHttpInputMessage inputMessage=new MockHttpInputMessage(body.getBytes(UTF8));
  inputMessage.getHeaders().setContentType(new MediaType("application","json"));
  List<MyBean> results=(List<MyBean>)converter.read(List.class,inputMessage);
  assertEquals(1,results.size());
  MyBean result=results.get(0);
  assertEquals("Foo",result.getString());
  assertEquals(42,result.getNumber());
  assertEquals(42F,result.getFraction(),0F);
  assertArrayEquals(new String[]{"Foo","Bar"},result.getArray());
  assertTrue(result.isBool());
  assertArrayEquals(new byte[]{0x1,0x2},result.getBytes());
}
