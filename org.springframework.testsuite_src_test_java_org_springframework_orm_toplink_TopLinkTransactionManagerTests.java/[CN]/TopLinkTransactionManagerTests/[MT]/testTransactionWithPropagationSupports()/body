{
  MockControl sessionControl=MockControl.createControl(Session.class);
  final Session session=(Session)sessionControl.getMock();
  final SessionFactory sf=new MockSessionFactory(session);
  session.release();
  sessionControl.setVoidCallable();
  sessionControl.replay();
  PlatformTransactionManager tm=new TopLinkTransactionManager(sf);
  TransactionTemplate tt=new TransactionTemplate(tm);
  tt.setPropagationBehavior(TransactionDefinition.PROPAGATION_SUPPORTS);
  assertTrue("Hasn't thread session",!TransactionSynchronizationManager.hasResource(sf));
  tt.execute(new TransactionCallback(){
    public Object doInTransaction(    TransactionStatus status){
      assertTrue("Hasn't thread session",!TransactionSynchronizationManager.hasResource(sf));
      assertTrue("Is not new transaction",!status.isNewTransaction());
      TopLinkTemplate ht=new TopLinkTemplate(sf);
      ht.execute(new TopLinkCallback(){
        public Object doInTopLink(        Session session){
          return null;
        }
      }
);
      assertTrue("Has thread session",TransactionSynchronizationManager.hasResource(sf));
      return null;
    }
  }
);
  assertTrue("Hasn't thread session",!TransactionSynchronizationManager.hasResource(sf));
  sessionControl.verify();
}
