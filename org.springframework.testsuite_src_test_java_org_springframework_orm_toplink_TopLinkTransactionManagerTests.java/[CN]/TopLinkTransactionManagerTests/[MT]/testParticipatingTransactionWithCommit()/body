{
  MockControl sessionControl=MockControl.createControl(Session.class);
  final Session session=(Session)sessionControl.getMock();
  MockControl uowControl=MockControl.createControl(UnitOfWork.class);
  UnitOfWork uow=(UnitOfWork)uowControl.getMock();
  final SessionFactory sf=new MockSessionFactory(session);
  session.getActiveUnitOfWork();
  sessionControl.setReturnValue(uow,2);
  uow.beginEarlyTransaction();
  uowControl.setVoidCallable(1);
  uow.commit();
  uowControl.setVoidCallable();
  session.release();
  sessionControl.setVoidCallable();
  sessionControl.replay();
  uowControl.replay();
  PlatformTransactionManager tm=new TopLinkTransactionManager(sf);
  final TransactionTemplate tt=new TransactionTemplate(tm);
  Object result=tt.execute(new TransactionCallback(){
    public Object doInTransaction(    TransactionStatus status){
      return tt.execute(new TransactionCallback(){
        public Object doInTransaction(        TransactionStatus status){
          TopLinkTemplate ht=new TopLinkTemplate(sf);
          return ht.executeFind(new TopLinkCallback(){
            public Object doInTopLink(            Session injectedSession){
              assertTrue(session == injectedSession);
              return null;
            }
          }
);
        }
      }
);
    }
  }
);
  sessionControl.verify();
  uowControl.verify();
}
