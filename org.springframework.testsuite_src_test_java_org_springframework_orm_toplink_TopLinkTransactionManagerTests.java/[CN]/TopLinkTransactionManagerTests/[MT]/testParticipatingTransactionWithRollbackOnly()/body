{
  MockControl sessionControl=MockControl.createControl(Session.class);
  final Session session=(Session)sessionControl.getMock();
  final SessionFactory sf=new MockSessionFactory(session);
  session.release();
  sessionControl.setVoidCallable();
  sessionControl.replay();
  TopLinkTransactionManager tm=new TopLinkTransactionManager(sf);
  tm.setLazyDatabaseTransaction(true);
  final TransactionTemplate tt=new TransactionTemplate(tm);
  try {
    tt.execute(new TransactionCallback(){
      public Object doInTransaction(      TransactionStatus status){
        tt.execute(new TransactionCallback(){
          public Object doInTransaction(          TransactionStatus status){
            TopLinkTemplate ht=new TopLinkTemplate(sf);
            ht.execute(new TopLinkCallback(){
              public Object doInTopLink(              Session session){
                return null;
              }
            }
);
            status.setRollbackOnly();
            return null;
          }
        }
);
        return null;
      }
    }
);
    fail("Should have thrown UnexpectedRollbackException");
  }
 catch (  UnexpectedRollbackException ex) {
  }
  sessionControl.verify();
}
