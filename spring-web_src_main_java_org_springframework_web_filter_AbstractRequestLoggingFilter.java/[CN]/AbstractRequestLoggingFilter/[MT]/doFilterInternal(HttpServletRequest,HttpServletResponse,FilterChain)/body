{
  boolean isFirstRequest=!isAsyncDispatch(request);
  HttpServletRequest requestToUse=request;
  if (isIncludePayload() && isFirstRequest && !(request instanceof ContentCachingRequestWrapper)) {
    requestToUse=new ContentCachingRequestWrapper(request);
  }
  boolean shouldLog=shouldLog(requestToUse);
  if (shouldLog && isFirstRequest) {
    beforeRequest(requestToUse,getBeforeMessage(requestToUse));
  }
  try {
    filterChain.doFilter(requestToUse,response);
  }
  finally {
    if (shouldLog && !isAsyncStarted(requestToUse)) {
      afterRequest(requestToUse,getAfterMessage(requestToUse));
    }
  }
}
