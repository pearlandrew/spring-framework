{
  StringBuilder msg=new StringBuilder();
  msg.append(prefix);
  msg.append("uri=").append(request.getRequestURI());
  if (isIncludeQueryString()) {
    String queryString=request.getQueryString();
    if (queryString != null) {
      msg.append('?').append(queryString);
    }
  }
  if (isIncludeClientInfo()) {
    String client=request.getRemoteAddr();
    if (StringUtils.hasLength(client)) {
      msg.append(";client=").append(client);
    }
    HttpSession session=request.getSession(false);
    if (session != null) {
      msg.append(";session=").append(session.getId());
    }
    String user=request.getRemoteUser();
    if (user != null) {
      msg.append(";user=").append(user);
    }
  }
  if (isIncludeHeaders()) {
    msg.append(";headers=").append(new ServletServerHttpRequest(request).getHeaders());
  }
  if (isIncludePayload()) {
    ContentCachingRequestWrapper wrapper=WebUtils.getNativeRequest(request,ContentCachingRequestWrapper.class);
    if (wrapper != null) {
      byte[] buf=wrapper.getContentAsByteArray();
      if (buf.length > 0) {
        int length=Math.min(buf.length,getMaxPayloadLength());
        String payload;
        try {
          payload=new String(buf,0,length,wrapper.getCharacterEncoding());
        }
 catch (        UnsupportedEncodingException ex) {
          payload="[unknown]";
        }
        msg.append(";payload=").append(payload);
      }
    }
  }
  msg.append(suffix);
  return msg.toString();
}
