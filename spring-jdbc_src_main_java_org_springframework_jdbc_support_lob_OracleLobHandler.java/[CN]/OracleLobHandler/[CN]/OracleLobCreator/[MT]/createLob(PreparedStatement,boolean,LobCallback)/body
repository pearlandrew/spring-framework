{
  Connection con=null;
  try {
    con=getOracleConnection(ps);
    initOracleDriverClasses(con);
    Object lob=prepareLob(con,clob ? clobClass : blobClass);
    callback.populateLob(lob);
    lob.getClass().getMethod("close",(Class[])null).invoke(lob,(Object[])null);
    this.createdLobs.add(lob);
    if (logger.isDebugEnabled()) {
      logger.debug("Created new Oracle " + (clob ? "CLOB" : "BLOB"));
    }
    return lob;
  }
 catch (  SQLException ex) {
    throw ex;
  }
catch (  InvocationTargetException ex) {
    if (ex.getTargetException() instanceof SQLException) {
      throw (SQLException)ex.getTargetException();
    }
 else     if (con != null && ex.getTargetException() instanceof ClassCastException) {
      throw new InvalidDataAccessApiUsageException("OracleLobCreator needs to work on [oracle.jdbc.OracleConnection], not on [" + con.getClass().getName() + "]: specify a corresponding NativeJdbcExtractor",ex.getTargetException());
    }
 else {
      throw new DataAccessResourceFailureException("Could not create Oracle LOB",ex.getTargetException());
    }
  }
catch (  Exception ex) {
    throw new DataAccessResourceFailureException("Could not create Oracle LOB",ex);
  }
}
