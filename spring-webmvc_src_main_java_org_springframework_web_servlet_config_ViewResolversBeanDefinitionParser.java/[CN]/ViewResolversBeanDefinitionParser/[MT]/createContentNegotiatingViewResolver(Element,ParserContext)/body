{
  RootBeanDefinition beanDef=new RootBeanDefinition(ContentNegotiatingViewResolver.class);
  beanDef.setSource(context.extractSource(resolverElement));
  beanDef.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);
  MutablePropertyValues values=beanDef.getPropertyValues();
  List<Element> elements=DomUtils.getChildElementsByTagName(resolverElement,new String[]{"default-views"});
  if (!elements.isEmpty()) {
    ManagedList<Object> list=new ManagedList<Object>();
    for (    Element element : DomUtils.getChildElementsByTagName(elements.get(0),"bean","ref")) {
      list.add(context.getDelegate().parsePropertySubElement(element,null));
    }
    values.add("defaultViews",list);
  }
  if (resolverElement.hasAttribute("use-not-acceptable")) {
    values.add("useNotAcceptableStatusCode",resolverElement.getAttribute("use-not-acceptable"));
  }
  String beanName=AnnotationDrivenBeanDefinitionParser.CONTENT_NEGOTIATION_MANAGER_BEAN_NAME;
  if (context.getRegistry().containsBeanDefinition(beanName)) {
    values.add("contentNegotiationManager",new RuntimeBeanReference(beanName));
  }
  return beanDef;
}
