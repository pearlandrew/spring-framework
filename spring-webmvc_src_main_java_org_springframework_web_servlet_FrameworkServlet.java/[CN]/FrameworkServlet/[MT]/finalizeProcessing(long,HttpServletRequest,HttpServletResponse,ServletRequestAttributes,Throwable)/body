{
  Throwable failureCause=null;
  try {
    if (t != null) {
      if (t instanceof ServletException) {
        failureCause=t;
        throw (ServletException)t;
      }
 else       if (t instanceof IOException) {
        failureCause=t;
        throw (IOException)t;
      }
 else {
        NestedServletException ex=new NestedServletException("Request processing failed",t);
        failureCause=ex;
        throw ex;
      }
    }
  }
  finally {
    if (requestAttributes != null) {
      requestAttributes.requestCompleted();
    }
    if (logger.isDebugEnabled()) {
      if (failureCause != null) {
        this.logger.debug("Could not complete request",failureCause);
      }
 else {
        this.logger.debug("Successfully completed request");
      }
    }
    if (this.publishEvents) {
      long processingTime=System.currentTimeMillis() - startTime;
      this.webApplicationContext.publishEvent(new ServletRequestHandledEvent(this,request.getRequestURI(),request.getRemoteAddr(),request.getMethod(),getServletConfig().getServletName(),WebUtils.getSessionId(request),getUsernameForRequest(request),processingTime,failureCause));
    }
  }
}
