{
  return new TimeZoneAwareLocaleContext(){
    @Override public Locale getLocale(){
      Locale locale=(Locale)WebUtils.getSessionAttribute(request,LOCALE_SESSION_ATTRIBUTE_NAME);
      if (locale == null) {
        locale=determineDefaultLocale(request);
      }
      return locale;
    }
    @Override public TimeZone getTimeZone(){
      TimeZone timeZone=(TimeZone)WebUtils.getSessionAttribute(request,TIME_ZONE_SESSION_ATTRIBUTE_NAME);
      if (timeZone == null) {
        timeZone=determineDefaultTimeZone(request);
      }
      return timeZone;
    }
  }
;
}
