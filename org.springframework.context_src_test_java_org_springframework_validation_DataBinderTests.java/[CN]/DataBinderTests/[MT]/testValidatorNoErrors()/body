{
  TestBean tb=new TestBean();
  tb.setAge(33);
  tb.setName("Rod");
  try {
    tb.setTouchy("Rod");
  }
 catch (  Exception e) {
    fail("Should not throw any Exception");
  }
  TestBean tb2=new TestBean();
  tb2.setAge(34);
  tb.setSpouse(tb2);
  DataBinder db=new DataBinder(tb,"tb");
  MutablePropertyValues pvs=new MutablePropertyValues();
  pvs.addPropertyValue("spouse.age","argh");
  db.bind(pvs);
  Errors errors=db.getBindingResult();
  Validator testValidator=new TestBeanValidator();
  testValidator.validate(tb,errors);
  errors.setNestedPath("spouse");
  assertEquals("spouse.",errors.getNestedPath());
  assertEquals("argh",errors.getFieldValue("age"));
  Validator spouseValidator=new SpouseValidator();
  spouseValidator.validate(tb.getSpouse(),errors);
  errors.setNestedPath("");
  assertEquals("",errors.getNestedPath());
  errors.pushNestedPath("spouse");
  assertEquals("spouse.",errors.getNestedPath());
  errors.pushNestedPath("spouse");
  assertEquals("spouse.spouse.",errors.getNestedPath());
  errors.popNestedPath();
  assertEquals("spouse.",errors.getNestedPath());
  errors.popNestedPath();
  assertEquals("",errors.getNestedPath());
  try {
    errors.popNestedPath();
  }
 catch (  IllegalStateException ex) {
  }
  errors.pushNestedPath("spouse");
  assertEquals("spouse.",errors.getNestedPath());
  errors.setNestedPath("");
  assertEquals("",errors.getNestedPath());
  try {
    errors.popNestedPath();
  }
 catch (  IllegalStateException ex) {
  }
  errors.pushNestedPath("spouse");
  assertEquals("spouse.",errors.getNestedPath());
  assertEquals(1,errors.getErrorCount());
  assertTrue(!errors.hasGlobalErrors());
  assertEquals(1,errors.getFieldErrorCount("age"));
  assertTrue(!errors.hasFieldErrors("name"));
}
