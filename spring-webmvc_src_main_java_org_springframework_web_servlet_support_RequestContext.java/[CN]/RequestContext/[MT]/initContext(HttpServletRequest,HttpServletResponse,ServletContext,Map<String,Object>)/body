{
  this.request=request;
  this.response=response;
  this.model=model;
  this.webApplicationContext=(WebApplicationContext)request.getAttribute(WEB_APPLICATION_CONTEXT_ATTRIBUTE);
  if (this.webApplicationContext == null) {
    this.webApplicationContext=RequestContextUtils.getWebApplicationContext(request,servletContext);
  }
  LocaleResolver localeResolver=RequestContextUtils.getLocaleResolver(request);
  if (localeResolver instanceof LocaleContextResolver) {
    LocaleContext localeContext=((LocaleContextResolver)localeResolver).resolveLocaleContext(request);
    this.locale=localeContext.getLocale();
    if (localeContext instanceof TimeZoneAwareLocaleContext) {
      this.timeZone=((TimeZoneAwareLocaleContext)localeContext).getTimeZone();
    }
  }
 else   if (localeResolver != null) {
    this.locale=localeResolver.resolveLocale(request);
  }
  if (this.locale == null) {
    this.locale=getFallbackLocale();
  }
  if (this.timeZone == null) {
    this.timeZone=getFallbackTimeZone();
  }
  this.defaultHtmlEscape=WebUtils.getDefaultHtmlEscape(this.webApplicationContext.getServletContext());
  this.urlPathHelper=new UrlPathHelper();
  if (this.webApplicationContext.containsBean(REQUEST_DATA_VALUE_PROCESSOR_BEAN_NAME)) {
    this.requestDataValueProcessor=this.webApplicationContext.getBean(REQUEST_DATA_VALUE_PROCESSOR_BEAN_NAME,RequestDataValueProcessor.class);
  }
}
