{
  DispatcherPortlet portlet=new DispatcherPortlet(){
    protected ApplicationContext createPortletApplicationContext(    ApplicationContext parent) throws BeansException {
      StaticPortletApplicationContext wac=new StaticPortletApplicationContext();
      wac.setPortletContext(new MockPortletContext());
      RootBeanDefinition bd=new RootBeanDefinition(MyParameterDispatchingController.class);
      bd.setScope(WebApplicationContext.SCOPE_REQUEST);
      wac.registerBeanDefinition("controller",bd);
      AnnotationConfigUtils.registerAnnotationConfigProcessors(wac);
      wac.refresh();
      return wac;
    }
  }
;
  portlet.init(new MockPortletConfig());
  MockRenderRequest request=new MockRenderRequest(PortletMode.VIEW);
  MockRenderResponse response=new MockRenderResponse();
  portlet.render(request,response);
  assertEquals("myView",response.getContentAsString());
  request=new MockRenderRequest(PortletMode.VIEW);
  request.addParameter("view","other");
  response=new MockRenderResponse();
  portlet.render(request,response);
  assertEquals("myOtherView",response.getContentAsString());
  request=new MockRenderRequest(PortletMode.VIEW);
  request.addParameter("view","my");
  request.addParameter("lang","de");
  response=new MockRenderResponse();
  portlet.render(request,response);
  assertEquals("myLangView",response.getContentAsString());
  request=new MockRenderRequest(PortletMode.VIEW);
  request.addParameter("surprise","!");
  response=new MockRenderResponse();
  portlet.render(request,response);
  assertEquals("mySurpriseView",response.getContentAsString());
}
