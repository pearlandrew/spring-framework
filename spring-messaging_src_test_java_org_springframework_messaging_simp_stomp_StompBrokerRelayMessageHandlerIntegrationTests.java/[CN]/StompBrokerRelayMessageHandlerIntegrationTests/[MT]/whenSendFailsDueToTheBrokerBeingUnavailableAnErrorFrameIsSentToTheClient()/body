{
  String sessionId="abc123";
  final CountDownLatch errorLatch=new CountDownLatch(1);
  messageChannel.subscribe(new MessageHandler(){
    @Override public void handleMessage(    Message<?> message) throws MessagingException {
      StompHeaderAccessor headers=StompHeaderAccessor.wrap(message);
      if (headers.getCommand() == StompCommand.ERROR) {
        errorLatch.countDown();
      }
    }
  }
);
  relay.handleMessage(createConnectMessage(sessionId));
  stompBroker.awaitMessages(2);
  assertEquals(1,brokerAvailabilityListener.availabilityEvents.size());
  assertTrue(brokerAvailabilityListener.availabilityEvents.get(0) instanceof BrokerBecameAvailableEvent);
  stompBroker.stop();
  relay.handleMessage(createSubscribeMessage(sessionId,"/topic/test/"));
  errorLatch.await(30,TimeUnit.SECONDS);
  assertEquals(2,brokerAvailabilityListener.availabilityEvents.size());
  assertTrue(brokerAvailabilityListener.availabilityEvents.get(0) instanceof BrokerBecameAvailableEvent);
  assertTrue(brokerAvailabilityListener.availabilityEvents.get(1) instanceof BrokerBecameUnavailableEvent);
}
