{
  String sessionId="abc123";
  final CountDownLatch errorLatch=new CountDownLatch(1);
  this.messageChannel.subscribe(new MessageHandler(){
    @Override public void handleMessage(    Message<?> message) throws MessagingException {
      StompHeaderAccessor headers=StompHeaderAccessor.wrap(message);
      if (headers.getCommand() == StompCommand.ERROR) {
        errorLatch.countDown();
      }
    }
  }
);
  this.stompBroker.awaitMessages(1);
  List<BrokerAvailabilityEvent> availabilityEvents=this.brokerAvailabilityListener.awaitAvailabilityEvents(1);
  assertTrue(availabilityEvents.get(0) instanceof BrokerBecameAvailableEvent);
  this.stompBroker.stop();
  this.relay.handleMessage(createConnectMessage(sessionId));
  errorLatch.await(30,TimeUnit.SECONDS);
  availabilityEvents=brokerAvailabilityListener.awaitAvailabilityEvents(2);
  assertTrue(availabilityEvents.get(0) instanceof BrokerBecameAvailableEvent);
  assertTrue(availabilityEvents.get(1) instanceof BrokerBecameUnavailableEvent);
}
