{
  if (logger.isInfoEnabled()) {
    if (!ObjectUtils.isEmpty(this.mappingLocations)) {
      logger.info("Configured using [" + StringUtils.arrayToCommaDelimitedString(this.mappingLocations) + "]");
    }
    if (!ObjectUtils.isEmpty(this.targetClasses)) {
      logger.info("Configured for target classes " + StringUtils.arrayToCommaDelimitedString(targetClasses) + "]");
    }
    if (!ObjectUtils.isEmpty(this.targetPackages)) {
      logger.info("Configured for target packages [" + StringUtils.arrayToCommaDelimitedString(targetPackages) + "]");
    }
    if (ObjectUtils.isEmpty(this.mappingLocations) && ObjectUtils.isEmpty(this.targetClasses) && ObjectUtils.isEmpty(this.targetPackages)) {
      logger.info("Using default configuration");
    }
  }
  try {
    this.xmlContext=createXMLContext(this.mappingLocations,this.targetClasses,this.targetPackages);
  }
 catch (  MappingException ex) {
    throw new CastorMappingException("Could not load Castor mapping",ex);
  }
catch (  ResolverException ex) {
    throw new CastorMappingException("Could not resolve Castor mapping",ex);
  }
}
