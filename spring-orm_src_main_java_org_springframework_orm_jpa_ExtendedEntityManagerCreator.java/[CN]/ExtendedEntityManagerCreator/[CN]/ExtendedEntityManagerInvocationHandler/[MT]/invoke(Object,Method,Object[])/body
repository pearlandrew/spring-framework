{
  if (method.getName().equals("equals")) {
    return (proxy == args[0]);
  }
 else   if (method.getName().equals("hashCode")) {
    return hashCode();
  }
 else   if (method.getName().equals("getTargetEntityManager")) {
    return this.target;
  }
 else   if (method.getName().equals("unwrap")) {
    Class targetClass=(Class)args[0];
    if (targetClass == null || targetClass.isInstance(proxy)) {
      return proxy;
    }
  }
 else   if (method.getName().equals("isOpen")) {
    if (this.containerManaged) {
      return true;
    }
  }
 else   if (method.getName().equals("close")) {
    if (this.containerManaged) {
      throw new IllegalStateException("Invalid usage: Cannot close a container-managed EntityManager");
    }
    ExtendedEntityManagerSynchronization synch=(ExtendedEntityManagerSynchronization)TransactionSynchronizationManager.getResource(this.target);
    if (synch != null) {
      synch.closeOnCompletion=true;
      return null;
    }
  }
 else   if (method.getName().equals("getTransaction")) {
    if (this.synchronizedWithTransaction) {
      throw new IllegalStateException("Cannot obtain local EntityTransaction from a transaction-synchronized EntityManager");
    }
  }
 else   if (method.getName().equals("joinTransaction")) {
    doJoinTransaction(true);
    return null;
  }
 else   if (method.getName().equals("isJoinedToTransaction")) {
    if (!this.jta) {
      return TransactionSynchronizationManager.hasResource(this.target);
    }
  }
  if (this.synchronizedWithTransaction && method.getDeclaringClass().isInterface()) {
    doJoinTransaction(false);
  }
  try {
    if (method.getDeclaringClass().equals(EntityManagerPlusOperations.class)) {
      return method.invoke(this.plusOperations,args);
    }
 else {
      return method.invoke(this.target,args);
    }
  }
 catch (  InvocationTargetException ex) {
    throw ex.getTargetException();
  }
}
