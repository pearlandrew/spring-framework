{
  if (this.burlapProxy == null) {
    throw new IllegalStateException("BurlapClientInterceptor is not properly initialized - " + "invoke 'prepare' before attempting any operations");
  }
  ClassLoader originalClassLoader=overrideThreadContextClassLoader();
  try {
    return invocation.getMethod().invoke(this.burlapProxy,invocation.getArguments());
  }
 catch (  InvocationTargetException ex) {
    if (ex.getTargetException() instanceof BurlapRuntimeException) {
      BurlapRuntimeException bre=(BurlapRuntimeException)ex.getTargetException();
      Throwable rootCause=(bre.getRootCause() != null ? bre.getRootCause() : bre);
      throw convertBurlapAccessException(rootCause);
    }
 else     if (ex.getTargetException() instanceof UndeclaredThrowableException) {
      UndeclaredThrowableException utex=(UndeclaredThrowableException)ex.getTargetException();
      throw convertBurlapAccessException(utex.getUndeclaredThrowable());
    }
    throw ex.getTargetException();
  }
catch (  Throwable ex) {
    throw new RemoteProxyFailureException("Failed to invoke Burlap proxy for remote service [" + getServiceUrl() + "]",ex);
  }
 finally {
    resetThreadContextClassLoader(originalClassLoader);
  }
}
