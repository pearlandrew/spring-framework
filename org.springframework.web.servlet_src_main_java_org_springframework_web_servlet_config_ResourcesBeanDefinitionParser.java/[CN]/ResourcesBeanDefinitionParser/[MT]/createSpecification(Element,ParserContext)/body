{
  String mapping=element.getAttribute("mapping");
  if (!StringUtils.hasText(mapping)) {
    parserContext.getReaderContext().error("The 'mapping' attribute is required.",parserContext.extractSource(element));
    return null;
  }
  String[] locations=StringUtils.commaDelimitedListToStringArray(element.getAttribute("location"));
  if (locations.length == 0) {
    parserContext.getReaderContext().error("The 'location' attribute is required.",parserContext.extractSource(element));
    return null;
  }
  MvcResources spec=new MvcResources(mapping,locations);
  if (element.hasAttribute("cache-period")) {
    spec.cachePeriod(element.getAttribute("cache-period"));
  }
  if (element.hasAttribute("order")) {
    spec.order(element.getAttribute("order"));
  }
  spec.source(parserContext.extractSource(element));
  spec.sourceName(element.getTagName());
  return spec;
}
