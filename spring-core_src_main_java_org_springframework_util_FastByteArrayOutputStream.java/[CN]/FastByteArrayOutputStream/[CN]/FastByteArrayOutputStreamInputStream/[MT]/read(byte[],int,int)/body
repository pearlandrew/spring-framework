{
  if (b == null) {
    throw new NullPointerException();
  }
 else   if (off < 0 || len < 0 || len > b.length - off) {
    throw new IndexOutOfBoundsException();
  }
 else   if (len == 0) {
    return 0;
  }
 else   if (len < 0) {
    throw new IllegalArgumentException("len must be 0 or greater: " + len);
  }
 else   if (off < 0) {
    throw new IllegalArgumentException("off must be 0 or greater: " + off);
  }
 else {
    if (currentBuffer == null) {
      return 0;
    }
 else {
      if (nextIndexInCurrentBuffer < currentBufferLength) {
        int bytesToCopy=Math.min(len,currentBufferLength - nextIndexInCurrentBuffer);
        System.arraycopy(currentBuffer,nextIndexInCurrentBuffer,b,off,bytesToCopy);
        totalBytesRead+=bytesToCopy;
        nextIndexInCurrentBuffer+=bytesToCopy;
        return bytesToCopy + read(b,off + bytesToCopy,len - bytesToCopy);
      }
 else {
        if (buffersIterator.hasNext()) {
          currentBuffer=buffersIterator.next();
          if (currentBuffer == fastByteArrayOutputStream.buffers.getLast()) {
            currentBufferLength=fastByteArrayOutputStream.index;
          }
 else {
            currentBufferLength=currentBuffer.length;
          }
          nextIndexInCurrentBuffer=0;
        }
 else {
          currentBuffer=null;
        }
        return read(b,off,len);
      }
    }
  }
}
