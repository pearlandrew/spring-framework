{
  if (n > Integer.MAX_VALUE) {
    throw new IllegalArgumentException("n exceeds maximum (" + Integer.MAX_VALUE + "): "+ n);
  }
 else   if (n == 0) {
    return 0;
  }
 else   if (n < 0) {
    throw new IllegalArgumentException("n must be 0 or greater: " + n);
  }
  int len=(int)n;
  if (currentBuffer == null) {
    return 0;
  }
 else {
    if (nextIndexInCurrentBuffer < currentBufferLength) {
      int bytesToSkip=Math.min(len,currentBufferLength - nextIndexInCurrentBuffer);
      totalBytesRead+=bytesToSkip;
      nextIndexInCurrentBuffer+=bytesToSkip;
      return bytesToSkip + skip(len - bytesToSkip);
    }
 else {
      if (buffersIterator.hasNext()) {
        currentBuffer=buffersIterator.next();
        if (currentBuffer == fastByteArrayOutputStream.buffers.getLast()) {
          currentBufferLength=fastByteArrayOutputStream.index;
        }
 else {
          currentBufferLength=currentBuffer.length;
        }
        nextIndexInCurrentBuffer=0;
      }
 else {
        currentBuffer=null;
      }
      return skip(len);
    }
  }
}
