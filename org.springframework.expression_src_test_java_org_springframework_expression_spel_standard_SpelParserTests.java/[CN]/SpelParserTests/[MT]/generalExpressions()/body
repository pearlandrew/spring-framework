{
  try {
    SpelExpressionParser parser=new SpelExpressionParser();
    parser.parse("new String[3]");
    Assert.fail();
  }
 catch (  ParseException e) {
    Assert.assertTrue(e instanceof SpelParseException);
    SpelParseException spe=(SpelParseException)e;
    Assert.assertEquals(SpelMessages.MISSING_CONSTRUCTOR_ARGS,spe.getMessageUnformatted());
    Assert.assertEquals(10,spe.getPosition());
  }
  try {
    SpelExpressionParser parser=new SpelExpressionParser();
    parser.parse("new String");
    Assert.fail();
  }
 catch (  ParseException e) {
    Assert.assertTrue(e instanceof SpelParseException);
    SpelParseException spe=(SpelParseException)e;
    Assert.assertEquals(SpelMessages.MISSING_CONSTRUCTOR_ARGS,spe.getMessageUnformatted());
    Assert.assertEquals(10,spe.getPosition());
  }
  try {
    SpelExpressionParser parser=new SpelExpressionParser();
    parser.parse("new String(3,");
    Assert.fail();
  }
 catch (  ParseException e) {
    Assert.assertTrue(e instanceof SpelParseException);
    SpelParseException spe=(SpelParseException)e;
    Assert.assertEquals(SpelMessages.RUN_OUT_OF_ARGUMENTS,spe.getMessageUnformatted());
    Assert.assertEquals(10,spe.getPosition());
  }
  try {
    SpelExpressionParser parser=new SpelExpressionParser();
    parser.parse("new String(3");
    Assert.fail();
  }
 catch (  ParseException e) {
    Assert.assertTrue(e instanceof SpelParseException);
    SpelParseException spe=(SpelParseException)e;
    Assert.assertEquals(SpelMessages.RUN_OUT_OF_ARGUMENTS,spe.getMessageUnformatted());
    Assert.assertEquals(10,spe.getPosition());
  }
  try {
    SpelExpressionParser parser=new SpelExpressionParser();
    parser.parse("new String(");
    Assert.fail();
  }
 catch (  ParseException e) {
    Assert.assertTrue(e instanceof SpelParseException);
    SpelParseException spe=(SpelParseException)e;
    Assert.assertEquals(SpelMessages.RUN_OUT_OF_ARGUMENTS,spe.getMessageUnformatted());
    Assert.assertEquals(10,spe.getPosition());
  }
  try {
    SpelExpressionParser parser=new SpelExpressionParser();
    parser.parse("\"abc");
    Assert.fail();
  }
 catch (  ParseException e) {
    Assert.assertTrue(e instanceof SpelParseException);
    SpelParseException spe=(SpelParseException)e;
    Assert.assertEquals(SpelMessages.NON_TERMINATING_DOUBLE_QUOTED_STRING,spe.getMessageUnformatted());
    Assert.assertEquals(0,spe.getPosition());
  }
  try {
    SpelExpressionParser parser=new SpelExpressionParser();
    parser.parse("'abc");
    Assert.fail();
  }
 catch (  ParseException e) {
    Assert.assertTrue(e instanceof SpelParseException);
    SpelParseException spe=(SpelParseException)e;
    Assert.assertEquals(SpelMessages.NON_TERMINATING_QUOTED_STRING,spe.getMessageUnformatted());
    Assert.assertEquals(0,spe.getPosition());
  }
}
