{
  Set<String> dependencies=this.dependentBeanMap.remove(beanName);
  if (dependencies != null) {
    if (logger.isDebugEnabled()) {
      logger.debug("Retrieved dependent beans for bean '" + beanName + "': "+ dependencies);
    }
    for (    String dependentBeanName : dependencies) {
      destroySingleton(dependentBeanName);
    }
  }
  if (bean != null) {
    try {
      bean.destroy();
    }
 catch (    Throwable ex) {
      logger.error("Destroy method on bean with name '" + beanName + "' threw an exception",ex);
    }
  }
  Set<String> containedBeans=this.containedBeanMap.remove(beanName);
  if (containedBeans != null) {
    for (    String containedBeanName : containedBeans) {
      destroySingleton(containedBeanName);
    }
  }
synchronized (this.dependentBeanMap) {
    for (Iterator<Map.Entry<String,Set<String>>> it=this.dependentBeanMap.entrySet().iterator(); it.hasNext(); ) {
      Map.Entry<String,Set<String>> entry=it.next();
      Set<String> dependenciesToClean=entry.getValue();
      dependenciesToClean.remove(beanName);
      if (dependenciesToClean.isEmpty()) {
        it.remove();
      }
    }
  }
  this.dependenciesForBeanMap.remove(beanName);
}
