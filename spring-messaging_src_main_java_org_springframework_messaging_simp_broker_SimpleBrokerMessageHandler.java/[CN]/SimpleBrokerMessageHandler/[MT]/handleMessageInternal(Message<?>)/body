{
  MessageHeaders headers=message.getHeaders();
  SimpMessageType messageType=SimpMessageHeaderAccessor.getMessageType(headers);
  String destination=SimpMessageHeaderAccessor.getDestination(headers);
  String sessionId=SimpMessageHeaderAccessor.getSessionId(headers);
  if (!checkDestinationPrefix(destination)) {
    return;
  }
  SimpMessageHeaderAccessor accessor=MessageHeaderAccessor.getAccessor(message,SimpMessageHeaderAccessor.class);
  if (accessor == null) {
    throw new IllegalStateException("No header accessor (not using the SimpMessagingTemplate?): " + message);
  }
  if (SimpMessageType.MESSAGE.equals(messageType)) {
    if (logger.isDebugEnabled()) {
      logger.debug("Processing " + accessor.getShortLogMessage(message.getPayload()));
    }
    sendMessageToSubscribers(destination,message);
  }
 else   if (SimpMessageType.CONNECT.equals(messageType)) {
    if (logger.isDebugEnabled()) {
      logger.debug("Processing " + accessor.getShortLogMessage(EMPTY_PAYLOAD));
    }
    SimpMessageHeaderAccessor connectAck=SimpMessageHeaderAccessor.create(SimpMessageType.CONNECT_ACK);
    initHeaders(connectAck);
    connectAck.setSessionId(sessionId);
    connectAck.setHeader(SimpMessageHeaderAccessor.CONNECT_MESSAGE_HEADER,message);
    Message<byte[]> messageOut=MessageBuilder.createMessage(EMPTY_PAYLOAD,connectAck.getMessageHeaders());
    getClientOutboundChannel().send(messageOut);
  }
 else   if (SimpMessageType.DISCONNECT.equals(messageType)) {
    if (logger.isDebugEnabled()) {
      logger.debug("Processing " + accessor.getShortLogMessage(EMPTY_PAYLOAD));
    }
    this.subscriptionRegistry.unregisterAllSubscriptions(sessionId);
    SimpMessageHeaderAccessor disconnectAck=SimpMessageHeaderAccessor.create(SimpMessageType.DISCONNECT_ACK);
    initHeaders(disconnectAck);
    disconnectAck.setSessionId(sessionId);
    Message<byte[]> messageOut=MessageBuilder.createMessage(EMPTY_PAYLOAD,disconnectAck.getMessageHeaders());
    getClientOutboundChannel().send(messageOut);
  }
 else   if (SimpMessageType.SUBSCRIBE.equals(messageType)) {
    if (logger.isDebugEnabled()) {
      logger.debug("Processing " + accessor.getShortLogMessage(EMPTY_PAYLOAD));
    }
    this.subscriptionRegistry.registerSubscription(message);
  }
 else   if (SimpMessageType.UNSUBSCRIBE.equals(messageType)) {
    if (logger.isDebugEnabled()) {
      logger.debug("Processing " + accessor.getShortLogMessage(EMPTY_PAYLOAD));
    }
    this.subscriptionRegistry.unregisterSubscription(message);
  }
}
