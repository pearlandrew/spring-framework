{
  Set<Class<?>> interfaces=new LinkedHashSet<Class<?>>();
  LinkedList<Class<?>> classQueue=new LinkedList<Class<?>>();
  classQueue.addFirst(commonType);
  while (!classQueue.isEmpty()) {
    Class<?> currentClass=classQueue.removeLast();
    if (currentClass.isAssignableFrom(valueClass)) {
      return currentClass;
    }
    Class<?> superClass=currentClass.getSuperclass();
    if (superClass != null && superClass != Object.class) {
      classQueue.addFirst(currentClass.getSuperclass());
    }
    for (    Class<?> interfaceType : currentClass.getInterfaces()) {
      addInterfaceHierarchy(interfaceType,interfaces);
    }
  }
  for (  Class<?> interfaceType : interfaces) {
    if (interfaceType.isAssignableFrom(valueClass)) {
      return interfaceType;
    }
  }
  return Object.class;
}
