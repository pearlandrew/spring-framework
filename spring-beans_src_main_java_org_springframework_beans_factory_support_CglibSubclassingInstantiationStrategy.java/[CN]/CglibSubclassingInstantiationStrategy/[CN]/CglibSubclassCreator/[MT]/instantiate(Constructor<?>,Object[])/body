{
  Class<?> subclass=createEnhancedSubclass(this.beanDefinition);
  Object instance;
  if (ctor == null) {
    instance=BeanUtils.instantiate(subclass);
  }
 else {
    try {
      Constructor<?> enhancedSubclassConstructor=subclass.getConstructor(ctor.getParameterTypes());
      instance=enhancedSubclassConstructor.newInstance(args);
    }
 catch (    Exception ex) {
      throw new BeanInstantiationException(this.beanDefinition.getBeanClass(),String.format("Failed to invoke constructor for CGLIB enhanced subclass [%s]",subclass.getName()),ex);
    }
  }
  Factory factory=(Factory)instance;
  factory.setCallbacks(new Callback[]{NoOp.INSTANCE,new LookupOverrideMethodInterceptor(this.beanDefinition,this.owner),new ReplaceOverrideMethodInterceptor(this.beanDefinition,this.owner)});
  return instance;
}
