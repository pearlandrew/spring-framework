{
  HttpServletRequest servletRequest=getHttpServletRequest(request);
  HttpServletResponse servletResponse=getHttpServletResponse(response);
  TyrusServerContainer serverContainer=(TyrusServerContainer)getContainer(servletRequest);
  TyrusWebSocketEngine engine=(TyrusWebSocketEngine)serverContainer.getWebSocketEngine();
  TyrusEndpointWrapper tyrusEndpoint=null;
  try {
    tyrusEndpoint=createTyrusEndpoint(endpoint,subProtocol,extensions,serverContainer);
    endpointRegistrationMethod.invoke(engine,tyrusEndpoint);
    String endpointPath=tyrusEndpoint.getEndpointPath();
    HttpHeaders headers=request.getHeaders();
    RequestContext requestContext=createRequestContext(servletRequest,endpointPath,headers);
    TyrusUpgradeResponse upgradeResponse=new TyrusUpgradeResponse();
    UpgradeInfo upgradeInfo=engine.upgrade(requestContext,upgradeResponse);
switch (upgradeInfo.getStatus()) {
case SUCCESS:
      TyrusHttpUpgradeHandler handler=servletRequest.upgrade(TyrusHttpUpgradeHandler.class);
    Writer servletWriter=createTyrusServletWriter(handler);
  handler.preInit(upgradeInfo,servletWriter,servletRequest.getUserPrincipal() != null);
servletResponse.setStatus(upgradeResponse.getStatus());
for (Map.Entry<String,List<String>> entry : upgradeResponse.getHeaders().entrySet()) {
servletResponse.addHeader(entry.getKey(),Utils.getHeaderFromList(entry.getValue()));
}
servletResponse.flushBuffer();
if (logger.isTraceEnabled()) {
logger.trace("Successful upgrade uri=" + servletRequest.getRequestURI() + ", response headers="+ upgradeResponse.getHeaders());
}
break;
case HANDSHAKE_FAILED:
throw new HandshakeFailureException("Unexpected handshake failure: " + request.getURI());
case NOT_APPLICABLE:
throw new HandshakeFailureException("Unexpected handshake mapping failure: " + request.getURI());
}
}
 catch (Exception ex) {
throw new HandshakeFailureException("Error during handshake: " + request.getURI(),ex);
}
 finally {
if (tyrusEndpoint != null) {
engine.unregister(tyrusEndpoint);
}
}
}
