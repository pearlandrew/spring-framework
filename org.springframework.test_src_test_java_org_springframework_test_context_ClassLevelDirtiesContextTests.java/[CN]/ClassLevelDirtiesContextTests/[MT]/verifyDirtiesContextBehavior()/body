{
  int hits=0;
  int misses=0;
  runTestClassAndAssertRunListenerStats(CleanTestCase.class);
  assertContextCacheStatistics("after clean test class",1,hits,++misses);
  runTestClassAndAssertRunListenerStats(ClassLevelDirtiesContextWithCleanMethodsTestCase.class);
  assertContextCacheStatistics("after class-level @DirtiesContext with clean test method",0,++hits,misses);
  runTestClassAndAssertRunListenerStats(CleanTestCase.class);
  assertContextCacheStatistics("after clean test class",1,hits,++misses);
  runTestClassAndAssertRunListenerStats(ClassLevelDirtiesContextWithDirtyMethodsTestCase.class);
  assertContextCacheStatistics("after class-level @DirtiesContext with dirty test method",0,++hits,misses);
  runTestClassAndAssertRunListenerStats(ClassLevelDirtiesContextWithDirtyMethodsTestCase.class);
  assertContextCacheStatistics("after class-level @DirtiesContext with dirty test method",0,hits,++misses);
  runTestClassAndAssertRunListenerStats(ClassLevelDirtiesContextWithDirtyMethodsTestCase.class);
  assertContextCacheStatistics("after class-level @DirtiesContext with dirty test method",0,hits,++misses);
  runTestClassAndAssertRunListenerStats(CleanTestCase.class);
  assertContextCacheStatistics("after clean test class",1,hits,++misses);
  runTestClassAndAssertRunListenerStats(ClassLevelDirtiesContextWithCleanMethodsTestCase.class);
  assertContextCacheStatistics("after class-level @DirtiesContext with clean test method",0,++hits,misses);
}
