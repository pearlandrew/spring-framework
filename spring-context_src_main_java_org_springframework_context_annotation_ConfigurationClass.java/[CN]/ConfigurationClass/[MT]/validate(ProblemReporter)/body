{
  if (getMetadata().isAnnotated(Configuration.class.getName())) {
    if (getMetadata().isFinal()) {
      problemReporter.error(new FinalConfigurationProblem());
    }
  }
  Map<String,Integer> methodNameCounts=new HashMap<String,Integer>();
  for (  BeanMethod beanMethod : this.beanMethods) {
    String fqMethodName=beanMethod.getFullyQualifiedMethodName();
    Integer currentCount=methodNameCounts.get(fqMethodName);
    int newCount=currentCount != null ? currentCount + 1 : 1;
    methodNameCounts.put(fqMethodName,newCount);
  }
  for (  String fqMethodName : methodNameCounts.keySet()) {
    int count=methodNameCounts.get(fqMethodName);
    if (count > 1) {
      String shortMethodName=ConfigurationMethod.getShortMethodName(fqMethodName);
      problemReporter.error(new BeanMethodOverloadingProblem(shortMethodName,count));
    }
  }
  for (  BeanMethod beanMethod : this.beanMethods) {
    beanMethod.validate(problemReporter);
  }
}
