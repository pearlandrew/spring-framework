{
  StatementCreatorUtils.driversWithNoSupportForGetParameterType.clear();
  Connection con=mock(Connection.class);
  DatabaseMetaData dbmd=mock(DatabaseMetaData.class);
  given(preparedStatement.getConnection()).willReturn(con);
  given(con.getMetaData()).willReturn(dbmd);
  given(dbmd.getDatabaseProductName()).willReturn("Apache Derby");
  given(dbmd.getDriverName()).willReturn("Apache Derby Embedded Driver");
  StatementCreatorUtils.setParameterValue(preparedStatement,1,SqlTypeValue.TYPE_UNKNOWN,null,null);
  verify(dbmd).getDatabaseProductName();
  verify(dbmd).getDriverName();
  verify(preparedStatement).setNull(1,Types.VARCHAR);
  assertEquals(1,StatementCreatorUtils.driversWithNoSupportForGetParameterType.size());
  reset(preparedStatement,con,dbmd);
  ParameterMetaData pmd=mock(ParameterMetaData.class);
  given(preparedStatement.getConnection()).willReturn(con);
  given(con.getMetaData()).willReturn(dbmd);
  given(preparedStatement.getParameterMetaData()).willReturn(pmd);
  given(pmd.getParameterType(1)).willThrow(new SQLException("unsupported"));
  given(dbmd.getDatabaseProductName()).willReturn("Informix Dynamic Server");
  given(dbmd.getDriverName()).willReturn("Informix Driver");
  StatementCreatorUtils.setParameterValue(preparedStatement,1,SqlTypeValue.TYPE_UNKNOWN,null,null);
  verify(pmd).getParameterType(1);
  verify(dbmd).getDatabaseProductName();
  verify(dbmd).getDriverName();
  verify(preparedStatement).setObject(1,null);
  assertEquals(2,StatementCreatorUtils.driversWithNoSupportForGetParameterType.size());
  reset(preparedStatement,con,dbmd,pmd);
  given(preparedStatement.getConnection()).willReturn(con);
  given(con.getMetaData()).willReturn(dbmd);
  given(dbmd.getDatabaseProductName()).willReturn("Informix Dynamic Server");
  given(dbmd.getDriverName()).willReturn("Informix Driver");
  StatementCreatorUtils.setParameterValue(preparedStatement,1,SqlTypeValue.TYPE_UNKNOWN,null,null);
  verify(preparedStatement,never()).getParameterMetaData();
  verify(dbmd).getDatabaseProductName();
  verify(dbmd).getDriverName();
  verify(preparedStatement).setObject(1,null);
  assertEquals(2,StatementCreatorUtils.driversWithNoSupportForGetParameterType.size());
}
