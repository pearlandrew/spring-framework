{
  Resource resolved=chain.resolveResource(request,requestPath,locations);
  if (resolved != null) {
    return resolved;
  }
  VersionStrategy versionStrategy=findStrategy(requestPath);
  if (versionStrategy == null) {
    return null;
  }
  String candidateVersion=versionStrategy.extractVersionFromPath(requestPath);
  if (StringUtils.isEmpty(candidateVersion)) {
    if (logger.isTraceEnabled()) {
      logger.trace("No version found in path=\"" + requestPath + "\"");
    }
    return null;
  }
  String simplePath=versionStrategy.deleteVersionFromPath(requestPath,candidateVersion);
  if (logger.isTraceEnabled()) {
    logger.trace("Extracted version from path, re-resolving without version, path=\"" + simplePath + "\"");
  }
  Resource baseResource=chain.resolveResource(request,simplePath,locations);
  if (baseResource == null) {
    return null;
  }
  if (versionStrategy.resourceVersionMatches(baseResource,candidateVersion)) {
    if (logger.isTraceEnabled()) {
      logger.trace("resource matches extracted version");
    }
    return baseResource;
  }
 else {
    logger.trace("Potential resource found for [" + requestPath + "], but version ["+ candidateVersion+ "] doesn't match.");
    return null;
  }
}
