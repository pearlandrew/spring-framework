{
  if (allowPublicMethodsOnly() && !Modifier.isPublic(method.getModifiers())) {
    return null;
  }
  Class<?> userClass=ClassUtils.getUserClass(targetClass);
  Method specificMethod=ClassUtils.getMostSpecificMethod(method,userClass);
  specificMethod=BridgeMethodResolver.findBridgedMethod(specificMethod);
  TransactionAttribute txAtt=findTransactionAttribute(specificMethod);
  if (txAtt != null) {
    return txAtt;
  }
  txAtt=findTransactionAttribute(specificMethod.getDeclaringClass());
  if (txAtt != null) {
    return txAtt;
  }
  if (specificMethod != method) {
    txAtt=findTransactionAttribute(method);
    if (txAtt != null) {
      return txAtt;
    }
    return findTransactionAttribute(method.getDeclaringClass());
  }
  return null;
}
