{
  StandardTypeConverter tc=new StandardTypeConverter();
  Method oneArg=TestInterface.class.getMethod("oneArg",String.class);
  Method twoArg=TestInterface.class.getMethod("twoArg",String.class,String[].class);
  Object[] args=new Object[]{3};
  ReflectionHelper.convertAllArguments(tc,args,oneArg);
  checkArguments(args,"3");
  args=new Object[]{3,false,3.0f};
  ReflectionHelper.convertAllArguments(tc,args,twoArg);
  checkArguments(args,"3","false","3.0");
  args=new Object[]{3};
  ReflectionHelper.convertAllArguments(tc,args,twoArg);
  checkArguments(args,"3");
  args=new Object[]{3,false,3.0f};
  try {
    ReflectionHelper.convertAllArguments(null,args,twoArg);
    fail("Should have failed because no converter supplied");
  }
 catch (  SpelEvaluationException se) {
    assertEquals(SpelMessage.TYPE_CONVERSION_ERROR,se.getMessageCode());
  }
  args=new Object[]{3,null,3.0f};
  ReflectionHelper.convertAllArguments(tc,args,twoArg);
  checkArguments(args,"3",null,"3.0");
}
