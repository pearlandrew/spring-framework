{
  if (this.numberOfRemainingUnboundArguments > 1) {
    throw new AmbiguousBindingException("Still " + this.numberOfRemainingUnboundArguments + " unbound args at reference pointcut binding stage, with no way to determine between them");
  }
  List<String> varNames=new ArrayList<>();
  String[] tokens=StringUtils.tokenizeToStringArray(this.pointcutExpression," ");
  for (int i=0; i < tokens.length; i++) {
    String toMatch=tokens[i];
    if (toMatch.startsWith("!")) {
      toMatch=toMatch.substring(1);
    }
    int firstParenIndex=toMatch.indexOf("(");
    if (firstParenIndex != -1) {
      toMatch=toMatch.substring(0,firstParenIndex);
    }
 else {
      if (tokens.length < i + 2) {
        continue;
      }
 else {
        String nextToken=tokens[i + 1];
        if (nextToken.charAt(0) != '(') {
          continue;
        }
      }
    }
    PointcutBody body=getPointcutBody(tokens,i);
    i+=body.numTokensConsumed;
    if (!nonReferencePointcutTokens.contains(toMatch)) {
      String varName=maybeExtractVariableName(body.text);
      if (varName != null) {
        varNames.add(varName);
      }
    }
  }
  if (varNames.size() > 1) {
    throw new AmbiguousBindingException("Found " + varNames.size() + " candidate reference pointcut variables but only one unbound argument slot");
  }
 else   if (varNames.size() == 1) {
    for (int j=0; j < this.parameterNameBindings.length; j++) {
      if (isUnbound(j)) {
        bindParameterName(j,varNames.get(0));
        break;
      }
    }
  }
}
