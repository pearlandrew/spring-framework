{
  final Exception unexpectedException=new Exception();
  MethodInterceptor mi=new MethodInterceptor(){
    public Object invoke(    MethodInvocation invocation) throws Throwable {
      throw unexpectedException;
    }
  }
;
  AdvisedSupport pc=new AdvisedSupport(new Class[]{ITestBean.class});
  pc.addAdvice(ExposeInvocationInterceptor.INSTANCE);
  pc.addAdvice(mi);
  pc.setTarget(new TestBean());
  AopProxy aop=createAopProxy(pc);
  ITestBean tb=(ITestBean)aop.getProxy();
  try {
    tb.getAge();
    fail("Should have wrapped exception raised by interceptor");
  }
 catch (  UndeclaredThrowableException thrown) {
    assertEquals("exception matches",unexpectedException,thrown.getUndeclaredThrowable());
  }
catch (  Exception ex) {
    ex.printStackTrace();
    fail("Didn't expect exception: " + ex);
  }
}
