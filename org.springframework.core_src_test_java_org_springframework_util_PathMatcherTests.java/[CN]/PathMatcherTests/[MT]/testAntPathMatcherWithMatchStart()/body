{
  PathMatcher pathMatcher=new AntPathMatcher();
  assertTrue(pathMatcher.matchStart("test","test"));
  assertTrue(pathMatcher.matchStart("/test","/test"));
  assertFalse(pathMatcher.matchStart("/test.jpg","test.jpg"));
  assertFalse(pathMatcher.matchStart("test","/test"));
  assertFalse(pathMatcher.matchStart("/test","test"));
  assertTrue(pathMatcher.matchStart("t?st","test"));
  assertTrue(pathMatcher.matchStart("??st","test"));
  assertTrue(pathMatcher.matchStart("tes?","test"));
  assertTrue(pathMatcher.matchStart("te??","test"));
  assertTrue(pathMatcher.matchStart("?es?","test"));
  assertFalse(pathMatcher.matchStart("tes?","tes"));
  assertFalse(pathMatcher.matchStart("tes?","testt"));
  assertFalse(pathMatcher.matchStart("tes?","tsst"));
  assertTrue(pathMatcher.matchStart("*","test"));
  assertTrue(pathMatcher.matchStart("test*","test"));
  assertTrue(pathMatcher.matchStart("test*","testTest"));
  assertTrue(pathMatcher.matchStart("test/*","test/Test"));
  assertTrue(pathMatcher.matchStart("test/*","test/t"));
  assertTrue(pathMatcher.matchStart("test/*","test/"));
  assertTrue(pathMatcher.matchStart("*test*","AnothertestTest"));
  assertTrue(pathMatcher.matchStart("*test","Anothertest"));
  assertTrue(pathMatcher.matchStart("*.*","test."));
  assertTrue(pathMatcher.matchStart("*.*","test.test"));
  assertTrue(pathMatcher.matchStart("*.*","test.test.test"));
  assertTrue(pathMatcher.matchStart("test*aaa","testblaaaa"));
  assertFalse(pathMatcher.matchStart("test*","tst"));
  assertFalse(pathMatcher.matchStart("test*","test/"));
  assertFalse(pathMatcher.matchStart("test*","tsttest"));
  assertFalse(pathMatcher.matchStart("test*","test/"));
  assertFalse(pathMatcher.matchStart("test*","test/t"));
  assertTrue(pathMatcher.matchStart("test/*","test"));
  assertTrue(pathMatcher.matchStart("test/t*.txt","test"));
  assertFalse(pathMatcher.matchStart("*test*","tsttst"));
  assertFalse(pathMatcher.matchStart("*test","tsttst"));
  assertFalse(pathMatcher.matchStart("*.*","tsttst"));
  assertFalse(pathMatcher.matchStart("test*aaa","test"));
  assertFalse(pathMatcher.matchStart("test*aaa","testblaaab"));
  assertTrue(pathMatcher.matchStart("/?","/a"));
  assertTrue(pathMatcher.matchStart("/?/a","/a/a"));
  assertTrue(pathMatcher.matchStart("/a/?","/a/b"));
  assertTrue(pathMatcher.matchStart("/??/a","/aa/a"));
  assertTrue(pathMatcher.matchStart("/a/??","/a/bb"));
  assertTrue(pathMatcher.matchStart("/?","/a"));
  assertTrue(pathMatcher.matchStart("/**","/testing/testing"));
  assertTrue(pathMatcher.matchStart("/*/**","/testing/testing"));
  assertTrue(pathMatcher.matchStart("/**/*","/testing/testing"));
  assertTrue(pathMatcher.matchStart("test*/**","test/"));
  assertTrue(pathMatcher.matchStart("test*/**","test/t"));
  assertTrue(pathMatcher.matchStart("/bla/**/bla","/bla/testing/testing/bla"));
  assertTrue(pathMatcher.matchStart("/bla/**/bla","/bla/testing/testing/bla/bla"));
  assertTrue(pathMatcher.matchStart("/**/test","/bla/bla/test"));
  assertTrue(pathMatcher.matchStart("/bla/**/**/bla","/bla/bla/bla/bla/bla/bla"));
  assertTrue(pathMatcher.matchStart("/bla*bla/test","/blaXXXbla/test"));
  assertTrue(pathMatcher.matchStart("/*bla/test","/XXXbla/test"));
  assertFalse(pathMatcher.matchStart("/bla*bla/test","/blaXXXbl/test"));
  assertFalse(pathMatcher.matchStart("/*bla/test","XXXblab/test"));
  assertFalse(pathMatcher.matchStart("/*bla/test","XXXbl/test"));
  assertFalse(pathMatcher.matchStart("/????","/bala/bla"));
  assertTrue(pathMatcher.matchStart("/**/*bla","/bla/bla/bla/bbb"));
  assertTrue(pathMatcher.matchStart("/*bla*/**/bla/**","/XXXblaXXXX/testing/testing/bla/testing/testing/"));
  assertTrue(pathMatcher.matchStart("/*bla*/**/bla/*","/XXXblaXXXX/testing/testing/bla/testing"));
  assertTrue(pathMatcher.matchStart("/*bla*/**/bla/**","/XXXblaXXXX/testing/testing/bla/testing/testing"));
  assertTrue(pathMatcher.matchStart("/*bla*/**/bla/**","/XXXblaXXXX/testing/testing/bla/testing/testing.jpg"));
  assertTrue(pathMatcher.matchStart("*bla*/**/bla/**","XXXblaXXXX/testing/testing/bla/testing/testing/"));
  assertTrue(pathMatcher.matchStart("*bla*/**/bla/*","XXXblaXXXX/testing/testing/bla/testing"));
  assertTrue(pathMatcher.matchStart("*bla*/**/bla/**","XXXblaXXXX/testing/testing/bla/testing/testing"));
  assertTrue(pathMatcher.matchStart("*bla*/**/bla/*","XXXblaXXXX/testing/testing/bla/testing/testing"));
  assertTrue(pathMatcher.matchStart("/x/x/**/bla","/x/x/x/"));
  assertTrue(pathMatcher.matchStart("",""));
}
