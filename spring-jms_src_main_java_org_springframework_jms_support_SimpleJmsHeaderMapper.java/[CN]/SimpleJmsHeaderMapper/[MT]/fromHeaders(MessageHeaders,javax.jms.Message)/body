{
  try {
    Object jmsCorrelationId=headers.get(JmsHeaders.CORRELATION_ID);
    if (jmsCorrelationId instanceof Number) {
      jmsCorrelationId=jmsCorrelationId.toString();
    }
    if (jmsCorrelationId instanceof String) {
      try {
        jmsMessage.setJMSCorrelationID((String)jmsCorrelationId);
      }
 catch (      Exception ex) {
        logger.info("Failed to set JMSCorrelationID - skipping",ex);
      }
    }
    Destination jmsReplyTo=getHeaderIfAvailable(headers,JmsHeaders.REPLY_TO,Destination.class);
    if (jmsReplyTo != null) {
      try {
        jmsMessage.setJMSReplyTo(jmsReplyTo);
      }
 catch (      Exception ex) {
        logger.info("Failed to set JMSReplyTo - skipping",ex);
      }
    }
    String jmsType=getHeaderIfAvailable(headers,JmsHeaders.TYPE,String.class);
    if (jmsType != null) {
      try {
        jmsMessage.setJMSType(jmsType);
      }
 catch (      Exception ex) {
        logger.info("Failed to set JMSType - skipping",ex);
      }
    }
    Set<String> headerNames=headers.keySet();
    for (    String headerName : headerNames) {
      if (StringUtils.hasText(headerName) && !headerName.startsWith(JmsHeaders.PREFIX)) {
        Object value=headers.get(headerName);
        if (value != null && SUPPORTED_PROPERTY_TYPES.contains(value.getClass())) {
          try {
            String propertyName=this.fromHeaderName(headerName);
            jmsMessage.setObjectProperty(propertyName,value);
          }
 catch (          Exception ex) {
            if (headerName.startsWith("JMSX")) {
              if (logger.isTraceEnabled()) {
                logger.trace("Skipping reserved header '" + headerName + "' since it cannot be set by client");
              }
            }
 else             if (logger.isWarnEnabled()) {
              logger.warn("Failed to map message header '" + headerName + "' to JMS property",ex);
            }
          }
        }
      }
    }
  }
 catch (  Exception ex) {
    if (logger.isWarnEnabled()) {
      logger.warn("Error occurred while mapping from MessageHeaders to JMS properties",ex);
    }
  }
}
