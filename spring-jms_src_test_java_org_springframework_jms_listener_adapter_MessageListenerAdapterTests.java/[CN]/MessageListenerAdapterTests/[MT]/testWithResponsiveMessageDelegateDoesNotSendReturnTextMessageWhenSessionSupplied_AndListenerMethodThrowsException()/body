{
  MockControl mockMessage=MockControl.createControl(TextMessage.class);
  final TextMessage message=(TextMessage)mockMessage.getMock();
  mockMessage.replay();
  MockControl mockSession=MockControl.createControl(QueueSession.class);
  final QueueSession session=(QueueSession)mockSession.getMock();
  mockSession.replay();
  MockControl mockDelegate=MockControl.createControl(ResponsiveMessageDelegate.class);
  ResponsiveMessageDelegate delegate=(ResponsiveMessageDelegate)mockDelegate.getMock();
  delegate.handleMessage(message);
  mockDelegate.setThrowable(new IllegalArgumentException("Dow!"));
  mockDelegate.replay();
  final MessageListenerAdapter adapter=new MessageListenerAdapter(delegate){
    @Override protected Object extractMessage(    Message message){
      return message;
    }
  }
;
  try {
    adapter.onMessage(message,session);
    fail("expected ListenerExecutionFailedException");
  }
 catch (  ListenerExecutionFailedException ex) {
  }
  mockDelegate.verify();
  mockMessage.verify();
  mockSession.verify();
}
