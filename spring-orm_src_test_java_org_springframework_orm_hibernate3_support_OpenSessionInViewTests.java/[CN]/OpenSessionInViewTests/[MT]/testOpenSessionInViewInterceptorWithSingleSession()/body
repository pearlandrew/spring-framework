{
  SessionFactory sf=mock(SessionFactory.class);
  Session session=mock(Session.class);
  OpenSessionInViewInterceptor interceptor=new OpenSessionInViewInterceptor();
  interceptor.setSessionFactory(sf);
  given(sf.openSession()).willReturn(session);
  given(session.getSessionFactory()).willReturn(sf);
  given(session.getSessionFactory()).willReturn(sf);
  given(session.isOpen()).willReturn(true);
  interceptor.preHandle(this.webRequest);
  assertTrue(TransactionSynchronizationManager.hasResource(sf));
  interceptor.preHandle(this.webRequest);
  assertEquals(session,SessionFactoryUtils.getSession(sf,false));
  interceptor.preHandle(this.webRequest);
  interceptor.postHandle(this.webRequest,null);
  interceptor.afterCompletion(this.webRequest,null);
  interceptor.postHandle(this.webRequest,null);
  interceptor.afterCompletion(this.webRequest,null);
  interceptor.preHandle(this.webRequest);
  interceptor.postHandle(this.webRequest,null);
  interceptor.afterCompletion(this.webRequest,null);
  interceptor.postHandle(this.webRequest,null);
  assertTrue(TransactionSynchronizationManager.hasResource(sf));
  interceptor.afterCompletion(this.webRequest,null);
  assertFalse(TransactionSynchronizationManager.hasResource(sf));
  verify(session).setFlushMode(FlushMode.MANUAL);
  verify(session).close();
}
