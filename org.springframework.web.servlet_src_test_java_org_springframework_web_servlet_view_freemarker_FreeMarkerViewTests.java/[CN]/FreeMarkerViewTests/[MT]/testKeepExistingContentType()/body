{
  FreeMarkerView fv=new FreeMarkerView();
  MockControl wmc=MockControl.createNiceControl(WebApplicationContext.class);
  WebApplicationContext wac=(WebApplicationContext)wmc.getMock();
  MockServletContext sc=new MockServletContext();
  wac.getBeansOfType(FreeMarkerConfig.class,true,false);
  Map configs=new HashMap();
  FreeMarkerConfigurer configurer=new FreeMarkerConfigurer();
  configurer.setConfiguration(new TestConfiguration());
  configs.put("freemarkerConfig",configurer);
  wmc.setReturnValue(configs);
  wac.getParentBeanFactory();
  wmc.setReturnValue(null);
  wac.getServletContext();
  wmc.setReturnValue(sc,5);
  wmc.replay();
  fv.setUrl("templateName");
  fv.setApplicationContext(wac);
  MockHttpServletRequest request=new MockHttpServletRequest();
  request.addPreferredLocale(Locale.US);
  request.setAttribute(DispatcherServlet.WEB_APPLICATION_CONTEXT_ATTRIBUTE,wac);
  request.setAttribute(DispatcherServlet.LOCALE_RESOLVER_ATTRIBUTE,new AcceptHeaderLocaleResolver());
  HttpServletResponse response=new MockHttpServletResponse();
  response.setContentType("myContentType");
  Map model=new HashMap();
  model.put("myattr","myvalue");
  fv.render(model,request,response);
  wmc.verify();
  assertEquals("myContentType",response.getContentType());
}
