{
  Assert.notNull(testClass,"Class must not be null");
  final List<TestPropertySourceAttributes> attributesList=new ArrayList<TestPropertySourceAttributes>();
  final Class<TestPropertySource> annotationType=TestPropertySource.class;
  AnnotationDescriptor<TestPropertySource> descriptor=findAnnotationDescriptor(testClass,annotationType);
  Assert.notNull(descriptor,String.format("Could not find an 'annotation declaring class' for annotation type [%s] and class [%s]",annotationType.getName(),testClass.getName()));
  while (descriptor != null) {
    AnnotationAttributes annAttrs=descriptor.getAnnotationAttributes();
    Class<?> rootDeclaringClass=descriptor.getRootDeclaringClass();
    if (logger.isTraceEnabled()) {
      logger.trace(String.format("Retrieved @TestPropertySource attributes [%s] for declaring class [%s].",annAttrs,rootDeclaringClass.getName()));
    }
    TestPropertySourceAttributes attributes=new TestPropertySourceAttributes(rootDeclaringClass,annAttrs);
    if (logger.isTraceEnabled()) {
      logger.trace("Resolved TestPropertySource attributes: " + attributes);
    }
    attributesList.add(attributes);
    descriptor=findAnnotationDescriptor(rootDeclaringClass.getSuperclass(),annotationType);
  }
  return attributesList;
}
