{
  if (this.packagesToScan != null) {
    try {
      for (      String pkg : this.packagesToScan) {
        String pattern=ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX + ClassUtils.convertClassNameToResourcePath(pkg) + RESOURCE_PATTERN;
        Resource[] resources=this.resourcePatternResolver.getResources(pattern);
        MetadataReaderFactory readerFactory=new CachingMetadataReaderFactory(this.resourcePatternResolver);
        for (        Resource resource : resources) {
          if (resource.isReadable()) {
            MetadataReader reader=readerFactory.getMetadataReader(resource);
            String className=reader.getClassMetadata().getClassName();
            if (matchesFilter(reader,readerFactory)) {
              config.addAnnotatedClass(this.resourcePatternResolver.getClassLoader().loadClass(className));
            }
          }
        }
      }
    }
 catch (    IOException ex) {
      throw new MappingException("Failed to scan classpath for unlisted classes",ex);
    }
catch (    ClassNotFoundException ex) {
      throw new MappingException("Failed to load annotated classes from classpath",ex);
    }
  }
}
