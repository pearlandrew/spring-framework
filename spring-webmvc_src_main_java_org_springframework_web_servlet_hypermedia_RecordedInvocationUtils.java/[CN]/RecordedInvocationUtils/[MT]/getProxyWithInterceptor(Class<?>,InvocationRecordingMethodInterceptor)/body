{
  if (type.isInterface()) {
    ProxyFactory factory=new ProxyFactory(EmptyTargetSource.INSTANCE);
    factory.addInterface(type);
    factory.addInterface(LastInvocationAware.class);
    factory.addAdvice(interceptor);
    return (T)factory.getProxy();
  }
  Enhancer enhancer=new Enhancer();
  enhancer.setSuperclass(type);
  enhancer.setInterfaces(new Class<?>[]{LastInvocationAware.class});
  enhancer.setCallbackType(org.springframework.cglib.proxy.MethodInterceptor.class);
  Factory factory=(Factory)OBJENESIS.newInstance(enhancer.createClass());
  factory.setCallbacks(new Callback[]{interceptor});
  return (T)factory;
}
