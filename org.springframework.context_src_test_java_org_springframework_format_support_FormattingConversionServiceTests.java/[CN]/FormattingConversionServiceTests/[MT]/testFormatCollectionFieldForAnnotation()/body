{
  formattingService.addConverter(new Converter<Date,Long>(){
    public Long convert(    Date source){
      return source.getTime();
    }
  }
);
  formattingService.addConverter(new Converter<DateTime,Date>(){
    public Date convert(    DateTime source){
      return source.toDate();
    }
  }
);
  formattingService.addFormatterForFieldAnnotation(new JodaDateTimeFormatAnnotationFormatterFactory());
  List<Date> dates=new ArrayList<Date>();
  dates.add(new LocalDate(2009,10,31).toDateTimeAtCurrentTime().toDate());
  dates.add(new LocalDate(2009,11,1).toDateTimeAtCurrentTime().toDate());
  dates.add(new LocalDate(2009,11,2).toDateTimeAtCurrentTime().toDate());
  String formatted=(String)formattingService.convert(dates,new TypeDescriptor(Model.class.getField("dates")),TypeDescriptor.valueOf(String.class));
  assertEquals("10/31/09,11/1/09,11/2/09",formatted);
  dates=(List<Date>)formattingService.convert("10/31/09,11/1/09,11/2/09",TypeDescriptor.valueOf(String.class),new TypeDescriptor(Model.class.getField("dates")));
  assertEquals(new LocalDate(2009,10,31),new LocalDate(dates.get(0)));
  assertEquals(new LocalDate(2009,11,1),new LocalDate(dates.get(1)));
  assertEquals(new LocalDate(2009,11,2),new LocalDate(dates.get(2)));
}
