{
  Class<?> testClass=getTestContext().getTestClass();
  if (logger.isTraceEnabled()) {
    logger.trace("afterTestClass(): class [" + testClass.getName() + "]");
  }
  getTestContext().updateState(null,null,null);
  Exception afterTestClassException=null;
  for (  TestExecutionListener testExecutionListener : getReversedTestExecutionListeners()) {
    try {
      testExecutionListener.afterTestClass(getTestContext());
    }
 catch (    Exception ex) {
      logger.warn("Caught exception while allowing TestExecutionListener [" + testExecutionListener + "] to process 'after class' callback for test class ["+ testClass+ "]",ex);
      if (afterTestClassException == null) {
        afterTestClassException=ex;
      }
    }
  }
  if (afterTestClassException != null) {
    throw afterTestClassException;
  }
}
