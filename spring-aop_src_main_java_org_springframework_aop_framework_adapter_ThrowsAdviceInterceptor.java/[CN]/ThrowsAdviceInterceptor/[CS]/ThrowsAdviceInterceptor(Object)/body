{
  Assert.notNull(throwsAdvice,"Advice must not be null");
  this.throwsAdvice=throwsAdvice;
  Method[] methods=throwsAdvice.getClass().getMethods();
  for (  Method method : methods) {
    if (method.getName().equals(AFTER_THROWING) && (method.getParameterTypes().length == 1 || method.getParameterTypes().length == 4) && Throwable.class.isAssignableFrom(method.getParameterTypes()[method.getParameterTypes().length - 1])) {
      this.exceptionHandlerMap.put(method.getParameterTypes()[method.getParameterTypes().length - 1],method);
      if (logger.isDebugEnabled()) {
        logger.debug("Found exception handler method: " + method);
      }
    }
  }
  if (this.exceptionHandlerMap.isEmpty()) {
    throw new IllegalArgumentException("At least one handler method must be found in class [" + throwsAdvice.getClass() + "]");
  }
}
