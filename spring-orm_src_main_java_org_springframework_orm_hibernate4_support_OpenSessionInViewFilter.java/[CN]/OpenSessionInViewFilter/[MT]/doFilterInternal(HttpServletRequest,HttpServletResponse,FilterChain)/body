{
  AsyncExecutionChain chain=AsyncExecutionChain.getForCurrentRequest(request);
  SessionFactory sessionFactory=lookupSessionFactory(request);
  boolean participate=false;
  if (TransactionSynchronizationManager.hasResource(sessionFactory)) {
    participate=true;
  }
 else {
    logger.debug("Opening Hibernate Session in OpenSessionInViewFilter");
    Session session=openSession(sessionFactory);
    SessionHolder sessionHolder=new SessionHolder(session);
    TransactionSynchronizationManager.bindResource(sessionFactory,sessionHolder);
    chain.push(getAsyncCallable(request,sessionFactory,sessionHolder));
  }
  try {
    filterChain.doFilter(request,response);
  }
  finally {
    if (!participate) {
      SessionHolder sessionHolder=(SessionHolder)TransactionSynchronizationManager.unbindResource(sessionFactory);
      if (!chain.pop()) {
        return;
      }
      logger.debug("Closing Hibernate Session in OpenSessionInViewFilter");
      SessionFactoryUtils.closeSession(sessionHolder.getSession());
    }
  }
}
