{
  SessionFactory sessionFactory=lookupSessionFactory(request);
  boolean participate=false;
  WebAsyncManager asyncManager=WebAsyncUtils.getAsyncManager(request);
  boolean isFirstRequest=!asyncManager.hasConcurrentResult();
  String key=getAlreadyFilteredAttributeName();
  if (TransactionSynchronizationManager.hasResource(sessionFactory)) {
    participate=true;
  }
 else {
    if (isFirstRequest || !applySessionBindingInterceptor(asyncManager,key)) {
      logger.debug("Opening Hibernate Session in OpenSessionInViewFilter");
      Session session=openSession(sessionFactory);
      SessionHolder sessionHolder=new SessionHolder(session);
      TransactionSynchronizationManager.bindResource(sessionFactory,sessionHolder);
      asyncManager.registerCallableInterceptor(key,new SessionBindingCallableInterceptor(sessionFactory,sessionHolder));
    }
  }
  try {
    filterChain.doFilter(request,response);
  }
  finally {
    if (!participate) {
      SessionHolder sessionHolder=(SessionHolder)TransactionSynchronizationManager.unbindResource(sessionFactory);
      if (!asyncManager.isConcurrentHandlingStarted()) {
        logger.debug("Closing Hibernate Session in OpenSessionInViewFilter");
        SessionFactoryUtils.closeSession(sessionHolder.getSession());
      }
    }
  }
}
