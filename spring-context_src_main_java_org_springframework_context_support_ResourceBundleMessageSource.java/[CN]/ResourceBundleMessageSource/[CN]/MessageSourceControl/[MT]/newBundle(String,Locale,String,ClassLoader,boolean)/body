{
  if (format.equals("java.properties")) {
    String bundleName=toBundleName(baseName,locale);
    final String resourceName=toResourceName(bundleName,"properties");
    final ClassLoader classLoader=loader;
    final boolean reloadFlag=reload;
    InputStream stream;
    try {
      stream=AccessController.doPrivileged(new PrivilegedExceptionAction<InputStream>(){
        @Override public InputStream run() throws IOException {
          InputStream is=null;
          if (reloadFlag) {
            URL url=classLoader.getResource(resourceName);
            if (url != null) {
              URLConnection connection=url.openConnection();
              if (connection != null) {
                connection.setUseCaches(false);
                is=connection.getInputStream();
              }
            }
          }
 else {
            is=classLoader.getResourceAsStream(resourceName);
          }
          return is;
        }
      }
);
    }
 catch (    PrivilegedActionException ex) {
      throw (IOException)ex.getException();
    }
    if (stream != null) {
      try {
        return (defaultEncoding != null ? new PropertyResourceBundle(new InputStreamReader(stream,defaultEncoding)) : new PropertyResourceBundle(stream));
      }
  finally {
        stream.close();
      }
    }
 else {
      return null;
    }
  }
 else {
    return super.newBundle(baseName,locale,format,loader,reload);
  }
}
