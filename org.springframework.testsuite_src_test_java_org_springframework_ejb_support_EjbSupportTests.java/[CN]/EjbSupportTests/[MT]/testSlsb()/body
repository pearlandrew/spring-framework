{
  MockControl mc=MockControl.createControl(SessionContext.class);
  SessionContext sc=(SessionContext)mc.getMock();
  mc.replay();
  final BeanFactory bf=new StaticListableBeanFactory();
  BeanFactoryLocator bfl=new BeanFactoryLocator(){
    public BeanFactoryReference useBeanFactory(    String factoryKey) throws FatalBeanException {
      return new BeanFactoryReference(){
        public BeanFactory getFactory(){
          return bf;
        }
        public void release() throws FatalBeanException {
        }
      }
;
    }
  }
;
  AbstractStatelessSessionBean slsb=new AbstractStatelessSessionBean(){
    protected void onEjbCreate() throws CreateException {
      assertTrue(getBeanFactory() == bf);
    }
  }
;
  slsb.setBeanFactoryLocator(bfl);
  slsb.setSessionContext(sc);
  assertTrue(sc == slsb.getSessionContext());
  slsb.ejbCreate();
  try {
    slsb.ejbActivate();
    fail("Shouldn't allow activation of SLSB");
  }
 catch (  IllegalStateException ex) {
  }
  try {
    slsb.ejbPassivate();
    fail("Shouldn't allow passivation of SLSB");
  }
 catch (  IllegalStateException ex) {
  }
}
