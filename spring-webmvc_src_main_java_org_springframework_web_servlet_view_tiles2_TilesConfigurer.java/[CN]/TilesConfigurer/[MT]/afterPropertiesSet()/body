{
  boolean activateEl=false;
  if (tilesElPresent) {
    activateEl=new JspExpressionChecker().isExpressionFactoryAvailable();
    if (!this.tilesPropertyMap.containsKey(TilesContainerFactory.ATTRIBUTE_EVALUATOR_INIT_PARAM)) {
      this.tilesPropertyMap.put(TilesContainerFactory.ATTRIBUTE_EVALUATOR_INIT_PARAM,activateEl ? "org.apache.tiles.evaluator.el.ELAttributeEvaluator" : DirectAttributeEvaluator.class.getName());
    }
  }
  SpringTilesApplicationContextFactory factory=new SpringTilesApplicationContextFactory();
  factory.init(this.tilesPropertyMap);
  TilesApplicationContext preliminaryContext=factory.createApplicationContext(this.servletContext);
  if (this.tilesInitializer == null) {
    this.tilesInitializer=createTilesInitializer();
  }
  this.tilesInitializer.initialize(preliminaryContext);
  if (this.overrideLocaleResolver) {
    logger.debug("Registering Tiles 2.2 LocaleResolver for complete-autoload setup");
    try {
      BasicTilesContainer container=(BasicTilesContainer)ServletUtil.getContainer(this.servletContext);
      DefinitionsFactory definitionsFactory=container.getDefinitionsFactory();
      Method setter=definitionsFactory.getClass().getMethod("setLocaleResolver",LocaleResolver.class);
      setter.invoke(definitionsFactory,new SpringLocaleResolver());
    }
 catch (    Exception ex) {
      throw new IllegalStateException("Cannot override LocaleResolver with SpringLocaleResolver",ex);
    }
  }
  if (activateEl && this.tilesInitializer instanceof SpringTilesInitializer) {
    BasicTilesContainer container=(BasicTilesContainer)ServletUtil.getContainer(this.servletContext);
    new TilesElActivator().registerEvaluator(container);
  }
}
