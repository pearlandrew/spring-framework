{
  MockServletContext sc=new MockServletContext();
  sc.addInitParameter("key4","mykey4");
  StaticWebApplicationContext wac=new StaticWebApplicationContext();
  wac.setServletContext(sc);
  MutablePropertyValues pvs=new MutablePropertyValues();
  pvs.add("age","${age}");
  pvs.add("name","${key4}name${var}${var}${");
  pvs.add("spouse",new RuntimeBeanReference("${ref}"));
  wac.registerSingleton("tb1",TestBean.class,pvs);
  RootBeanDefinition bd=new RootBeanDefinition(TestBean.class,null);
  wac.getDefaultListableBeanFactory().registerBeanDefinition("tb2",bd);
  pvs=new MutablePropertyValues();
  pvs.add("properties","age=98\nvar=${m}var\nref=tb2\nm=my\nkey4=yourkey4");
  pvs.add("contextOverride",Boolean.TRUE);
  wac.registerSingleton("configurer",ServletContextPropertyPlaceholderConfigurer.class,pvs);
  wac.refresh();
  TestBean tb1=(TestBean)wac.getBean("tb1");
  TestBean tb2=(TestBean)wac.getBean("tb2");
  assertEquals(98,tb1.getAge());
  assertEquals("mykey4namemyvarmyvar${",tb1.getName());
  assertEquals(tb2,tb1.getSpouse());
}
