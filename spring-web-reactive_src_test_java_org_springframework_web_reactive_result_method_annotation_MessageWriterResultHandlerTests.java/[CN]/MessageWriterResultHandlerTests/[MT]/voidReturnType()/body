{
  testVoidReturnType(null,ResolvableType.forType(void.class));
  testVoidReturnType(Mono.empty(),ResolvableType.forClassWithGenerics(Mono.class,Void.class));
  testVoidReturnType(Completable.complete(),ResolvableType.forClass(Completable.class));
  testVoidReturnType(io.reactivex.Completable.complete(),ResolvableType.forClass(io.reactivex.Completable.class));
  testVoidReturnType(Flux.empty(),ResolvableType.forClassWithGenerics(Flux.class,Void.class));
  testVoidReturnType(Observable.empty(),ResolvableType.forClassWithGenerics(Observable.class,Void.class));
  testVoidReturnType(io.reactivex.Observable.empty(),ResolvableType.forClassWithGenerics(io.reactivex.Observable.class,Void.class));
  testVoidReturnType(Flowable.empty(),ResolvableType.forClassWithGenerics(Flowable.class,Void.class));
}
