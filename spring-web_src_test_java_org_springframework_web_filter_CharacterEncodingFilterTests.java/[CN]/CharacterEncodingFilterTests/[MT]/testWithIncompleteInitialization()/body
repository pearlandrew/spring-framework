{
  HttpServletRequest request=createMock(HttpServletRequest.class);
  addAsyncManagerExpectations(request);
  expect(request.getCharacterEncoding()).andReturn(null);
  request.setCharacterEncoding(ENCODING);
  expect(request.getAttribute(WebUtils.ERROR_REQUEST_URI_ATTRIBUTE)).andReturn(null);
  expect(request.getAttribute(CharacterEncodingFilter.class.getName() + OncePerRequestFilter.ALREADY_FILTERED_SUFFIX)).andReturn(null);
  request.setAttribute(CharacterEncodingFilter.class.getName() + OncePerRequestFilter.ALREADY_FILTERED_SUFFIX,Boolean.TRUE);
  request.removeAttribute(CharacterEncodingFilter.class.getName() + OncePerRequestFilter.ALREADY_FILTERED_SUFFIX);
  replay(request);
  MockHttpServletResponse response=new MockHttpServletResponse();
  FilterChain filterChain=createMock(FilterChain.class);
  filterChain.doFilter(request,response);
  replay(filterChain);
  CharacterEncodingFilter filter=new CharacterEncodingFilter();
  filter.setEncoding(ENCODING);
  filter.doFilter(request,response,filterChain);
  verify(request);
  verify(filterChain);
}
