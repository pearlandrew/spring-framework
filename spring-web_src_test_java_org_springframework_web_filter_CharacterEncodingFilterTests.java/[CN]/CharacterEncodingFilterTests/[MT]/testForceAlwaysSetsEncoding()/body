{
  HttpServletRequest request=createMock(HttpServletRequest.class);
  expect(request.getAttribute(AsyncExecutionChain.CALLABLE_CHAIN_ATTRIBUTE)).andReturn(null);
  request.setAttribute(same(AsyncExecutionChain.CALLABLE_CHAIN_ATTRIBUTE),notNull());
  request.setCharacterEncoding(ENCODING);
  expect(request.getAttribute(FILTER_NAME + OncePerRequestFilter.ALREADY_FILTERED_SUFFIX)).andReturn(null);
  request.setAttribute(FILTER_NAME + OncePerRequestFilter.ALREADY_FILTERED_SUFFIX,Boolean.TRUE);
  request.removeAttribute(FILTER_NAME + OncePerRequestFilter.ALREADY_FILTERED_SUFFIX);
  replay(request);
  HttpServletResponse response=createMock(HttpServletResponse.class);
  response.setCharacterEncoding(ENCODING);
  replay(response);
  FilterChain filterChain=createMock(FilterChain.class);
  filterChain.doFilter(request,response);
  replay(filterChain);
  CharacterEncodingFilter filter=new CharacterEncodingFilter();
  filter.setForceEncoding(true);
  filter.setEncoding(ENCODING);
  filter.init(new MockFilterConfig(FILTER_NAME));
  filter.doFilter(request,response,filterChain);
  verify(request);
  verify(response);
  verify(filterChain);
}
