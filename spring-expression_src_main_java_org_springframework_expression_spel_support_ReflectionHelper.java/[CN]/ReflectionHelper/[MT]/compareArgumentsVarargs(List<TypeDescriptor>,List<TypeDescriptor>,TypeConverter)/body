{
  Assert.isTrue(expectedArgTypes != null && expectedArgTypes.size() > 0,"Expected arguments must at least include one array (the vargargs parameter)");
  Assert.isTrue(expectedArgTypes.get(expectedArgTypes.size() - 1).isArray(),"Final expected argument should be array type (the varargs parameter)");
  ArgumentsMatchKind match=ArgumentsMatchKind.EXACT;
  int argCountUpToVarargs=expectedArgTypes.size() - 1;
  for (int i=0; i < argCountUpToVarargs && match != null; i++) {
    TypeDescriptor suppliedArg=suppliedArgTypes.get(i);
    TypeDescriptor expectedArg=expectedArgTypes.get(i);
    if (suppliedArg == null) {
      if (expectedArg.isPrimitive()) {
        match=null;
      }
    }
 else {
      if (!expectedArg.equals(suppliedArg)) {
        if (suppliedArg.isAssignableTo(expectedArg)) {
          if (match != ArgumentsMatchKind.REQUIRES_CONVERSION) {
            match=ArgumentsMatchKind.CLOSE;
          }
        }
 else         if (typeConverter.canConvert(suppliedArg,expectedArg)) {
          match=ArgumentsMatchKind.REQUIRES_CONVERSION;
        }
 else {
          match=null;
        }
      }
    }
  }
  if (match == null) {
    return null;
  }
  if (suppliedArgTypes.size() == expectedArgTypes.size() && expectedArgTypes.get(expectedArgTypes.size() - 1).equals(suppliedArgTypes.get(suppliedArgTypes.size() - 1))) {
  }
 else {
    TypeDescriptor varargsDesc=expectedArgTypes.get(expectedArgTypes.size() - 1);
    Class<?> varargsParamType=varargsDesc.getElementTypeDescriptor().getType();
    for (int i=expectedArgTypes.size() - 1; i < suppliedArgTypes.size(); i++) {
      TypeDescriptor suppliedArg=suppliedArgTypes.get(i);
      if (suppliedArg == null) {
        if (varargsParamType.isPrimitive()) {
          match=null;
        }
      }
 else {
        if (varargsParamType != suppliedArg.getType()) {
          if (ClassUtils.isAssignable(varargsParamType,suppliedArg.getType())) {
            if (match != ArgumentsMatchKind.REQUIRES_CONVERSION) {
              match=ArgumentsMatchKind.CLOSE;
            }
          }
 else           if (typeConverter.canConvert(suppliedArg,TypeDescriptor.valueOf(varargsParamType))) {
            match=ArgumentsMatchKind.REQUIRES_CONVERSION;
          }
 else {
            match=null;
          }
        }
      }
    }
  }
  return (match != null ? new ArgumentsMatchInfo(match) : null);
}
