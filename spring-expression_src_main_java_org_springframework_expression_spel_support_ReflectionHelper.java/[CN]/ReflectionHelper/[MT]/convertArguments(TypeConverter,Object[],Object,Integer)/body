{
  boolean conversionOccurred=false;
  if (varargsPosition == null) {
    for (int i=0; i < arguments.length; i++) {
      TypeDescriptor targetType=new TypeDescriptor(MethodParameter.forMethodOrConstructor(methodOrCtor,i));
      Object argument=arguments[i];
      arguments[i]=converter.convertValue(argument,TypeDescriptor.forObject(argument),targetType);
      conversionOccurred|=(argument != arguments[i]);
    }
  }
 else {
    for (int i=0; i < varargsPosition; i++) {
      TypeDescriptor targetType=new TypeDescriptor(MethodParameter.forMethodOrConstructor(methodOrCtor,i));
      Object argument=arguments[i];
      arguments[i]=converter.convertValue(argument,TypeDescriptor.forObject(argument),targetType);
      conversionOccurred|=(argument != arguments[i]);
    }
    MethodParameter methodParam=MethodParameter.forMethodOrConstructor(methodOrCtor,varargsPosition);
    if (varargsPosition == arguments.length - 1) {
      TypeDescriptor targetType=new TypeDescriptor(methodParam);
      Object argument=arguments[varargsPosition];
      TypeDescriptor sourceType=TypeDescriptor.forObject(argument);
      arguments[varargsPosition]=converter.convertValue(argument,sourceType,targetType);
      if (argument != arguments[varargsPosition] && !isFirstEntryInArray(argument,arguments[varargsPosition])) {
        conversionOccurred=true;
      }
    }
 else {
      TypeDescriptor targetType=new TypeDescriptor(methodParam).getElementTypeDescriptor();
      for (int i=varargsPosition; i < arguments.length; i++) {
        Object argument=arguments[i];
        arguments[i]=converter.convertValue(argument,TypeDescriptor.forObject(argument),targetType);
        conversionOccurred|=(argument != arguments[i]);
      }
    }
  }
  return conversionOccurred;
}
