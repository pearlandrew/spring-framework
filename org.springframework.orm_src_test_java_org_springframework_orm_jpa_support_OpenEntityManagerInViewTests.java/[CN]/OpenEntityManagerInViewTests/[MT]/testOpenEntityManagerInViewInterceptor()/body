{
  OpenEntityManagerInViewInterceptor interceptor=new OpenEntityManagerInViewInterceptor();
  interceptor.setEntityManagerFactory(factory);
  MockServletContext sc=new MockServletContext();
  MockHttpServletRequest request=new MockHttpServletRequest(sc);
  managerControl.replay();
  factoryControl.replay();
  interceptor.preHandle(new ServletWebRequest(request));
  assertTrue(TransactionSynchronizationManager.hasResource(factory));
  interceptor.preHandle(new ServletWebRequest(request));
  interceptor.preHandle(new ServletWebRequest(request));
  interceptor.postHandle(new ServletWebRequest(request),null);
  interceptor.afterCompletion(new ServletWebRequest(request),null);
  interceptor.postHandle(new ServletWebRequest(request),null);
  interceptor.afterCompletion(new ServletWebRequest(request),null);
  interceptor.preHandle(new ServletWebRequest(request));
  interceptor.postHandle(new ServletWebRequest(request),null);
  interceptor.afterCompletion(new ServletWebRequest(request),null);
  factoryControl.verify();
  managerControl.verify();
  managerControl.reset();
  factoryControl.reset();
  managerControl.replay();
  factoryControl.replay();
  interceptor.postHandle(new ServletWebRequest(request),null);
  assertTrue(TransactionSynchronizationManager.hasResource(factory));
  factoryControl.verify();
  managerControl.verify();
  managerControl.reset();
  factoryControl.reset();
  managerControl.expectAndReturn(manager.isOpen(),true);
  manager.close();
  managerControl.replay();
  factoryControl.replay();
  interceptor.afterCompletion(new ServletWebRequest(request),null);
  assertFalse(TransactionSynchronizationManager.hasResource(factory));
  factoryControl.verify();
  managerControl.verify();
}
