{
  String sess1="sess1";
  String sess2="sess2";
  this.messageHandler.start();
  this.messageHandler.handleMessage(createSubscriptionMessage(sess1,"sub1","/foo"));
  this.messageHandler.handleMessage(createSubscriptionMessage(sess1,"sub2","/foo"));
  this.messageHandler.handleMessage(createSubscriptionMessage(sess1,"sub3","/bar"));
  this.messageHandler.handleMessage(createSubscriptionMessage(sess2,"sub1","/foo"));
  this.messageHandler.handleMessage(createSubscriptionMessage(sess2,"sub2","/foo"));
  this.messageHandler.handleMessage(createSubscriptionMessage(sess2,"sub3","/bar"));
  SimpMessageHeaderAccessor headers=SimpMessageHeaderAccessor.create(SimpMessageType.DISCONNECT);
  headers.setSessionId(sess1);
  Message<byte[]> message=MessageBuilder.withPayload(new byte[0]).copyHeaders(headers.toMap()).build();
  this.messageHandler.handleMessage(message);
  this.messageHandler.handleMessage(createMessage("/foo","message1"));
  this.messageHandler.handleMessage(createMessage("/bar","message2"));
  verify(this.clientOutboundChannel,times(3)).send(this.messageCaptor.capture());
  assertCapturedMessage(sess2,"sub1","/foo");
  assertCapturedMessage(sess2,"sub2","/foo");
  assertCapturedMessage(sess2,"sub3","/bar");
}
