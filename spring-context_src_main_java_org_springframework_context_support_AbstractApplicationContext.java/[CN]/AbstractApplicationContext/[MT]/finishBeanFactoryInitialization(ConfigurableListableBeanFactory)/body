{
  if (beanFactory.containsBean(CONVERSION_SERVICE_BEAN_NAME) && beanFactory.isTypeMatch(CONVERSION_SERVICE_BEAN_NAME,ConversionService.class)) {
    beanFactory.setConversionService(beanFactory.getBean(CONVERSION_SERVICE_BEAN_NAME,ConversionService.class));
  }
  if (!beanFactory.hasEmbeddedValueResolver()) {
    beanFactory.addEmbeddedValueResolver(new StringValueResolver(){
      @Override public String resolveStringValue(      String strVal){
        return getEnvironment().resolvePlaceholders(strVal);
      }
    }
);
  }
  String[] weaverAwareNames=beanFactory.getBeanNamesForType(LoadTimeWeaverAware.class,false,false);
  for (  String weaverAwareName : weaverAwareNames) {
    getBean(weaverAwareName);
  }
  beanFactory.setTempClassLoader(null);
  beanFactory.freezeConfiguration();
  beanFactory.preInstantiateSingletons();
}
