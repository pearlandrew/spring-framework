{
  if (this.recovering && this.interrupted) {
    return false;
  }
  long interval=execution.nextBackOff();
  if (interval == BackOffExecution.STOP) {
    return false;
  }
 else {
    try {
synchronized (this.lifecycleMonitor) {
        this.lifecycleMonitor.wait(interval);
      }
    }
 catch (    InterruptedException interEx) {
      Thread.currentThread().interrupt();
      if (this.recovering) {
        this.interrupted=true;
      }
    }
    return true;
  }
}
