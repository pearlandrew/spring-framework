{
  try {
    String payload=textMessage.getPayload();
    Message<?> message=this.stompMessageConverter.toMessage(payload);
    StompHeaderAccessor headers=StompHeaderAccessor.wrap(message);
    headers.setSessionId(session.getId());
    headers.setUser(session.getPrincipal());
    if (logger.isTraceEnabled()) {
      logger.trace("Processing STOMP message: " + message);
    }
    try {
      StompHeaderAccessor stompHeaders=StompHeaderAccessor.wrap(message);
      SimpMessageType messageType=stompHeaders.getMessageType();
      if (SimpMessageType.CONNECT.equals(messageType)) {
        handleConnect(session,message);
      }
      message=MessageBuilder.fromMessage(message).copyHeaders(headers.toMap()).build();
      this.outputChannel.send(message);
    }
 catch (    Throwable t) {
      logger.error("Terminating STOMP session due to failure to send message: ",t);
      sendErrorMessage(session,t);
    }
  }
 catch (  Throwable error) {
    sendErrorMessage(session,error);
  }
}
