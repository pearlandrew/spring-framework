{
  MockControl mockSentTextMessage=MockControl.createControl(TextMessage.class);
  final TextMessage sentTextMessage=(TextMessage)mockSentTextMessage.getMock();
  sentTextMessage.getJMSCorrelationID();
  mockSentTextMessage.setReturnValue(CORRELATION_ID);
  sentTextMessage.getJMSReplyTo();
  mockSentTextMessage.setReturnValue(null);
  mockSentTextMessage.replay();
  MockControl mockResponseTextMessage=MockControl.createControl(TextMessage.class);
  TextMessage responseTextMessage=(TextMessage)mockResponseTextMessage.getMock();
  responseTextMessage.setJMSCorrelationID(CORRELATION_ID);
  mockResponseTextMessage.setVoidCallable();
  mockResponseTextMessage.replay();
  MockControl mockSession=MockControl.createControl(QueueSession.class);
  final QueueSession session=(QueueSession)mockSession.getMock();
  session.createTextMessage(RESPONSE_TEXT);
  mockSession.setReturnValue(responseTextMessage);
  mockSession.replay();
  MockControl mockDelegate=MockControl.createControl(ResponsiveMessageDelegate.class);
  ResponsiveMessageDelegate delegate=(ResponsiveMessageDelegate)mockDelegate.getMock();
  delegate.handleMessage(sentTextMessage);
  mockDelegate.setReturnValue(RESPONSE_TEXT);
  mockDelegate.replay();
  final MessageListenerAdapter102 adapter=new MessageListenerAdapter102(delegate){
    protected Object extractMessage(    Message message){
      return message;
    }
  }
;
  try {
    adapter.onMessage(sentTextMessage,session);
    fail("expected InvalidDestinationException");
  }
 catch (  InvalidDestinationException ex) {
  }
  mockDelegate.verify();
  mockSentTextMessage.verify();
  mockResponseTextMessage.verify();
  mockSession.verify();
}
