{
  ConnectionFactory connectionFactory=createMock(ConnectionFactory.class);
  RecordFactory recordFactory=createMock(RecordFactory.class);
  Connection connection=createMock(Connection.class);
  Interaction interaction=createMock(Interaction.class);
  RecordExtractor<Object> extractor=createMock(RecordExtractor.class);
  RecordCreator creator=createMock(RecordCreator.class);
  Record inputRecord=createMock(Record.class);
  Record outputRecord=createMock(Record.class);
  InteractionSpec interactionSpec=createMock(InteractionSpec.class);
  expect(connectionFactory.getConnection()).andReturn(connection);
  expect(connection.createInteraction()).andReturn(interaction);
  expect(connectionFactory.getRecordFactory()).andReturn(recordFactory);
  expect(creator.createRecord(recordFactory)).andReturn(outputRecord);
  expect(interaction.execute(interactionSpec,inputRecord,outputRecord)).andReturn(true);
  expect(extractor.extractData(outputRecord)).andStubReturn(new Object());
  interaction.close();
  connection.close();
  replay(connectionFactory,connection,interaction,extractor,creator);
  CciTemplate ct=new CciTemplate(connectionFactory);
  ct.setOutputRecordCreator(creator);
  ct.execute(interactionSpec,inputRecord,extractor);
  verify(connectionFactory,connection,interaction,extractor,creator);
}
