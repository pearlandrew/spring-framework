{
  int index=fqFieldName.lastIndexOf('.');
  if (index == -1 || index == fqFieldName.length()) {
    throw new IllegalArgumentException("Parameter name [" + fqFieldName + "] is not a valid static field. "+ "The parameter name must map to a static field such as "+ "[net.sf.jasperreports.engine.export.JRHtmlExporterParameter.IMAGES_URI]");
  }
  String className=fqFieldName.substring(0,index);
  String fieldName=fqFieldName.substring(index + 1);
  try {
    Class<?> cls=ClassUtils.forName(className,getApplicationContext().getClassLoader());
    Field field=cls.getField(fieldName);
    if (JRExporterParameter.class.isAssignableFrom(field.getType())) {
      try {
        return (JRExporterParameter)field.get(null);
      }
 catch (      IllegalAccessException ex) {
        throw new IllegalArgumentException("Unable to access field [" + fieldName + "] of class ["+ className+ "]. "+ "Check that it is static and accessible.");
      }
    }
 else {
      throw new IllegalArgumentException("Field [" + fieldName + "] on class ["+ className+ "] is not assignable from JRExporterParameter - check the type of this field.");
    }
  }
 catch (  ClassNotFoundException ex) {
    throw new IllegalArgumentException("Class [" + className + "] in key ["+ fqFieldName+ "] could not be found.");
  }
catch (  NoSuchFieldException ex) {
    throw new IllegalArgumentException("Field [" + fieldName + "] in key ["+ fqFieldName+ "] could not be found on class ["+ className+ "].");
  }
}
