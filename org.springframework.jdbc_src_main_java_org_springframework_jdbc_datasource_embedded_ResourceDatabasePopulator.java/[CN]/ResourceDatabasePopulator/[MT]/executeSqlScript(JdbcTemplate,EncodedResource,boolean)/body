{
  if (logger.isInfoEnabled()) {
    logger.info("Executing SQL script from " + resource);
  }
  long startTime=System.currentTimeMillis();
  List<String> statements=new LinkedList<String>();
  try {
    LineNumberReader lnr=new LineNumberReader(resource.getReader());
    String script=readScript(lnr);
    char delimiter=';';
    if (!containsSqlScriptDelimiters(script,delimiter)) {
      delimiter='\n';
    }
    splitSqlScript(script,delimiter,statements);
    for (    String statement : statements) {
      try {
        int rowsAffected=template.update(statement);
        if (logger.isDebugEnabled()) {
          logger.debug(rowsAffected + " rows affected by SQL: " + statement);
        }
      }
 catch (      DataAccessException ex) {
        if (continueOnError) {
          if (logger.isWarnEnabled()) {
            logger.warn("SQL: " + statement + " failed",ex);
          }
        }
 else {
          throw ex;
        }
      }
    }
    long elapsedTime=System.currentTimeMillis() - startTime;
    if (logger.isInfoEnabled()) {
      logger.info("Done executing SQL script from " + resource + " in "+ elapsedTime+ " ms.");
    }
  }
 catch (  IOException ex) {
    throw new DataAccessResourceFailureException("Failed to open SQL script from " + resource,ex);
  }
}
