{
  if (annotation == null) {
    return;
  }
  for (  String origin : annotation.origin()) {
    config.addAllowedOrigin(origin);
  }
  for (  RequestMethod method : annotation.method()) {
    config.addAllowedMethod(method.name());
  }
  for (  String header : annotation.allowedHeaders()) {
    config.addAllowedHeader(header);
  }
  for (  String header : annotation.exposedHeaders()) {
    config.addExposedHeader(header);
  }
  String allowCredentials=annotation.allowCredentials();
  if ("true".equalsIgnoreCase(allowCredentials)) {
    config.setAllowCredentials(true);
  }
 else   if ("false".equalsIgnoreCase(allowCredentials)) {
    config.setAllowCredentials(false);
  }
 else   if (!allowCredentials.isEmpty()) {
    throw new IllegalStateException("@CrossOrigin's allowCredentials value must be \"true\", \"false\", " + "or an empty string (\"\"); current value is [" + allowCredentials + "].");
  }
  if (annotation.maxAge() != -1 && config.getMaxAge() == null) {
    config.setMaxAge(annotation.maxAge());
  }
}
