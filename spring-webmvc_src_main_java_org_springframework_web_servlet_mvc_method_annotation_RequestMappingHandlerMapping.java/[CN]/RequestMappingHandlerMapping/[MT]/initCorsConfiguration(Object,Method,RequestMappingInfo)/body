{
  HandlerMethod handlerMethod=createHandlerMethod(handler,method);
  CrossOrigin typeAnnotation=AnnotationUtils.findAnnotation(handlerMethod.getBeanType(),CrossOrigin.class);
  CrossOrigin methodAnnotation=AnnotationUtils.findAnnotation(method,CrossOrigin.class);
  if (typeAnnotation == null && methodAnnotation == null) {
    return null;
  }
  CorsConfiguration config=new CorsConfiguration();
  updateCorsConfig(config,typeAnnotation);
  updateCorsConfig(config,methodAnnotation);
  if (CollectionUtils.isEmpty(config.getAllowedOrigins())) {
    config.setAllowedOrigins(Arrays.asList(CrossOrigin.DEFAULT_ORIGINS));
  }
  if (CollectionUtils.isEmpty(config.getAllowedMethods())) {
    for (    RequestMethod allowedMethod : mappingInfo.getMethodsCondition().getMethods()) {
      config.addAllowedMethod(allowedMethod.name());
    }
  }
  if (CollectionUtils.isEmpty(config.getAllowedHeaders())) {
    config.setAllowedHeaders(Arrays.asList(CrossOrigin.DEFAULT_ALLOWED_HEADERS));
  }
  if (config.getAllowCredentials() == null) {
    config.setAllowCredentials(CrossOrigin.DEFAULT_ALLOW_CREDENTIALS);
  }
  if (config.getMaxAge() == null) {
    config.setMaxAge(CrossOrigin.DEFAULT_MAX_AGE);
  }
  return config;
}
