{
  SpelNode leftOp=getLeftOperand();
  SpelNode rightOp=getRightOperand();
  Object left=leftOp.getValue(state,String.class);
  Object right=getRightOperand().getValue(state);
  try {
    if (!(left instanceof String)) {
      throw new SpelException(leftOp.getCharPositionInLine(),SpelMessages.INVALID_FIRST_OPERAND_FOR_LIKE_OPERATOR,left);
    }
    if (!(right instanceof String)) {
      throw new SpelException(rightOp.getCharPositionInLine(),SpelMessages.INVALID_SECOND_OPERAND_FOR_LIKE_OPERATOR,right);
    }
    String likePattern=(String)right;
    likePattern=likePattern.replace('_','.');
    likePattern=likePattern.replaceAll("%",".*");
    Pattern pattern=Pattern.compile(likePattern);
    Matcher matcher=pattern.matcher((String)left);
    return matcher.matches();
  }
 catch (  PatternSyntaxException pse) {
    throw new SpelException(rightOp.getCharPositionInLine(),pse,SpelMessages.INVALID_PATTERN,right);
  }
}
