{
  if (proxy == other)   return true;
  if (other == null)   return false;
  if (!annoType.isAssignableFrom(other.getClass()))   return false;
  for (  String attribName : attributes.keySet()) {
    Object thisVal;
    Object thatVal;
    try {
      thisVal=attributes.get(attribName);
      thatVal=other.getClass().getDeclaredMethod(attribName).invoke(other);
    }
 catch (    Exception ex) {
      throw new RuntimeException(ex);
    }
    if ((thisVal == null) && (thatVal != null))     return false;
    if ((thatVal == null) && (thisVal != null))     return false;
    if (thatVal.getClass().isArray()) {
      if (!Arrays.equals((Object[])thatVal,(Object[])thisVal)) {
        return false;
      }
    }
 else     if (thisVal instanceof Double) {
      if (!Double.valueOf((Double)thisVal).equals(Double.valueOf((Double)thatVal)))       return false;
    }
 else     if (thisVal instanceof Float) {
      if (!Float.valueOf((Float)thisVal).equals(Float.valueOf((Float)thatVal)))       return false;
    }
 else     if (!thisVal.equals(thatVal)) {
      return false;
    }
  }
  return true;
}
