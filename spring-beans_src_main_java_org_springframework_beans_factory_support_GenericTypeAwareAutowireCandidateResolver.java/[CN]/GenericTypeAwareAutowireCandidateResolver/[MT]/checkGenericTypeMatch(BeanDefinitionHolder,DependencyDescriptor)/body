{
  ResolvableType dependencyType=descriptor.getResolvableType();
  if (dependencyType.getType() instanceof Class) {
    return true;
  }
  ResolvableType targetType=null;
  boolean cacheType=false;
  RootBeanDefinition rbd=null;
  if (bdHolder.getBeanDefinition() instanceof RootBeanDefinition) {
    rbd=(RootBeanDefinition)bdHolder.getBeanDefinition();
  }
  if (rbd != null) {
    targetType=rbd.targetType;
    if (targetType == null) {
      cacheType=true;
      targetType=getReturnTypeForFactoryMethod(rbd,descriptor);
      if (targetType == null) {
        RootBeanDefinition dbd=getResolvedDecoratedDefinition(rbd);
        if (dbd != null) {
          targetType=dbd.targetType;
          if (targetType == null) {
            targetType=getReturnTypeForFactoryMethod(dbd,descriptor);
          }
        }
      }
    }
  }
  if (targetType == null) {
    if (this.beanFactory != null) {
      Class<?> beanType=this.beanFactory.getType(bdHolder.getBeanName());
      if (beanType != null) {
        targetType=ResolvableType.forClass(ClassUtils.getUserClass(beanType));
      }
    }
    if (targetType == null && rbd != null && rbd.hasBeanClass() && rbd.getFactoryMethodName() == null) {
      Class<?> beanClass=rbd.getBeanClass();
      if (!FactoryBean.class.isAssignableFrom(beanClass)) {
        targetType=ResolvableType.forClass(ClassUtils.getUserClass(beanClass));
      }
    }
  }
  if (targetType == null) {
    return true;
  }
  if (cacheType) {
    rbd.targetType=targetType;
  }
  if (descriptor.fallbackMatchAllowed() && targetType.hasUnresolvableGenerics()) {
    return true;
  }
  return dependencyType.isAssignableFrom(targetType);
}
