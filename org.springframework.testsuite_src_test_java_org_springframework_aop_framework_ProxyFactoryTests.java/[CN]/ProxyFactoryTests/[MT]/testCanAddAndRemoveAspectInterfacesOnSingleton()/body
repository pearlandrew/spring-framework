{
  ProxyFactory config=new ProxyFactory(new TestBean());
  assertFalse("Shouldn't implement TimeStamped before manipulation",config.getProxy() instanceof TimeStamped);
  long time=666L;
  TimestampIntroductionInterceptor ti=new TimestampIntroductionInterceptor();
  ti.setTime(time);
  int oldCount=config.getAdvisors().length;
  config.addAdvisor(0,new DefaultIntroductionAdvisor(ti,TimeStamped.class));
  assertTrue(config.getAdvisors().length == oldCount + 1);
  TimeStamped ts=(TimeStamped)config.getProxy();
  assertTrue(ts.getTimeStamp() == time);
  config.removeAdvice(ti);
  assertTrue(config.getAdvisors().length == oldCount);
  try {
    ts.getTimeStamp();
    fail("Existing object won't implement this interface any more");
  }
 catch (  RuntimeException ex) {
  }
  assertFalse("Should no longer implement TimeStamped",config.getProxy() instanceof TimeStamped);
  config.removeAdvice(new DebugInterceptor());
  assertTrue(config.getAdvisors().length == oldCount);
  ITestBean it=(ITestBean)ts;
  DebugInterceptor debugInterceptor=new DebugInterceptor();
  config.addAdvice(0,debugInterceptor);
  it.getSpouse();
  assertEquals(1,debugInterceptor.getCount());
  config.removeAdvice(debugInterceptor);
  it.getSpouse();
  assertTrue(debugInterceptor.getCount() == 1);
}
