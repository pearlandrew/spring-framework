{
  Class classToIntrospect=formatterClass;
  while (classToIntrospect != null) {
    Type[] ifcs=classToIntrospect.getGenericInterfaces();
    for (    Type ifc : ifcs) {
      if (ifc instanceof ParameterizedType) {
        ParameterizedType paramIfc=(ParameterizedType)ifc;
        Type rawType=paramIfc.getRawType();
        if (Formatter.class.equals(rawType)) {
          Type arg=paramIfc.getActualTypeArguments()[0];
          if (arg instanceof TypeVariable) {
            arg=GenericTypeResolver.resolveTypeVariable((TypeVariable)arg,formatterClass);
          }
          if (arg instanceof Class) {
            return (Class)arg;
          }
        }
 else         if (Formatter.class.isAssignableFrom((Class)rawType)) {
          return getFormattedObjectType((Class)rawType);
        }
      }
 else       if (Formatter.class.isAssignableFrom((Class)ifc)) {
        return getFormattedObjectType((Class)ifc);
      }
    }
    classToIntrospect=classToIntrospect.getSuperclass();
  }
  return null;
}
