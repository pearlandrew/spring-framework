{
  String sessionId=resolveSessionId(message);
  if (sessionId == null) {
    if (logger.isErrorEnabled()) {
      logger.error("Couldn't find session id in " + message);
    }
    return;
  }
  WebSocketSessionHolder holder=this.sessions.get(sessionId);
  if (holder == null) {
    if (logger.isDebugEnabled()) {
      logger.debug("No session for " + message);
    }
    return;
  }
  WebSocketSession session=holder.getSession();
  try {
    findProtocolHandler(session).handleMessageToClient(session,message);
  }
 catch (  SessionLimitExceededException ex) {
    try {
      if (logger.isDebugEnabled()) {
        logger.debug("Terminating '" + session + "'",ex);
      }
      this.stats.incrementLimitExceededCount();
      clearSession(session,ex.getStatus());
      session.close(ex.getStatus());
    }
 catch (    Exception secondException) {
      logger.debug("Failure while closing session " + sessionId + ".",secondException);
    }
  }
catch (  Exception ex) {
    if (logger.isDebugEnabled()) {
      logger.debug("Failed to send message to client in " + session + ": "+ message,ex);
    }
  }
}
