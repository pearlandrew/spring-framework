{
  Spr9751 helper=new Spr9751();
  StandardEvaluationContext ctx=new StandardEvaluationContext(helper);
  ExpressionParser parser=new SpelExpressionParser(new SpelParserConfiguration(true,true));
  Expression e=null;
  e=parser.parseExpression("ddd--");
  assertEquals(2.0d,helper.ddd,0d);
  double return_ddd=e.getValue(ctx,Double.TYPE);
  assertEquals(2.0d,return_ddd,0d);
  assertEquals(1.0d,helper.ddd,0d);
  e=parser.parseExpression("fff--");
  assertEquals(3.0f,helper.fff,0d);
  float return_fff=e.getValue(ctx,Float.TYPE);
  assertEquals(3.0f,return_fff,0d);
  assertEquals(2.0f,helper.fff,0d);
  e=parser.parseExpression("lll--");
  assertEquals(66666L,helper.lll);
  long return_lll=e.getValue(ctx,Long.TYPE);
  assertEquals(66666L,return_lll);
  assertEquals(66665L,helper.lll);
  e=parser.parseExpression("iii--");
  assertEquals(42,helper.iii);
  int return_iii=e.getValue(ctx,Integer.TYPE);
  assertEquals(42,return_iii);
  assertEquals(41,helper.iii);
  return_iii=e.getValue(ctx,Integer.TYPE);
  assertEquals(41,return_iii);
  assertEquals(40,helper.iii);
  e=parser.parseExpression("sss--");
  assertEquals(15,helper.sss);
  short return_sss=e.getValue(ctx,Short.TYPE);
  assertEquals(15,return_sss);
  assertEquals(14,helper.sss);
}
