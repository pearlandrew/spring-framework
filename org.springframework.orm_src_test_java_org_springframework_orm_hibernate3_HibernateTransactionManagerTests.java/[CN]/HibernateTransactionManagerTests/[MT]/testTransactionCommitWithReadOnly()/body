{
  MockControl conControl=MockControl.createControl(Connection.class);
  Connection con=(Connection)conControl.getMock();
  MockControl sfControl=MockControl.createControl(SessionFactory.class);
  final SessionFactory sf=(SessionFactory)sfControl.getMock();
  MockControl sessionControl=MockControl.createControl(Session.class);
  Session session=(Session)sessionControl.getMock();
  MockControl txControl=MockControl.createControl(Transaction.class);
  Transaction tx=(Transaction)txControl.getMock();
  MockControl queryControl=MockControl.createControl(Query.class);
  Query query=(Query)queryControl.getMock();
  final List list=new ArrayList();
  list.add("test");
  sf.openSession();
  sfControl.setReturnValue(session,1);
  session.beginTransaction();
  sessionControl.setReturnValue(tx,1);
  session.setFlushMode(FlushMode.NEVER);
  sessionControl.setVoidCallable(1);
  session.connection();
  sessionControl.setReturnValue(con,2);
  con.setReadOnly(true);
  conControl.setVoidCallable(1);
  session.isOpen();
  sessionControl.setReturnValue(true,1);
  session.createQuery("some query string");
  sessionControl.setReturnValue(query,1);
  query.list();
  queryControl.setReturnValue(list,1);
  tx.commit();
  txControl.setVoidCallable(1);
  session.isConnected();
  sessionControl.setReturnValue(true,1);
  con.isReadOnly();
  conControl.setReturnValue(true,1);
  con.setReadOnly(false);
  conControl.setVoidCallable(1);
  session.close();
  sessionControl.setReturnValue(null,1);
  conControl.replay();
  sfControl.replay();
  sessionControl.replay();
  txControl.replay();
  queryControl.replay();
  HibernateTransactionManager tm=new HibernateTransactionManager(sf);
  TransactionTemplate tt=new TransactionTemplate(tm);
  tt.setReadOnly(true);
  assertTrue("Hasn't thread session",!TransactionSynchronizationManager.hasResource(sf));
  assertTrue("JTA synchronizations not active",!TransactionSynchronizationManager.isSynchronizationActive());
  Object result=tt.execute(new TransactionCallback(){
    public Object doInTransaction(    TransactionStatus status){
      assertTrue("Has thread session",TransactionSynchronizationManager.hasResource(sf));
      assertTrue(TransactionSynchronizationManager.isCurrentTransactionReadOnly());
      assertTrue(TransactionSynchronizationManager.isActualTransactionActive());
      HibernateTemplate ht=new HibernateTemplate(sf);
      return ht.find("some query string");
    }
  }
);
  assertTrue("Correct result list",result == list);
  assertTrue("Hasn't thread session",!TransactionSynchronizationManager.hasResource(sf));
  assertTrue("JTA synchronizations not active",!TransactionSynchronizationManager.isSynchronizationActive());
  conControl.verify();
  sfControl.verify();
  sessionControl.verify();
  txControl.verify();
  queryControl.verify();
}
