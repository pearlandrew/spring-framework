{
  Class<?> proxyClass=enhancer.createClass();
  Object proxyInstance=null;
  if (objenesis.isWorthTrying()) {
    try {
      proxyInstance=objenesis.newInstance(proxyClass,enhancer.getUseCache());
    }
 catch (    Throwable ex) {
      logger.debug("Unable to instantiate proxy using Objenesis, " + "falling back to regular proxy construction",ex);
    }
  }
  if (proxyInstance == null) {
    try {
      proxyInstance=(this.constructorArgs != null ? proxyClass.getConstructor(this.constructorArgTypes).newInstance(this.constructorArgs) : proxyClass.newInstance());
    }
 catch (    Throwable ex) {
      throw new AopConfigException("Unable to instantiate proxy using Objenesis, " + "and regular proxy instantiation via default constructor fails as well",ex);
    }
  }
  ((Factory)proxyInstance).setCallbacks(callbacks);
  return proxyInstance;
}
