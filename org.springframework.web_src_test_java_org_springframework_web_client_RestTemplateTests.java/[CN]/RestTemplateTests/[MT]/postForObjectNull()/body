{
  MediaType textPlain=new MediaType("text","plain");
  expect(converter.canRead(Integer.class,null)).andReturn(true);
  expect(converter.getSupportedMediaTypes()).andReturn(Collections.singletonList(textPlain));
  expect(requestFactory.createRequest(new URI("http://example.com"),HttpMethod.POST)).andReturn(request);
  HttpHeaders requestHeaders=new HttpHeaders();
  expect(request.getHeaders()).andReturn(requestHeaders).times(2);
  expect(request.execute()).andReturn(response);
  expect(errorHandler.hasError(response)).andReturn(false);
  HttpHeaders responseHeaders=new HttpHeaders();
  responseHeaders.setContentType(textPlain);
  expect(response.getHeaders()).andReturn(responseHeaders);
  expect(converter.canRead(Integer.class,textPlain)).andReturn(true);
  expect(converter.read(Integer.class,response)).andReturn(null);
  response.close();
  replayMocks();
  template.postForObject("http://example.com",null,Integer.class);
  assertEquals("Invalid content length",0,requestHeaders.getContentLength());
  verifyMocks();
}
