{
  DependenciesBean rod1=(DependenciesBean)xbf.getBean("rod1");
  TestBean kerry=(TestBean)xbf.getBean("spouse");
  assertEquals(kerry,rod1.getSpouse());
  DependenciesBean rod1a=(DependenciesBean)xbf.getBean("rod1a");
  assertEquals(kerry,rod1a.getSpouse());
  DependenciesBean rod2=(DependenciesBean)xbf.getBean("rod2");
  assertEquals(kerry,rod2.getSpouse());
  DependenciesBean rod2a=(DependenciesBean)xbf.getBean("rod2a");
  assertEquals(kerry,rod2a.getSpouse());
  ConstructorDependenciesBean rod3=(ConstructorDependenciesBean)xbf.getBean("rod3");
  IndexedTestBean other=(IndexedTestBean)xbf.getBean("other");
  assertEquals(kerry,rod3.getSpouse1());
  assertEquals(kerry,rod3.getSpouse2());
  assertEquals(other,rod3.getOther());
  ConstructorDependenciesBean rod3a=(ConstructorDependenciesBean)xbf.getBean("rod3a");
  assertEquals(kerry,rod3a.getSpouse1());
  assertEquals(kerry,rod3a.getSpouse2());
  assertEquals(other,rod3a.getOther());
  try {
    xbf.getBean("rod4",ConstructorDependenciesBean.class);
    fail("Must have thrown a FatalBeanException");
  }
 catch (  FatalBeanException expected) {
  }
  DependenciesBean rod5=(DependenciesBean)xbf.getBean("rod5");
  assertNull(rod5.getSpouse());
  BeanFactory appCtx=(BeanFactory)xbf.getBean("childAppCtx");
  assertTrue(appCtx.containsBean("rod1"));
  assertTrue(appCtx.containsBean("jenny"));
}
