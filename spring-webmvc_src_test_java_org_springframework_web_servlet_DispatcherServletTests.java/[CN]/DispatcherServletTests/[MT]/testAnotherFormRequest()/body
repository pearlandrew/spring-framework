{
  MockHttpServletRequest request=new MockHttpServletRequest(getServletContext(),"GET","/form.do;jsessionid=xxx");
  request.addPreferredLocale(Locale.CANADA);
  MockHttpServletResponse response=new MockHttpServletResponse();
  complexDispatcherServlet.service(request,response);
  assertTrue("forwarded to form","myform.jsp".equals(response.getForwardedUrl()));
  assertTrue("has RequestContext attribute",request.getAttribute("rc") != null);
  DefaultMessageSourceResolvable resolvable=new DefaultMessageSourceResolvable(new String[]{"test"});
  RequestContext rc=(RequestContext)request.getAttribute("rc");
  assertTrue("Not in HTML escaping mode",!rc.isDefaultHtmlEscape());
  assertTrue("Correct WebApplicationContext",rc.getWebApplicationContext() == complexDispatcherServlet.getWebApplicationContext());
  assertTrue("Correct context path",rc.getContextPath().equals(request.getContextPath()));
  assertTrue("Correct locale",Locale.CANADA.equals(rc.getLocale()));
  assertTrue("Correct Errors",!(rc.getErrors(BaseCommandController.DEFAULT_COMMAND_NAME) instanceof EscapedErrors));
  assertTrue("Correct Errors",!(rc.getErrors(BaseCommandController.DEFAULT_COMMAND_NAME,false) instanceof EscapedErrors));
  assertTrue("Correct Errors",rc.getErrors(BaseCommandController.DEFAULT_COMMAND_NAME,true) instanceof EscapedErrors);
  assertEquals("Correct message","Canadian & test message",rc.getMessage("test"));
  assertEquals("Correct message","Canadian & test message",rc.getMessage("test",null,false));
  assertEquals("Correct message","Canadian &amp; test message",rc.getMessage("test",null,true));
  assertEquals("Correct message","Canadian & test message",rc.getMessage(resolvable));
  assertEquals("Correct message","Canadian & test message",rc.getMessage(resolvable,false));
  assertEquals("Correct message","Canadian &amp; test message",rc.getMessage(resolvable,true));
  rc.setDefaultHtmlEscape(true);
  assertTrue("Is in HTML escaping mode",rc.isDefaultHtmlEscape());
  assertTrue("Correct Errors",rc.getErrors(BaseCommandController.DEFAULT_COMMAND_NAME) instanceof EscapedErrors);
  assertTrue("Correct Errors",!(rc.getErrors(BaseCommandController.DEFAULT_COMMAND_NAME,false) instanceof EscapedErrors));
  assertTrue("Correct Errors",rc.getErrors(BaseCommandController.DEFAULT_COMMAND_NAME,true) instanceof EscapedErrors);
  assertEquals("Correct message","Canadian &amp; test message",rc.getMessage("test"));
  assertEquals("Correct message","Canadian & test message",rc.getMessage("test",null,false));
  assertEquals("Correct message","Canadian &amp; test message",rc.getMessage("test",null,true));
  assertEquals("Correct message","Canadian &amp; test message",rc.getMessage(resolvable));
  assertEquals("Correct message","Canadian & test message",rc.getMessage(resolvable,false));
  assertEquals("Correct message","Canadian &amp; test message",rc.getMessage(resolvable,true));
}
