{
  JmsTemplate102 template=createTemplate();
  template.setPubSubDomain(true);
  template.setConnectionFactory(topicConnectionFactory);
  template.afterPropertiesSet();
  TopicPublisher topicPublisher=mock(TopicPublisher.class);
  TextMessage message=mock(TextMessage.class);
  given(topicSession.createPublisher(this.topic)).willReturn(topicPublisher);
  given(topicSession.createTextMessage("just testing")).willReturn(message);
  if (ignoreQOS) {
    topicPublisher.publish(message);
  }
 else {
    template.setExplicitQosEnabled(true);
    template.setDeliveryMode(deliveryMode);
    template.setPriority(priority);
    template.setTimeToLive(timeToLive);
    topicPublisher.publish(message,deliveryMode,priority,timeToLive);
  }
  template.setPubSubDomain(true);
  if (explicitTopic) {
    template.send(topic,new MessageCreator(){
      @Override public Message createMessage(      Session session) throws JMSException {
        return session.createTextMessage("just testing");
      }
    }
);
  }
 else {
    template.send("testTopic",new MessageCreator(){
      @Override public Message createMessage(      Session session) throws JMSException {
        return session.createTextMessage("just testing");
      }
    }
);
  }
  if (useTransactedTemplate()) {
    verify(topicSession).commit();
  }
  verify(topicPublisher).close();
  verify(topicSession).close();
  verify(topicConnection).close();
  verify(jndiContext).close();
}
