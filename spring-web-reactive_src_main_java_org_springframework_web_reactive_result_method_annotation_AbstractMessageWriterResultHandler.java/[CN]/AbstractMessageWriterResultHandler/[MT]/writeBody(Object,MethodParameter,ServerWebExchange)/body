{
  ResolvableType bodyType=ResolvableType.forMethodParameter(bodyParameter);
  ReactiveAdapter adapter=getAdapterRegistry().getAdapterFrom(bodyType.resolve(),body);
  Publisher<?> publisher;
  ResolvableType elementType;
  if (adapter != null) {
    publisher=adapter.toPublisher(body);
    elementType=adapter.getDescriptor().isNoValue() ? ResolvableType.forClass(Void.class) : bodyType.getGeneric(0);
  }
 else {
    publisher=Mono.justOrEmpty(body);
    elementType=bodyType;
  }
  if (void.class == elementType.getRawClass() || Void.class == elementType.getRawClass()) {
    return Mono.from((Publisher<Void>)publisher);
  }
  List<MediaType> producibleTypes=getProducibleMediaTypes(elementType);
  if (producibleTypes.isEmpty()) {
    return Mono.error(new IllegalStateException("No converter for return value type: " + elementType));
  }
  ServerHttpRequest request=exchange.getRequest();
  ServerHttpResponse response=exchange.getResponse();
  MediaType bestMediaType=selectMediaType(exchange,producibleTypes);
  if (bestMediaType != null) {
    for (    HttpMessageWriter<?> messageWriter : getMessageWriters()) {
      if (messageWriter.canWrite(elementType,bestMediaType)) {
        return (messageWriter instanceof ServerHttpMessageWriter ? ((ServerHttpMessageWriter<?>)messageWriter).write((Publisher)publisher,bodyType,elementType,bestMediaType,request,response,Collections.emptyMap()) : messageWriter.write((Publisher)publisher,elementType,bestMediaType,response,Collections.emptyMap()));
      }
    }
  }
  return Mono.error(new NotAcceptableStatusException(producibleTypes));
}
