{
  if (!(clbf instanceof DefaultListableBeanFactory))   throw new IllegalStateException("beanFactory must be of type " + DefaultListableBeanFactory.class.getSimpleName());
  DefaultListableBeanFactory beanFactory=(DefaultListableBeanFactory)clbf;
  ConfigurationEnhancer enhancer=new CglibConfigurationEnhancer(beanFactory,model);
  int configClassesEnhanced=0;
  for (  String beanName : beanFactory.getBeanDefinitionNames()) {
    BeanDefinition beanDef=beanFactory.getBeanDefinition(beanName);
    if (!isConfigClass(beanDef))     continue;
    String configClassName=beanDef.getBeanClassName();
    String enhancedClassName=enhancer.enhance(configClassName);
    if (logger.isDebugEnabled())     logger.debug(String.format("Replacing bean definition '%s' existing class name '%s' with enhanced class name '%s'",beanName,configClassName,enhancedClassName));
    beanDef.setBeanClassName(enhancedClassName);
    configClassesEnhanced++;
  }
  if (configClassesEnhanced == 0)   logger.warn("Found no @Configuration class BeanDefinitions within " + beanFactory);
}
