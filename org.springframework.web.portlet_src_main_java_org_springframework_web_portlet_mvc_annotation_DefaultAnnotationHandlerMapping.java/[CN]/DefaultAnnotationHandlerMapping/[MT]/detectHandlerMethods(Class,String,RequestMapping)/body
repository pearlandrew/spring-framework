{
  final Set<Boolean> handlersRegistered=new HashSet<Boolean>(1);
  ReflectionUtils.doWithMethods(handlerType,new ReflectionUtils.MethodCallback(){
    public void doWith(    Method method){
      boolean mappingFound=false;
      String[] modeKeys=new String[0];
      String[] params=new String[0];
      for (      Annotation ann : method.getAnnotations()) {
        if (AnnotationUtils.findAnnotation(ann.getClass(),Mapping.class) != null) {
          mappingFound=true;
          if (ann instanceof RequestMapping) {
            modeKeys=(String[])AnnotationUtils.getValue(ann);
          }
          String[] specificParams=(String[])AnnotationUtils.getValue(ann,"params");
          params=StringUtils.mergeStringArrays(params,specificParams);
        }
      }
      if (mappingFound) {
        if (modeKeys.length == 0) {
          if (typeMapping != null) {
            modeKeys=typeMapping.value();
          }
 else {
            throw new IllegalStateException("No portlet mode mappings specified - neither at type nor method level");
          }
        }
        if (typeMapping != null) {
          PortletAnnotationMappingUtils.validateModeMapping(modeKeys,typeMapping.value());
          params=StringUtils.mergeStringArrays(typeMapping.params(),params);
        }
        ParameterMappingPredicate predicate=new ParameterMappingPredicate(params);
        for (        String modeKey : modeKeys) {
          registerHandler(new PortletMode(modeKey),beanName,predicate);
          handlersRegistered.add(Boolean.TRUE);
        }
      }
    }
  }
);
  return !handlersRegistered.isEmpty();
}
