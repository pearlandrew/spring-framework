{
  final Set<Boolean> handlersRegistered=new HashSet<Boolean>(1);
  ReflectionUtils.doWithMethods(handlerType,new ReflectionUtils.MethodCallback(){
    public void doWith(    Method method){
      boolean mappingFound=false;
      String[] modeKeys=new String[0];
      String[] params=new String[0];
      String resourceId=null;
      String eventName=null;
      for (      Annotation ann : method.getAnnotations()) {
        if (AnnotationUtils.findAnnotation(ann.getClass(),Mapping.class) != null) {
          mappingFound=true;
          if (ann instanceof RequestMapping) {
            RequestMapping rm=(RequestMapping)ann;
            modeKeys=rm.value();
            params=StringUtils.mergeStringArrays(params,rm.params());
          }
 else           if (ann instanceof ResourceMapping) {
            ResourceMapping rm=(ResourceMapping)ann;
            resourceId=rm.value();
          }
 else           if (ann instanceof EventMapping) {
            EventMapping em=(EventMapping)ann;
            eventName=em.value();
          }
 else {
            String[] specificParams=(String[])AnnotationUtils.getValue(ann,"params");
            params=StringUtils.mergeStringArrays(params,specificParams);
          }
        }
      }
      if (mappingFound) {
        if (modeKeys.length == 0) {
          if (typeMapping != null) {
            modeKeys=typeMapping.value();
          }
 else {
            throw new IllegalStateException("No portlet mode mappings specified - neither at type nor at method level");
          }
        }
        if (typeMapping != null) {
          if (!PortletAnnotationMappingUtils.validateModeMapping(modeKeys,typeMapping.value())) {
            throw new IllegalStateException("Mode mappings conflict between method and type level: " + Arrays.asList(modeKeys) + " versus "+ Arrays.asList(typeMapping.value()));
          }
          params=StringUtils.mergeStringArrays(typeMapping.params(),params);
        }
        PortletRequestMappingPredicate predicate;
        if (resourceId != null) {
          predicate=new ResourceMappingPredicate(resourceId);
        }
 else         if (eventName != null) {
          predicate=new EventMappingPredicate(eventName);
        }
 else {
          predicate=new ParameterMappingPredicate(params);
        }
        for (        String modeKey : modeKeys) {
          registerHandler(new PortletMode(modeKey),beanName,predicate);
          handlersRegistered.add(Boolean.TRUE);
        }
      }
    }
  }
);
  return !handlersRegistered.isEmpty();
}
