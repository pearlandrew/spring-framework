{
  GenericApplicationContext context=new GenericApplicationContext();
  ClassPathBeanDefinitionScanner scanner=new ClassPathBeanDefinitionScanner(context);
  int beanCount=scanner.scan(BASE_PACKAGE);
  assertEquals(10,beanCount);
  assertTrue(context.containsBean("serviceInvocationCounter"));
  assertTrue(context.containsBean("fooServiceImpl"));
  assertTrue(context.containsBean("stubFooDao"));
  assertTrue(context.containsBean("myNamedComponent"));
  assertTrue(context.containsBean("myNamedDao"));
  assertTrue(context.containsBean("thoreau"));
  assertTrue(context.containsBean(AnnotationConfigUtils.CONFIGURATION_ANNOTATION_PROCESSOR_BEAN_NAME));
  assertTrue(context.containsBean(AnnotationConfigUtils.AUTOWIRED_ANNOTATION_PROCESSOR_BEAN_NAME));
  assertTrue(context.containsBean(AnnotationConfigUtils.REQUIRED_ANNOTATION_PROCESSOR_BEAN_NAME));
  assertTrue(context.containsBean(AnnotationConfigUtils.COMMON_ANNOTATION_PROCESSOR_BEAN_NAME));
  context.refresh();
  FooServiceImpl service=context.getBean("fooServiceImpl",FooServiceImpl.class);
  assertTrue(context.getDefaultListableBeanFactory().containsSingleton("myNamedComponent"));
  assertEquals("bar",service.foo(1));
  assertTrue(context.isPrototype("thoreau"));
}
