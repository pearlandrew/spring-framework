{
  StandardEvaluationContext context=new StandardEvaluationContext();
  context.setRootObject(object);
  context.setTypeConverter(new StandardTypeConverter(conversionService));
  context.addPropertyAccessor(new PropertyAccessor(){
    public boolean canRead(    EvaluationContext context,    Object target,    String name) throws AccessException {
      Element e=(Element)target;
      return e.hasAttribute(name);
    }
    public boolean canWrite(    EvaluationContext context,    Object target,    String name) throws AccessException {
      return canRead(context,target,name);
    }
    public Class<?>[] getSpecificTargetClasses(){
      return new Class[]{Element.class};
    }
    public TypedValue read(    EvaluationContext context,    Object target,    String name) throws AccessException {
      Element e=(Element)target;
      return new TypedValue(e.getAttribute(name));
    }
    public void write(    EvaluationContext context,    Object target,    String name,    Object newValue) throws AccessException {
      Element e=(Element)target;
      e.setAttribute(name,(String)newValue);
    }
  }
);
  return context;
}
