{
  PersonDto source=new PersonDto();
  final NestedDto nested=new NestedDto();
  nested.foo="bar";
  source.setNested(nested);
  Person target=new Person();
  SpelMapper nestedMapper=new SpelMapper();
  nestedMapper.setAutoMappingEnabled(false);
  nestedMapper.addMapping("foo").setConverter(new Converter<String,String>(){
    public String convert(    String source){
      return source + " and baz";
    }
  }
);
  mapper.addNestedMapper(NestedDto.class,Nested.class,nestedMapper,new MappingTargetFactory(){
    public boolean supports(    TypeDescriptor targetType){
      return true;
    }
    public Object createTarget(    Object source,    TypeDescriptor sourceType,    TypeDescriptor targetType){
      NestedDto nestedDto=(NestedDto)source;
      assertEquals(nested,nestedDto);
      return new Nested();
    }
  }
);
  mapper.setAutoMappingEnabled(false);
  mapper.addMapping("nested");
  mapper.map(source,target);
  assertEquals("bar and baz",target.nested.foo);
}
