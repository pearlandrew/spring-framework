{
  Object source=parserContext.extractSource(element);
  BeanDefinition hm=registerHandlerMapping(parserContext,source);
  MvcNamespaceUtils.registerDefaultComponents(parserContext,source);
  RootBeanDefinition controller=new RootBeanDefinition(ParameterizableViewController.class);
  controller.setSource(source);
  HttpStatus statusCode=null;
  if (element.hasAttribute("status-code")) {
    int statusValue=Integer.valueOf(element.getAttribute("status-code"));
    statusCode=HttpStatus.valueOf(statusValue);
  }
  String name=element.getLocalName();
  if (name.equals("view-controller")) {
    if (element.hasAttribute("view-name")) {
      controller.getPropertyValues().add("viewName",element.getAttribute("view-name"));
    }
    if (statusCode != null) {
      controller.getPropertyValues().add("statusCode",statusCode);
    }
  }
 else   if (name.equals("redirect-view-controller")) {
    controller.getPropertyValues().add("view",getRedirectView(element,statusCode,source));
  }
 else   if (name.equals("status-controller")) {
    controller.getPropertyValues().add("statusCode",statusCode);
    controller.getPropertyValues().add("statusOnly",true);
  }
 else {
    throw new IllegalStateException("Unexpected tag name: " + name);
  }
  Map<String,BeanDefinition> urlMap;
  if (hm.getPropertyValues().contains("urlMap")) {
    urlMap=(Map<String,BeanDefinition>)hm.getPropertyValues().getPropertyValue("urlMap").getValue();
  }
 else {
    urlMap=new ManagedMap<>();
    hm.getPropertyValues().add("urlMap",urlMap);
  }
  urlMap.put(element.getAttribute("path"),controller);
  return null;
}
