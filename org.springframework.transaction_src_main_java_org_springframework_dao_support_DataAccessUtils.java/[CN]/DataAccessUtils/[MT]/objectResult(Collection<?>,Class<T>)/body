{
  Object result=requiredUniqueResult(results);
  if (requiredType != null && !requiredType.isInstance(result)) {
    if (String.class.equals(requiredType)) {
      result=result.toString();
    }
 else     if (Number.class.isAssignableFrom(requiredType) && Number.class.isInstance(result)) {
      try {
        result=NumberUtils.convertNumberToTargetClass(((Number)result),requiredType);
      }
 catch (      IllegalArgumentException ex) {
        throw new TypeMismatchDataAccessException(ex.getMessage());
      }
    }
 else {
      throw new TypeMismatchDataAccessException("Result object is of type [" + result.getClass().getName() + "] and could not be converted to required type ["+ requiredType.getName()+ "]");
    }
  }
  return (T)result;
}
