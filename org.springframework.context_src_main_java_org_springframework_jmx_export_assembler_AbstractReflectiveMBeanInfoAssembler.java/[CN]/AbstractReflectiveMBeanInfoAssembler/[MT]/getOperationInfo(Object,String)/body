{
  Method[] methods=getClassToExpose(managedBean).getMethods();
  List infos=new ArrayList();
  for (int i=0; i < methods.length; i++) {
    Method method=methods[i];
    if (JdkVersion.isAtLeastJava15() && method.isSynthetic()) {
      continue;
    }
    if (method.getDeclaringClass().equals(Object.class)) {
      continue;
    }
    ModelMBeanOperationInfo info=null;
    PropertyDescriptor pd=BeanUtils.findPropertyForMethod(method);
    if (pd != null) {
      if ((method.equals(pd.getReadMethod()) && includeReadAttribute(method,beanKey)) || (method.equals(pd.getWriteMethod()) && includeWriteAttribute(method,beanKey))) {
        info=createModelMBeanOperationInfo(method,pd.getName(),beanKey);
        Descriptor desc=info.getDescriptor();
        if (method.equals(pd.getReadMethod())) {
          desc.setField(FIELD_ROLE,ROLE_GETTER);
        }
 else {
          desc.setField(FIELD_ROLE,ROLE_SETTER);
        }
        desc.setField(FIELD_VISIBILITY,ATTRIBUTE_OPERATION_VISIBILITY);
        if (isExposeClassDescriptor()) {
          desc.setField(FIELD_CLASS,getClassForDescriptor(managedBean).getName());
        }
        info.setDescriptor(desc);
      }
    }
 else     if (includeOperation(method,beanKey)) {
      info=createModelMBeanOperationInfo(method,method.getName(),beanKey);
      Descriptor desc=info.getDescriptor();
      desc.setField(FIELD_ROLE,ROLE_OPERATION);
      if (isExposeClassDescriptor()) {
        desc.setField(FIELD_CLASS,getClassForDescriptor(managedBean).getName());
      }
      populateOperationDescriptor(desc,method,beanKey);
      info.setDescriptor(desc);
    }
    if (info != null) {
      infos.add(info);
    }
  }
  return (ModelMBeanOperationInfo[])infos.toArray(new ModelMBeanOperationInfo[infos.size()]);
}
