{
  MockControl mockMessageConsumer=MockControl.createControl(MessageConsumer.class);
  MessageConsumer messageConsumer=(MessageConsumer)mockMessageConsumer.getMock();
  messageConsumer.setMessageListener(null);
  mockMessageConsumer.setMatcher(new AlwaysMatcher());
  mockMessageConsumer.setVoidCallable();
  mockMessageConsumer.replay();
  MockControl mockSession=MockControl.createControl(Session.class);
  Session session=(Session)mockSession.getMock();
  session.createQueue(DESTINATION_NAME);
  mockSession.setReturnValue(QUEUE_DESTINATION);
  session.createConsumer(QUEUE_DESTINATION,null);
  mockSession.setReturnValue(messageConsumer);
  mockSession.replay();
  MockControl mockConnection=MockControl.createControl(Connection.class);
  Connection connection=(Connection)mockConnection.getMock();
  connection.setExceptionListener(this.container);
  mockConnection.setVoidCallable();
  connection.createSession(this.container.isSessionTransacted(),this.container.getSessionAcknowledgeMode());
  mockConnection.setReturnValue(session);
  mockConnection.replay();
  MockControl mockConnectionFactory=MockControl.createControl(ConnectionFactory.class);
  ConnectionFactory connectionFactory=(ConnectionFactory)mockConnectionFactory.getMock();
  connectionFactory.createConnection();
  mockConnectionFactory.setReturnValue(connection);
  mockConnectionFactory.replay();
  this.container.setConnectionFactory(connectionFactory);
  this.container.setDestinationName(DESTINATION_NAME);
  this.container.setMessageListener(new TestMessageListener());
  this.container.setAutoStartup(false);
  this.container.afterPropertiesSet();
  mockMessageConsumer.verify();
  mockSession.verify();
  mockConnection.verify();
  mockConnectionFactory.verify();
}
