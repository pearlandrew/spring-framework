{
  DefaultHandshakeHandler handshakeHandler=new DefaultHandshakeHandler();
  WebMvcStompWebSocketEndpointRegistration registration=new WebMvcStompWebSocketEndpointRegistration(new String[]{"/foo"},this.wsHandler,this.scheduler);
  registration.setHandshakeHandler(handshakeHandler);
  registration.withSockJS();
  MultiValueMap<HttpRequestHandler,String> mappings=registration.getMappings();
  assertEquals(1,mappings.size());
  Map.Entry<HttpRequestHandler,List<String>> entry=mappings.entrySet().iterator().next();
  assertEquals(Arrays.asList("/foo/**"),entry.getValue());
  SockJsHttpRequestHandler requestHandler=(SockJsHttpRequestHandler)entry.getKey();
  assertNotNull(requestHandler.getWebSocketHandler());
  DefaultSockJsService sockJsService=(DefaultSockJsService)requestHandler.getSockJsService();
  assertNotNull(sockJsService);
  WebSocketTransportHandler transportHandler=(WebSocketTransportHandler)sockJsService.getTransportHandlers().get(TransportType.WEBSOCKET);
  assertSame(handshakeHandler,transportHandler.getHandshakeHandler());
}
