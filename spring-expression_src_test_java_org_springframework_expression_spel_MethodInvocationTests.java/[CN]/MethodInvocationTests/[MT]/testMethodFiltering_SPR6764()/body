{
  SpelExpressionParser parser=new SpelExpressionParser();
  StandardEvaluationContext context=new StandardEvaluationContext();
  context.setRootObject(new TestObject());
  LocalFilter filter=new LocalFilter();
  context.registerMethodFilter(TestObject.class,filter);
  SpelExpression expr=(SpelExpression)parser.parseExpression("doit(1)");
  String result=expr.getValue(context,String.class);
  assertEquals("1",result);
  assertTrue(filter.filterCalled);
  filter.removeIfNotAnnotated=true;
  filter.filterCalled=false;
  expr=(SpelExpression)parser.parseExpression("doit(1)");
  result=expr.getValue(context,String.class);
  assertEquals("double 1.0",result);
  assertTrue(filter.filterCalled);
  filter.filterCalled=false;
  context.setRootObject(new String("abc"));
  expr=(SpelExpression)parser.parseExpression("charAt(0)");
  result=expr.getValue(context,String.class);
  assertEquals("a",result);
  assertFalse(filter.filterCalled);
  filter.filterCalled=false;
  context.registerMethodFilter(TestObject.class,null);
  context.setRootObject(new TestObject());
  expr=(SpelExpression)parser.parseExpression("doit(1)");
  result=expr.getValue(context,String.class);
  assertEquals("1",result);
  assertFalse(filter.filterCalled);
}
