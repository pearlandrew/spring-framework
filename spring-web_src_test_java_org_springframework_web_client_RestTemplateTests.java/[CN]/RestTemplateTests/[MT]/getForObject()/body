{
  given(converter.canRead(String.class,null)).willReturn(true);
  MediaType textPlain=new MediaType("text","plain");
  given(converter.getSupportedMediaTypes()).willReturn(Collections.singletonList(textPlain));
  given(requestFactory.createRequest(new URI("http://example.com"),HttpMethod.GET)).willReturn(request);
  HttpHeaders requestHeaders=new HttpHeaders();
  given(request.getHeaders()).willReturn(requestHeaders);
  given(request.execute()).willReturn(response);
  given(errorHandler.hasError(response)).willReturn(false);
  HttpHeaders responseHeaders=new HttpHeaders();
  responseHeaders.setContentType(textPlain);
  responseHeaders.setContentLength(10);
  given(response.getStatusCode()).willReturn(HttpStatus.OK);
  given(response.getHeaders()).willReturn(responseHeaders);
  given(converter.canRead(String.class,textPlain)).willReturn(true);
  String expected="Hello World";
  given(converter.read(String.class,response)).willReturn(expected);
  HttpStatus status=HttpStatus.OK;
  given(response.getStatusCode()).willReturn(status);
  given(response.getStatusText()).willReturn(status.getReasonPhrase());
  String result=template.getForObject("http://example.com",String.class);
  assertEquals("Invalid GET result",expected,result);
  assertEquals("Invalid Accept header",textPlain.toString(),requestHeaders.getFirst("Accept"));
  verify(response).close();
}
