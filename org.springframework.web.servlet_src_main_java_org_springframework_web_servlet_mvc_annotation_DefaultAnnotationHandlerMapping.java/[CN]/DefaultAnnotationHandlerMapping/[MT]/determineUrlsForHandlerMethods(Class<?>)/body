{
  final Set<String> urls=new LinkedHashSet<String>();
  Class<?>[] handlerTypes=Proxy.isProxyClass(handlerType) ? handlerType.getInterfaces() : new Class<?>[]{handlerType};
  for (  Class<?> currentHandlerType : handlerTypes) {
    ReflectionUtils.doWithMethods(currentHandlerType,new ReflectionUtils.MethodCallback(){
      public void doWith(      Method method){
        RequestMapping mapping=AnnotationUtils.findAnnotation(method,RequestMapping.class);
        if (mapping != null) {
          String[] mappedPatterns=mapping.value();
          if (mappedPatterns.length > 0) {
            for (            String mappedPattern : mappedPatterns) {
              addUrlsForPath(urls,mappedPattern);
            }
          }
 else {
            urls.add(null);
          }
        }
      }
    }
,ReflectionUtils.NON_BRIDGED_METHODS);
  }
  return StringUtils.toStringArray(urls);
}
