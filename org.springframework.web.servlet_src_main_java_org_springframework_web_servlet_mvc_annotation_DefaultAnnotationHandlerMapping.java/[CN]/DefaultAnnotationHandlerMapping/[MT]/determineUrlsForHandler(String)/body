{
  ApplicationContext context=getApplicationContext();
  Class<?> handlerType=context.getType(beanName);
  RequestMapping mapping=context.findAnnotationOnBean(beanName,RequestMapping.class);
  if (mapping != null) {
    this.cachedMappings.put(handlerType,mapping);
    Set<String> urls=new LinkedHashSet<String>();
    String[] typeLevelPatterns=mapping.value();
    if (typeLevelPatterns.length > 0) {
      String[] methodLevelPatterns=determineUrlsForHandlerMethods(handlerType);
      for (      String typeLevelPattern : typeLevelPatterns) {
        if (!typeLevelPattern.startsWith("/")) {
          typeLevelPattern="/" + typeLevelPattern;
        }
        for (        String methodLevelPattern : methodLevelPatterns) {
          String combinedPattern=getPathMatcher().combine(typeLevelPattern,methodLevelPattern);
          addUrlsForPath(urls,combinedPattern);
        }
        addUrlsForPath(urls,typeLevelPattern);
      }
      return StringUtils.toStringArray(urls);
    }
 else {
      return determineUrlsForHandlerMethods(handlerType);
    }
  }
 else   if (AnnotationUtils.findAnnotation(handlerType,Controller.class) != null) {
    return determineUrlsForHandlerMethods(handlerType);
  }
 else {
    return null;
  }
}
