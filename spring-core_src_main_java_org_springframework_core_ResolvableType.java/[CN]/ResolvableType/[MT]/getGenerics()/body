{
  if (this == NONE) {
    return EMPTY_TYPES_ARRAY;
  }
  if (this.type instanceof Class<?>) {
    Class<?> typeClass=(Class<?>)this.type;
    return forTypes(SerializableTypeWrapper.forTypeParameters(typeClass),this.variableResolver);
  }
  if (this.type instanceof ParameterizedType) {
    Type[] actualTypeArguments=((ParameterizedType)this.type).getActualTypeArguments();
    ResolvableType[] generics=new ResolvableType[actualTypeArguments.length];
    for (int i=0; i < actualTypeArguments.length; i++) {
      generics[i]=forType(actualTypeArguments[i],this.variableResolver);
    }
    return generics;
  }
  return resolveType().getGenerics();
}
