{
  if (source == null) {
    return null;
  }
  if (source.indexOf('{') == -1) {
    return source;
  }
  Matcher matcher=NAMES_PATTERN.matcher(source);
  StringBuffer sb=new StringBuffer();
  while (matcher.find()) {
    if (!valueIterator.hasNext()) {
      throw new IllegalArgumentException("Not enough variable values available to expand [" + source + "]");
    }
    Object variableValue=valueIterator.next();
    String uriVariableValueString=getVariableValueAsString(variableValue);
    String replacement=Matcher.quoteReplacement(uriVariableValueString);
    matcher.appendReplacement(sb,replacement);
  }
  matcher.appendTail(sb);
  return sb.toString();
}
