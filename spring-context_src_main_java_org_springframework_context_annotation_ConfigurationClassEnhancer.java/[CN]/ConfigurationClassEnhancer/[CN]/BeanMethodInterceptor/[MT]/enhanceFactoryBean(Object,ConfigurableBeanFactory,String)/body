{
  Enhancer enhancer=new Enhancer();
  enhancer.setSuperclass(factoryBean.getClass());
  enhancer.setNamingPolicy(SpringNamingPolicy.INSTANCE);
  enhancer.setCallbackType(MethodInterceptor.class);
  Class<?> fbClass=enhancer.createClass();
  Object fbProxy=null;
  if (objenesis.isWorthTrying()) {
    try {
      fbProxy=objenesis.newInstance(fbClass,enhancer.getUseCache());
    }
 catch (    ObjenesisException ex) {
      logger.debug("Unable to instantiate enhanced FactoryBean using Objenesis, " + "falling back to regular construction",ex);
    }
  }
  if (fbProxy == null) {
    try {
      fbProxy=fbClass.newInstance();
    }
 catch (    Exception ex) {
      throw new IllegalStateException("Unable to instantiate enhanced FactoryBean using Objenesis, " + "and regular FactoryBean instantiation via default constructor fails as well",ex);
    }
  }
  ((Factory)fbProxy).setCallback(0,new MethodInterceptor(){
    @Override public Object intercept(    Object obj,    Method method,    Object[] args,    MethodProxy proxy) throws Throwable {
      if (method.getName().equals("getObject") && args.length == 0) {
        return beanFactory.getBean(beanName);
      }
      return proxy.invoke(factoryBean,args);
    }
  }
);
  return fbProxy;
}
