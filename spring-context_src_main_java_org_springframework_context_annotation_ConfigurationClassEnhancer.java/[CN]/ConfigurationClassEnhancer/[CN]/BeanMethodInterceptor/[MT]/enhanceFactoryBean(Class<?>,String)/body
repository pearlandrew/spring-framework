{
  Enhancer enhancer=new Enhancer();
  enhancer.setUseCache(false);
  enhancer.setSuperclass(fbClass);
  enhancer.setUseFactory(false);
  enhancer.setCallbackFilter(new CallbackFilter(){
    public int accept(    Method method){
      return method.getName().equals("getObject") ? 0 : 1;
    }
  }
);
  List<Callback> callbackInstances=new ArrayList<Callback>();
  callbackInstances.add(new GetObjectMethodInterceptor(this.beanFactory,beanName));
  callbackInstances.add(NoOp.INSTANCE);
  List<Class<? extends Callback>> callbackTypes=new ArrayList<Class<? extends Callback>>();
  for (  Callback callback : callbackInstances) {
    callbackTypes.add(callback.getClass());
  }
  enhancer.setCallbackTypes(callbackTypes.toArray(new Class[callbackTypes.size()]));
  Class<?> fbSubclass=enhancer.createClass();
  Enhancer.registerCallbacks(fbSubclass,callbackInstances.toArray(new Callback[callbackInstances.size()]));
  return fbSubclass.newInstance();
}
