{
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  ObjectOutputStream oos=new ObjectOutputStream(baos);
  oos.writeObject("content");
  oos.close();
  given(lobHandler.getBlobAsBinaryStream(rs,"column")).willReturn(new ByteArrayInputStream(baos.toByteArray()));
  BlobSerializableType type=new BlobSerializableType(lobHandler,null);
  assertEquals(1,type.sqlTypes().length);
  assertEquals(Types.BLOB,type.sqlTypes()[0]);
  assertEquals(Serializable.class,type.returnedClass());
  assertTrue(type.isMutable());
  assertEquals("content",type.nullSafeGet(rs,new String[]{"column"},null));
  TransactionSynchronizationManager.initSynchronization();
  try {
    type.nullSafeSet(ps,"content",1);
    List synchs=TransactionSynchronizationManager.getSynchronizations();
    assertEquals(1,synchs.size());
    ((TransactionSynchronization)synchs.get(0)).beforeCompletion();
    ((TransactionSynchronization)synchs.get(0)).afterCompletion(TransactionSynchronization.STATUS_COMMITTED);
  }
  finally {
    TransactionSynchronizationManager.clearSynchronization();
  }
  verify(lobCreator).setBlobAsBytes(ps,1,baos.toByteArray());
}
