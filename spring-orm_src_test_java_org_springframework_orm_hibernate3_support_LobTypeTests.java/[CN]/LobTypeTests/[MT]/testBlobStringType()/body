{
  String content="content";
  byte[] contentBytes=content.getBytes();
  given(lobHandler.getBlobAsBytes(rs,"column")).willReturn(contentBytes);
  BlobStringType type=new BlobStringType(lobHandler,null);
  assertEquals(1,type.sqlTypes().length);
  assertEquals(Types.BLOB,type.sqlTypes()[0]);
  assertEquals(String.class,type.returnedClass());
  assertTrue(type.equals("content","content"));
  assertEquals("content",type.deepCopy("content"));
  assertFalse(type.isMutable());
  assertEquals(content,type.nullSafeGet(rs,new String[]{"column"},null));
  TransactionSynchronizationManager.initSynchronization();
  try {
    type.nullSafeSet(ps,content,1);
    List synchs=TransactionSynchronizationManager.getSynchronizations();
    assertEquals(1,synchs.size());
    ((TransactionSynchronization)synchs.get(0)).beforeCompletion();
    ((TransactionSynchronization)synchs.get(0)).afterCompletion(TransactionSynchronization.STATUS_COMMITTED);
  }
  finally {
    TransactionSynchronizationManager.clearSynchronization();
  }
  verify(lobCreator).setBlobAsBytes(ps,1,contentBytes);
}
