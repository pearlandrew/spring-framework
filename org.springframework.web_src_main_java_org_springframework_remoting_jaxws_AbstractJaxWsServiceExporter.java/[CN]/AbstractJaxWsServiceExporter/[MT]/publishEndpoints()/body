{
  Set<String> beanNames=new LinkedHashSet<String>(this.beanFactory.getBeanDefinitionCount());
  beanNames.addAll(Arrays.asList(this.beanFactory.getBeanDefinitionNames()));
  if (this.beanFactory instanceof ConfigurableBeanFactory) {
    beanNames.addAll(Arrays.asList(((ConfigurableBeanFactory)this.beanFactory).getSingletonNames()));
  }
  for (  String beanName : beanNames) {
    try {
      Class<?> type=this.beanFactory.getType(beanName);
      if (type != null && !type.isInterface()) {
        WebService wsAnnotation=type.getAnnotation(WebService.class);
        WebServiceProvider wsProviderAnnotation=type.getAnnotation(WebServiceProvider.class);
        if (wsAnnotation != null || wsProviderAnnotation != null) {
          Endpoint endpoint=Endpoint.create(this.beanFactory.getBean(beanName));
          if (this.endpointProperties != null) {
            endpoint.setProperties(this.endpointProperties);
          }
          if (this.executor != null) {
            endpoint.setExecutor(this.executor);
          }
          if (wsAnnotation != null) {
            publishEndpoint(endpoint,wsAnnotation);
          }
 else {
            publishEndpoint(endpoint,wsProviderAnnotation);
          }
          this.publishedEndpoints.add(endpoint);
        }
      }
    }
 catch (    CannotLoadBeanClassException ex) {
    }
  }
}
