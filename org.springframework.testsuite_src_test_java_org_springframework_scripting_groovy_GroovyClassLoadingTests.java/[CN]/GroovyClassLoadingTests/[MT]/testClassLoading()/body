{
  StaticApplicationContext context=new StaticApplicationContext();
  GroovyClassLoader gcl=new GroovyClassLoader();
  Class class1=gcl.parseClass("class TestBean { def myMethod() { \"foo\" } }");
  Class class2=gcl.parseClass("class TestBean { def myMethod() { \"bar\" } }");
  context.registerBeanDefinition("testBean",new RootBeanDefinition(class1));
  Object testBean1=context.getBean("testBean");
  Method method1=class1.getDeclaredMethod("myMethod",new Class[0]);
  Object result1=ReflectionUtils.invokeMethod(method1,testBean1);
  assertEquals("foo",(String)result1);
  context.registerBeanDefinition("testBean",new RootBeanDefinition(class2));
  Object testBean2=context.getBean("testBean");
  Method method2=class2.getDeclaredMethod("myMethod",new Class[0]);
  Object result2=ReflectionUtils.invokeMethod(method2,testBean2);
  assertEquals("bar",(String)result2);
}
