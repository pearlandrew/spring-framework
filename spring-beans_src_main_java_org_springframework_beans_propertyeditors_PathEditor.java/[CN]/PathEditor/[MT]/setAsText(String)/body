{
  boolean nioPathCandidate=!text.startsWith(ResourceLoader.CLASSPATH_URL_PREFIX);
  if (nioPathCandidate && !text.startsWith("/")) {
    try {
      URI uri=new URI(text);
      if (uri.getScheme() != null) {
        nioPathCandidate=false;
        setValue(Paths.get(uri).normalize());
        return;
      }
    }
 catch (    URISyntaxException ex) {
    }
catch (    FileSystemNotFoundException ex) {
    }
  }
  this.resourceEditor.setAsText(text);
  Resource resource=(Resource)this.resourceEditor.getValue();
  if (resource == null) {
    setValue(null);
  }
 else   if (!resource.exists() && nioPathCandidate) {
    setValue(Paths.get(text).normalize());
  }
 else {
    try {
      setValue(resource.getFile().toPath());
    }
 catch (    IOException ex) {
      throw new IllegalArgumentException("Failed to retrieve file for " + resource,ex);
    }
  }
}
