{
  Assert.notNull(callable,"Callable must not be null");
  startAsyncProcessing(processingContext);
  this.taskExecutor.submit(new Runnable(){
    public void run(){
      CallableInterceptorChain chain=new CallableInterceptorChain(callableInterceptors.values());
      try {
        chain.applyPreProcess(asyncWebRequest,callable);
        concurrentResult=callable.call();
      }
 catch (      Throwable t) {
        concurrentResult=t;
      }
 finally {
        chain.applyPostProcess(asyncWebRequest,callable,concurrentResult);
      }
      if (logger.isDebugEnabled()) {
        logger.debug("Concurrent result value [" + concurrentResult + "]");
      }
      if (asyncWebRequest.isAsyncComplete()) {
        logger.error("Could not complete processing due to a timeout or network error");
        return;
      }
      logger.debug("Dispatching request to continue processing");
      asyncWebRequest.dispatch();
    }
  }
);
}
