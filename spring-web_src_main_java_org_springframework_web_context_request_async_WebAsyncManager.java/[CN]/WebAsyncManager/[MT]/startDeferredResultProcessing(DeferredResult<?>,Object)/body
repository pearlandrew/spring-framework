{
  Assert.notNull(deferredResult,"DeferredResult is required");
  startAsyncProcessing(processingContext);
  this.asyncWebRequest.addCompletionHandler(new Runnable(){
    public void run(){
      deferredResult.setExpired();
    }
  }
);
  if (deferredResult.hasTimeoutResult()) {
    this.asyncWebRequest.setTimeoutHandler(new Runnable(){
      public void run(){
        deferredResult.applyTimeoutResult();
      }
    }
);
  }
  deferredResult.setResultHandler(new DeferredResultHandler(){
    public void handleResult(    Object result){
      concurrentResult=result;
      if (logger.isDebugEnabled()) {
        logger.debug("Deferred result value [" + concurrentResult + "]");
      }
      Assert.state(!asyncWebRequest.isAsyncComplete(),"Cannot handle DeferredResult [ " + deferredResult + " ] due to a timeout or network error");
      logger.debug("Dispatching request to complete processing");
      asyncWebRequest.dispatch();
    }
  }
);
}
