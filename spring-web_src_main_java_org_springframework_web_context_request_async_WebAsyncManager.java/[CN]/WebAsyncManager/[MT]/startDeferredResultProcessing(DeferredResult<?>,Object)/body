{
  Assert.notNull(deferredResult,"DeferredResult is required");
  startAsyncProcessing(processingContext);
  deferredResult.init(new DeferredResultHandler(){
    public void handle(    Object result){
      concurrentResult=result;
      if (logger.isDebugEnabled()) {
        logger.debug("Deferred result value [" + concurrentResult + "]");
      }
      if (asyncWebRequest.isAsyncComplete()) {
        throw new StaleAsyncWebRequestException("Could not complete processing due to a timeout or network error");
      }
      logger.debug("Dispatching request to complete processing");
      asyncWebRequest.dispatch();
    }
  }
);
  this.asyncWebRequest.setTimeoutHandler(deferredResult.getTimeoutHandler());
}
