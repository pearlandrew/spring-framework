{
@Configuration class Abstract {
    @Bean Object foo1(){
      return null;
    }
  }
@Configuration class Concrete {
    @Bean Object foo2(){
      return null;
    }
  }
  DefaultListableBeanFactory factory=new DefaultListableBeanFactory();
  factory.registerBeanDefinition("abstract",rootBeanDefinition(Abstract.class).setAbstract(true).getBeanDefinition());
  factory.registerBeanDefinition("concrete",rootBeanDefinition(Concrete.class).setAbstract(false).getBeanDefinition());
  new ConfigurationClassPostProcessor().postProcessBeanFactory(factory);
  assertTrue("abstract configuration should be CGLIB-enhanced",AopUtils.isCglibProxyClassName(factory.getBeanDefinition("abstract").getBeanClassName()));
  assertTrue("concrete configuration should be CGLIB-enhanced",AopUtils.isCglibProxyClassName(factory.getBeanDefinition("concrete").getBeanClassName()));
  assertFalse("abstract configuration's @Bean method should not be registered",factory.containsBeanDefinition("foo1"));
  assertTrue("concrete configuration's @Bean method should be registered",factory.containsBeanDefinition("foo2"));
}
