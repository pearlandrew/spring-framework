{
  AlwaysTrueReleaseStrategy target=new AlwaysTrueReleaseStrategy();
  BeanFactoryTypeConverter converter=new BeanFactoryTypeConverter();
  StandardEvaluationContext context=new StandardEvaluationContext();
  context.setTypeConverter(converter);
  List<Foo> arguments=new ArrayList<Foo>();
  List<TypeDescriptor> paramDescriptors=new ArrayList<TypeDescriptor>();
  Method method=AlwaysTrueReleaseStrategy.class.getMethod("checkCompleteness",List.class);
  paramDescriptors.add(new TypeDescriptor(new MethodParameter(method,0)));
  List<TypeDescriptor> argumentTypes=new ArrayList<TypeDescriptor>();
  argumentTypes.add(TypeDescriptor.forObject(arguments));
  ReflectiveMethodResolver resolver=new ReflectiveMethodResolver();
  MethodExecutor executor=resolver.resolve(context,target,"checkCompleteness",argumentTypes);
  Object result=executor.execute(context,target,arguments);
  System.out.println("Result: " + result);
}
