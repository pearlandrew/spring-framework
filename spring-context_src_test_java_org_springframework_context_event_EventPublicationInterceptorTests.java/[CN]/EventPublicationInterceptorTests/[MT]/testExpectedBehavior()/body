{
  TestBean target=new TestBean();
  final TestListener listener=new TestListener();
class TestContext extends StaticApplicationContext {
    @Override protected void onRefresh() throws BeansException {
      addListener(listener);
    }
  }
  StaticApplicationContext ctx=new TestContext();
  MutablePropertyValues pvs=new MutablePropertyValues();
  pvs.add("applicationEventClass",TestEvent.class.getName());
  ctx.registerSingleton("publisher",EventPublicationInterceptor.class,pvs);
  ctx.registerSingleton("otherListener",FactoryBeanTestListener.class);
  ctx.refresh();
  EventPublicationInterceptor interceptor=(EventPublicationInterceptor)ctx.getBean("publisher");
  ProxyFactory factory=new ProxyFactory(target);
  factory.addAdvice(0,interceptor);
  ITestBean testBean=(ITestBean)factory.getProxy();
  testBean.getAge();
  assertTrue("Interceptor must have published 2 events",listener.getEventCount() == 2);
  TestListener otherListener=(TestListener)ctx.getBean("&otherListener");
  assertTrue("Interceptor must have published 2 events",otherListener.getEventCount() == 2);
}
