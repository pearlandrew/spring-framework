{
  if (target == null) {
    return false;
  }
  Class<?> type=(target instanceof Class ? (Class<?>)target : target.getClass());
  if (type.isArray() && name.equals("length")) {
    return true;
  }
  CacheKey cacheKey=new CacheKey(type,name);
  if (this.readerCache.containsKey(cacheKey)) {
    return true;
  }
  Method method=findGetterForProperty(name,type,target instanceof Class);
  if (method != null) {
    try {
      PropertyDescriptor propertyDescriptor=new PropertyDescriptor(name,method,null);
      TypeDescriptor typeDescriptor=new PropertyTypeDescriptor(new MethodParameter(method,-1),propertyDescriptor);
      this.readerCache.put(cacheKey,new InvokerPair(method,typeDescriptor));
      this.typeDescriptorCache.put(cacheKey,typeDescriptor);
      return true;
    }
 catch (    IntrospectionException ex) {
      throw new AccessException("Unable to access property '" + name + "' through getter "+ method,ex);
    }
  }
 else {
    Field field=findField(name,type,target instanceof Class);
    if (field != null) {
      TypeDescriptor typeDescriptor=new TypeDescriptor(field);
      this.readerCache.put(cacheKey,new InvokerPair(field,typeDescriptor));
      this.typeDescriptorCache.put(cacheKey,typeDescriptor);
      return true;
    }
  }
  return false;
}
