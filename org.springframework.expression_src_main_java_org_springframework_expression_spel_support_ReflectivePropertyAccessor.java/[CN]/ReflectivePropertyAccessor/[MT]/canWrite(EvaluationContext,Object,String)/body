{
  if (target == null) {
    return false;
  }
  Class<?> type=(target instanceof Class ? (Class<?>)target : target.getClass());
  if (this.writerCache == null) {
    this.writerCache=new ConcurrentHashMap<CacheKey,Member>();
    if (this.typeDescriptorCache == null) {
      this.typeDescriptorCache=new ConcurrentHashMap<CacheKey,TypeDescriptor>();
    }
  }
  CacheKey cacheKey=new CacheKey(type,name);
  if (this.writerCache.containsKey(cacheKey)) {
    return true;
  }
  Method method=findSetterForProperty(name,type,target instanceof Class);
  if (method != null) {
    this.writerCache.put(cacheKey,method);
    this.typeDescriptorCache.put(cacheKey,new TypeDescriptor(new MethodParameter(method,0)));
    return true;
  }
 else {
    Field field=findField(name,type,target instanceof Class);
    if (field != null) {
      this.writerCache.put(cacheKey,field);
      this.typeDescriptorCache.put(cacheKey,new TypeDescriptor(field));
      return true;
    }
  }
  return false;
}
