{
  if (target == null) {
    return false;
  }
  Class<?> type=(target instanceof Class ? (Class<?>)target : target.getClass());
  CacheKey cacheKey=new CacheKey(type,name);
  if (this.writerCache.containsKey(cacheKey)) {
    return true;
  }
  Method method=findSetterForProperty(name,type,target instanceof Class);
  if (method != null) {
    PropertyDescriptor propertyDescriptor=null;
    try {
      propertyDescriptor=new PropertyDescriptor(name,null,method);
    }
 catch (    IntrospectionException ex) {
      throw new AccessException("Unable to access property '" + name + "' through setter "+ method,ex);
    }
    TypeDescriptor typeDescriptor=new TypeDescriptor(type,propertyDescriptor);
    this.writerCache.put(cacheKey,method);
    this.typeDescriptorCache.put(cacheKey,typeDescriptor);
    return true;
  }
 else {
    Field field=findField(name,type,target instanceof Class);
    if (field != null) {
      this.writerCache.put(cacheKey,field);
      this.typeDescriptorCache.put(cacheKey,new TypeDescriptor(field));
      return true;
    }
  }
  return false;
}
