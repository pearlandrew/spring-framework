{
  Payload payload=new Payload();
  Expression expression=parser.parseExpression("DR[0].DRFixedSection.duration lt 0.1");
  boolean b=false;
  long iTotal=0, cTotal=0;
  for (int i=0; i < count; i++) {
    b=expression.getValue(payload,Boolean.TYPE);
  }
  log("timing interpreted: ");
  for (int i=0; i < iterations; i++) {
    long stime=System.currentTimeMillis();
    for (int j=0; j < count; j++) {
      b=expression.getValue(payload,Boolean.TYPE);
    }
    long etime=System.currentTimeMillis();
    long interpretedSpeed=(etime - stime);
    iTotal+=interpretedSpeed;
    log(interpretedSpeed + "ms ");
  }
  logln();
  compile(expression);
  boolean bc=false;
  expression.getValue(payload,Boolean.TYPE);
  log("timing compiled: ");
  for (int i=0; i < iterations; i++) {
    long stime=System.currentTimeMillis();
    for (int j=0; j < count; j++) {
      bc=expression.getValue(payload,Boolean.TYPE);
    }
    long etime=System.currentTimeMillis();
    long compiledSpeed=(etime - stime);
    cTotal+=compiledSpeed;
    log(compiledSpeed + "ms ");
  }
  logln();
  reportPerformance("complex expression",iTotal,cTotal);
  assertFalse(b);
  assertEquals(b,bc);
  payload.DR[0].DRFixedSection.duration=0.04d;
  bc=expression.getValue(payload,Boolean.TYPE);
  assertTrue(bc);
}
