{
  constructor_return retval=new constructor_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token string_literal114=null;
  qualifiedId_return qualifiedId115=null;
  ctorArgs_return ctorArgs116=null;
  arrayConstructor_return arrayConstructor117=null;
  Object string_literal114_tree=null;
  RewriteRuleTokenStream stream_91=new RewriteRuleTokenStream(adaptor,"token 91");
  RewriteRuleSubtreeStream stream_qualifiedId=new RewriteRuleSubtreeStream(adaptor,"rule qualifiedId");
  RewriteRuleSubtreeStream stream_ctorArgs=new RewriteRuleSubtreeStream(adaptor,"rule ctorArgs");
  try {
    int alt27=2;
    int LA27_0=input.LA(1);
    if ((LA27_0 == 91)) {
      int LA27_1=input.LA(2);
      if ((LA27_1 == ID)) {
        int LA27_2=input.LA(3);
        if ((synpred4())) {
          alt27=1;
        }
 else         if ((true)) {
          alt27=2;
        }
 else {
          if (backtracking > 0) {
            failed=true;
            return retval;
          }
          NoViableAltException nvae=new NoViableAltException("208:1: constructor : ( ( 'new' qualifiedId LPAREN )=> 'new' qualifiedId ctorArgs -> ^( CONSTRUCTOR qualifiedId ctorArgs ) | arrayConstructor );",27,2,input);
          throw nvae;
        }
      }
 else {
        if (backtracking > 0) {
          failed=true;
          return retval;
        }
        NoViableAltException nvae=new NoViableAltException("208:1: constructor : ( ( 'new' qualifiedId LPAREN )=> 'new' qualifiedId ctorArgs -> ^( CONSTRUCTOR qualifiedId ctorArgs ) | arrayConstructor );",27,1,input);
        throw nvae;
      }
    }
 else {
      if (backtracking > 0) {
        failed=true;
        return retval;
      }
      NoViableAltException nvae=new NoViableAltException("208:1: constructor : ( ( 'new' qualifiedId LPAREN )=> 'new' qualifiedId ctorArgs -> ^( CONSTRUCTOR qualifiedId ctorArgs ) | arrayConstructor );",27,0,input);
      throw nvae;
    }
switch (alt27) {
case 1:
{
        string_literal114=(Token)input.LT(1);
        match(input,91,FOLLOW_91_in_constructor1252);
        if (failed)         return retval;
        if (backtracking == 0)         stream_91.add(string_literal114);
        pushFollow(FOLLOW_qualifiedId_in_constructor1254);
        qualifiedId115=qualifiedId();
        _fsp--;
        if (failed)         return retval;
        if (backtracking == 0)         stream_qualifiedId.add(qualifiedId115.getTree());
        pushFollow(FOLLOW_ctorArgs_in_constructor1256);
        ctorArgs116=ctorArgs();
        _fsp--;
        if (failed)         return retval;
        if (backtracking == 0)         stream_ctorArgs.add(ctorArgs116.getTree());
        if (backtracking == 0) {
          retval.tree=root_0;
          RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"token retval",retval != null ? retval.tree : null);
          root_0=(Object)adaptor.nil();
{
{
              Object root_1=(Object)adaptor.nil();
              root_1=(Object)adaptor.becomeRoot(adaptor.create(CONSTRUCTOR,"CONSTRUCTOR"),root_1);
              adaptor.addChild(root_1,stream_qualifiedId.next());
              adaptor.addChild(root_1,stream_ctorArgs.next());
              adaptor.addChild(root_0,root_1);
            }
          }
        }
      }
    break;
case 2:
{
    root_0=(Object)adaptor.nil();
    pushFollow(FOLLOW_arrayConstructor_in_constructor1273);
    arrayConstructor117=arrayConstructor();
    _fsp--;
    if (failed)     return retval;
    if (backtracking == 0)     adaptor.addChild(root_0,arrayConstructor117.getTree());
  }
break;
}
retval.stop=input.LT(-1);
if (backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException e) {
reportError(e);
throw e;
}
 finally {
}
return retval;
}
