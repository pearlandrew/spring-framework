{
  type_return retval=new type_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token TYPE94=null;
  Token RPAREN96=null;
  qualifiedId_return qualifiedId95=null;
  Object TYPE94_tree=null;
  Object RPAREN96_tree=null;
  RewriteRuleTokenStream stream_RPAREN=new RewriteRuleTokenStream(adaptor,"token RPAREN");
  RewriteRuleTokenStream stream_TYPE=new RewriteRuleTokenStream(adaptor,"token TYPE");
  RewriteRuleSubtreeStream stream_qualifiedId=new RewriteRuleSubtreeStream(adaptor,"rule qualifiedId");
  try {
{
      TYPE94=(Token)input.LT(1);
      match(input,TYPE,FOLLOW_TYPE_in_type971);
      if (failed)       return retval;
      if (backtracking == 0)       stream_TYPE.add(TYPE94);
      pushFollow(FOLLOW_qualifiedId_in_type973);
      qualifiedId95=qualifiedId();
      _fsp--;
      if (failed)       return retval;
      if (backtracking == 0)       stream_qualifiedId.add(qualifiedId95.getTree());
      RPAREN96=(Token)input.LT(1);
      match(input,RPAREN,FOLLOW_RPAREN_in_type975);
      if (failed)       return retval;
      if (backtracking == 0)       stream_RPAREN.add(RPAREN96);
      if (backtracking == 0) {
        retval.tree=root_0;
        RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"token retval",retval != null ? retval.tree : null);
        root_0=(Object)adaptor.nil();
{
{
            Object root_1=(Object)adaptor.nil();
            root_1=(Object)adaptor.becomeRoot(adaptor.create(TYPEREF,"TYPEREF"),root_1);
            adaptor.addChild(root_1,stream_qualifiedId.next());
            adaptor.addChild(root_0,root_1);
          }
        }
      }
    }
    retval.stop=input.LT(-1);
    if (backtracking == 0) {
      retval.tree=(Object)adaptor.rulePostProcessing(root_0);
      adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
    }
  }
 catch (  RecognitionException e) {
    reportError(e);
    throw e;
  }
 finally {
  }
  return retval;
}
