{
  dottedNode_return retval=new dottedNode_return();
  retval.start=input.LT(1);
  Object root_0=null;
  methodOrProperty_return methodOrProperty70=null;
  functionOrVar_return functionOrVar71=null;
  projection_return projection72=null;
  selection_return selection73=null;
  firstSelection_return firstSelection74=null;
  lastSelection_return lastSelection75=null;
  exprList_return exprList76=null;
  try {
{
      root_0=(Object)adaptor.nil();
{
        int alt17=7;
switch (input.LA(1)) {
case ID:
{
            alt17=1;
          }
        break;
case POUND:
{
        alt17=2;
      }
    break;
case PROJECT:
{
    alt17=3;
  }
break;
case SELECT:
{
alt17=4;
}
break;
case SELECT_FIRST:
{
alt17=5;
}
break;
case SELECT_LAST:
{
alt17=6;
}
break;
case LPAREN:
{
alt17=7;
}
break;
default :
if (backtracking > 0) {
failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("140:3: ( methodOrProperty | functionOrVar | projection | selection | firstSelection | lastSelection | exprList )",17,0,input);
throw nvae;
}
switch (alt17) {
case 1:
{
pushFollow(FOLLOW_methodOrProperty_in_dottedNode750);
methodOrProperty70=methodOrProperty();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,methodOrProperty70.getTree());
}
break;
case 2:
{
pushFollow(FOLLOW_functionOrVar_in_dottedNode756);
functionOrVar71=functionOrVar();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,functionOrVar71.getTree());
}
break;
case 3:
{
pushFollow(FOLLOW_projection_in_dottedNode764);
projection72=projection();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,projection72.getTree());
}
break;
case 4:
{
pushFollow(FOLLOW_selection_in_dottedNode773);
selection73=selection();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,selection73.getTree());
}
break;
case 5:
{
pushFollow(FOLLOW_firstSelection_in_dottedNode782);
firstSelection74=firstSelection();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,firstSelection74.getTree());
}
break;
case 6:
{
pushFollow(FOLLOW_lastSelection_in_dottedNode791);
lastSelection75=lastSelection();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,lastSelection75.getTree());
}
break;
case 7:
{
pushFollow(FOLLOW_exprList_in_dottedNode800);
exprList76=exprList();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,exprList76.getTree());
}
break;
}
}
}
retval.stop=input.LT(-1);
if (backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException e) {
reportError(e);
throw e;
}
 finally {
}
return retval;
}
