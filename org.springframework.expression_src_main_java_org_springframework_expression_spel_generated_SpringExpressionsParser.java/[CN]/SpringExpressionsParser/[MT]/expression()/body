{
  expression_return retval=new expression_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token ASSIGN4=null;
  Token DEFAULT6=null;
  Token QMARK8=null;
  Token COLON10=null;
  logicalOrExpression_return logicalOrExpression3=null;
  logicalOrExpression_return logicalOrExpression5=null;
  logicalOrExpression_return logicalOrExpression7=null;
  expression_return expression9=null;
  expression_return expression11=null;
  Object ASSIGN4_tree=null;
  Object DEFAULT6_tree=null;
  Object QMARK8_tree=null;
  Object COLON10_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_logicalOrExpression_in_expression196);
      logicalOrExpression3=logicalOrExpression();
      _fsp--;
      if (failed)       return retval;
      if (backtracking == 0)       adaptor.addChild(root_0,logicalOrExpression3.getTree());
      int alt1=4;
switch (input.LA(1)) {
case ASSIGN:
{
          alt1=1;
        }
      break;
case DEFAULT:
{
      alt1=2;
    }
  break;
case QMARK:
{
  alt1=3;
}
break;
}
switch (alt1) {
case 1:
{
{
ASSIGN4=(Token)input.LT(1);
match(input,ASSIGN,FOLLOW_ASSIGN_in_expression205);
if (failed) return retval;
if (backtracking == 0) {
  ASSIGN4_tree=(Object)adaptor.create(ASSIGN4);
  root_0=(Object)adaptor.becomeRoot(ASSIGN4_tree,root_0);
}
pushFollow(FOLLOW_logicalOrExpression_in_expression208);
logicalOrExpression5=logicalOrExpression();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,logicalOrExpression5.getTree());
}
}
break;
case 2:
{
{
DEFAULT6=(Token)input.LT(1);
match(input,DEFAULT,FOLLOW_DEFAULT_in_expression218);
if (failed) return retval;
if (backtracking == 0) {
DEFAULT6_tree=(Object)adaptor.create(DEFAULT6);
root_0=(Object)adaptor.becomeRoot(DEFAULT6_tree,root_0);
}
pushFollow(FOLLOW_logicalOrExpression_in_expression221);
logicalOrExpression7=logicalOrExpression();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,logicalOrExpression7.getTree());
}
}
break;
case 3:
{
{
QMARK8=(Token)input.LT(1);
match(input,QMARK,FOLLOW_QMARK_in_expression231);
if (failed) return retval;
if (backtracking == 0) {
QMARK8_tree=(Object)adaptor.create(QMARK8);
root_0=(Object)adaptor.becomeRoot(QMARK8_tree,root_0);
}
pushFollow(FOLLOW_expression_in_expression234);
expression9=expression();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,expression9.getTree());
COLON10=(Token)input.LT(1);
match(input,COLON,FOLLOW_COLON_in_expression236);
if (failed) return retval;
pushFollow(FOLLOW_expression_in_expression239);
expression11=expression();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,expression11.getTree());
}
}
break;
}
}
retval.stop=input.LT(-1);
if (backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException e) {
reportError(e);
throw e;
}
 finally {
}
return retval;
}
