{
  localFunction_return retval=new localFunction_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token id=null;
  Token DOLLAR76=null;
  methodArgs_return methodArgs77=null;
  Object id_tree=null;
  Object DOLLAR76_tree=null;
  RewriteRuleTokenStream stream_DOLLAR=new RewriteRuleTokenStream(adaptor,"token DOLLAR");
  RewriteRuleTokenStream stream_ID=new RewriteRuleTokenStream(adaptor,"token ID");
  RewriteRuleSubtreeStream stream_methodArgs=new RewriteRuleSubtreeStream(adaptor,"rule methodArgs");
  try {
{
      DOLLAR76=(Token)input.LT(1);
      match(input,DOLLAR,FOLLOW_DOLLAR_in_localFunction852);
      if (failed)       return retval;
      if (backtracking == 0)       stream_DOLLAR.add(DOLLAR76);
      id=(Token)input.LT(1);
      match(input,ID,FOLLOW_ID_in_localFunction856);
      if (failed)       return retval;
      if (backtracking == 0)       stream_ID.add(id);
      pushFollow(FOLLOW_methodArgs_in_localFunction858);
      methodArgs77=methodArgs();
      _fsp--;
      if (failed)       return retval;
      if (backtracking == 0)       stream_methodArgs.add(methodArgs77.getTree());
      if (backtracking == 0) {
        retval.tree=root_0;
        RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"token retval",retval != null ? retval.tree : null);
        root_0=(Object)adaptor.nil();
{
{
            Object root_1=(Object)adaptor.nil();
            root_1=(Object)adaptor.becomeRoot(adaptor.create(LOCALFUNC,id),root_1);
            adaptor.addChild(root_1,stream_methodArgs.next());
            adaptor.addChild(root_0,root_1);
          }
        }
      }
    }
    retval.stop=input.LT(-1);
    if (backtracking == 0) {
      retval.tree=(Object)adaptor.rulePostProcessing(root_0);
      adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
    }
  }
 catch (  RecognitionException e) {
    reportError(e);
    throw e;
  }
 finally {
  }
  return retval;
}
