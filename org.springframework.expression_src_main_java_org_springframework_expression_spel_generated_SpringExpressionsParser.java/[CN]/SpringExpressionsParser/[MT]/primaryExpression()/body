{
  primaryExpression_return retval=new primaryExpression_return();
  retval.start=input.LT(1);
  Object root_0=null;
  startNode_return startNode41=null;
  node_return node42=null;
  RewriteRuleSubtreeStream stream_node=new RewriteRuleSubtreeStream(adaptor,"rule node");
  RewriteRuleSubtreeStream stream_startNode=new RewriteRuleSubtreeStream(adaptor,"rule startNode");
  try {
{
      pushFollow(FOLLOW_startNode_in_primaryExpression464);
      startNode41=startNode();
      _fsp--;
      if (failed)       return retval;
      if (backtracking == 0)       stream_startNode.add(startNode41.getTree());
      int alt12=2;
      int LA12_0=input.LA(1);
      if ((LA12_0 == DOT || LA12_0 == LBRACKET)) {
        alt12=1;
      }
switch (alt12) {
case 1:
{
          pushFollow(FOLLOW_node_in_primaryExpression467);
          node42=node();
          _fsp--;
          if (failed)           return retval;
          if (backtracking == 0)           stream_node.add(node42.getTree());
        }
      break;
  }
  if (backtracking == 0) {
    retval.tree=root_0;
    RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"token retval",retval != null ? retval.tree : null);
    root_0=(Object)adaptor.nil();
{
{
        Object root_1=(Object)adaptor.nil();
        root_1=(Object)adaptor.becomeRoot(adaptor.create(EXPRESSION,"EXPRESSION"),root_1);
        adaptor.addChild(root_1,stream_startNode.next());
        if (stream_node.hasNext()) {
          adaptor.addChild(root_1,stream_node.next());
        }
        stream_node.reset();
        adaptor.addChild(root_0,root_1);
      }
    }
  }
}
retval.stop=input.LT(-1);
if (backtracking == 0) {
  retval.tree=(Object)adaptor.rulePostProcessing(root_0);
  adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException e) {
reportError(e);
throw e;
}
 finally {
}
return retval;
}
