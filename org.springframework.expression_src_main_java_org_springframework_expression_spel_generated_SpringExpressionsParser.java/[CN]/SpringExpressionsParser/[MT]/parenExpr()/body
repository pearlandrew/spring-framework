{
  parenExpr_return retval=new parenExpr_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token LPAREN12=null;
  Token RPAREN14=null;
  expression_return expression13=null;
  Object LPAREN12_tree=null;
  Object RPAREN14_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      LPAREN12=(Token)input.LT(1);
      match(input,LPAREN,FOLLOW_LPAREN_in_parenExpr246);
      if (failed)       return retval;
      pushFollow(FOLLOW_expression_in_parenExpr249);
      expression13=expression();
      _fsp--;
      if (failed)       return retval;
      if (backtracking == 0)       adaptor.addChild(root_0,expression13.getTree());
      RPAREN14=(Token)input.LT(1);
      match(input,RPAREN,FOLLOW_RPAREN_in_parenExpr251);
      if (failed)       return retval;
    }
    retval.stop=input.LT(-1);
    if (backtracking == 0) {
      retval.tree=(Object)adaptor.rulePostProcessing(root_0);
      adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
    }
  }
 catch (  RecognitionException e) {
    reportError(e);
    throw e;
  }
 finally {
  }
  return retval;
}
