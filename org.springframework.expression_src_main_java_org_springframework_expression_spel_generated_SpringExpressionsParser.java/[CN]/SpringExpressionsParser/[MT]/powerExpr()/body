{
  powerExpr_return retval=new powerExpr_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token POWER40=null;
  unaryExpression_return unaryExpression39=null;
  unaryExpression_return unaryExpression41=null;
  Object POWER40_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_unaryExpression_in_powerExpr465);
      unaryExpression39=unaryExpression();
      _fsp--;
      if (failed)       return retval;
      if (backtracking == 0)       adaptor.addChild(root_0,unaryExpression39.getTree());
      int alt11=2;
      int LA11_0=input.LA(1);
      if ((LA11_0 == POWER)) {
        alt11=1;
      }
switch (alt11) {
case 1:
{
          POWER40=(Token)input.LT(1);
          match(input,POWER,FOLLOW_POWER_in_powerExpr468);
          if (failed)           return retval;
          if (backtracking == 0) {
            POWER40_tree=(Object)adaptor.create(POWER40);
            root_0=(Object)adaptor.becomeRoot(POWER40_tree,root_0);
          }
          pushFollow(FOLLOW_unaryExpression_in_powerExpr471);
          unaryExpression41=unaryExpression();
          _fsp--;
          if (failed)           return retval;
          if (backtracking == 0)           adaptor.addChild(root_0,unaryExpression41.getTree());
        }
      break;
  }
}
retval.stop=input.LT(-1);
if (backtracking == 0) {
  retval.tree=(Object)adaptor.rulePostProcessing(root_0);
  adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException e) {
reportError(e);
throw e;
}
 finally {
}
return retval;
}
