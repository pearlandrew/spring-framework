{
  firstSelection_return retval=new firstSelection_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token SELECT_FIRST107=null;
  Token RCURLY109=null;
  expression_return expression108=null;
  Object SELECT_FIRST107_tree=null;
  Object RCURLY109_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      SELECT_FIRST107=(Token)input.LT(1);
      match(input,SELECT_FIRST,FOLLOW_SELECT_FIRST_in_firstSelection1195);
      if (failed)       return retval;
      if (backtracking == 0) {
        SELECT_FIRST107_tree=(Object)adaptor.create(SELECT_FIRST107);
        root_0=(Object)adaptor.becomeRoot(SELECT_FIRST107_tree,root_0);
      }
      pushFollow(FOLLOW_expression_in_firstSelection1198);
      expression108=expression();
      _fsp--;
      if (failed)       return retval;
      if (backtracking == 0)       adaptor.addChild(root_0,expression108.getTree());
      RCURLY109=(Token)input.LT(1);
      match(input,RCURLY,FOLLOW_RCURLY_in_firstSelection1200);
      if (failed)       return retval;
    }
    retval.stop=input.LT(-1);
    if (backtracking == 0) {
      retval.tree=(Object)adaptor.rulePostProcessing(root_0);
      adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
    }
  }
 catch (  RecognitionException e) {
    reportError(e);
    throw e;
  }
 finally {
  }
  return retval;
}
