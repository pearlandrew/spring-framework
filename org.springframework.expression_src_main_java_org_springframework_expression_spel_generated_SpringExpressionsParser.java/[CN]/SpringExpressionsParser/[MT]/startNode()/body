{
  startNode_return retval=new startNode_return();
  retval.start=input.LT(1);
  Object root_0=null;
  parenExpr_return parenExpr43=null;
  methodOrProperty_return methodOrProperty44=null;
  functionOrVar_return functionOrVar45=null;
  indexer_return indexer46=null;
  literal_return literal47=null;
  type_return type48=null;
  constructor_return constructor49=null;
  projection_return projection50=null;
  selection_return selection51=null;
  firstSelection_return firstSelection52=null;
  lastSelection_return lastSelection53=null;
  listInitializer_return listInitializer54=null;
  mapInitializer_return mapInitializer55=null;
  try {
    int alt13=13;
switch (input.LA(1)) {
case LPAREN:
{
        alt13=1;
      }
    break;
case ID:
{
    alt13=2;
  }
break;
case POUND:
{
int LA13_3=input.LA(2);
if ((LA13_3 == ID)) {
  alt13=3;
}
 else if ((LA13_3 == LCURLY)) {
  alt13=13;
}
 else {
  if (backtracking > 0) {
    failed=true;
    return retval;
  }
  NoViableAltException nvae=new NoViableAltException("94:1: startNode : ( parenExpr | methodOrProperty | functionOrVar | indexer | literal | type | constructor | projection | selection | firstSelection | lastSelection | listInitializer | mapInitializer );",13,3,input);
  throw nvae;
}
}
break;
case LBRACKET:
{
alt13=4;
}
break;
case INTEGER_LITERAL:
case STRING_LITERAL:
case DQ_STRING_LITERAL:
case NULL_LITERAL:
case HEXADECIMAL_INTEGER_LITERAL:
case REAL_LITERAL:
case TRUE:
case FALSE:
{
alt13=5;
}
break;
case TYPE:
{
alt13=6;
}
break;
case 85:
{
alt13=7;
}
break;
case PROJECT:
{
alt13=8;
}
break;
case SELECT:
{
alt13=9;
}
break;
case SELECT_FIRST:
{
alt13=10;
}
break;
case SELECT_LAST:
{
alt13=11;
}
break;
case LCURLY:
{
alt13=12;
}
break;
default :
if (backtracking > 0) {
failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("94:1: startNode : ( parenExpr | methodOrProperty | functionOrVar | indexer | literal | type | constructor | projection | selection | firstSelection | lastSelection | listInitializer | mapInitializer );",13,0,input);
throw nvae;
}
switch (alt13) {
case 1:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_parenExpr_in_startNode484);
parenExpr43=parenExpr();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,parenExpr43.getTree());
}
break;
case 2:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_methodOrProperty_in_startNode492);
methodOrProperty44=methodOrProperty();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,methodOrProperty44.getTree());
}
break;
case 3:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_functionOrVar_in_startNode501);
functionOrVar45=functionOrVar();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,functionOrVar45.getTree());
}
break;
case 4:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_indexer_in_startNode509);
indexer46=indexer();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,indexer46.getTree());
}
break;
case 5:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_literal_in_startNode517);
literal47=literal();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,literal47.getTree());
}
break;
case 6:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_type_in_startNode525);
type48=type();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,type48.getTree());
}
break;
case 7:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_constructor_in_startNode533);
constructor49=constructor();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,constructor49.getTree());
}
break;
case 8:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_projection_in_startNode541);
projection50=projection();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,projection50.getTree());
}
break;
case 9:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_selection_in_startNode550);
selection51=selection();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,selection51.getTree());
}
break;
case 10:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_firstSelection_in_startNode559);
firstSelection52=firstSelection();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,firstSelection52.getTree());
}
break;
case 11:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_lastSelection_in_startNode567);
lastSelection53=lastSelection();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,lastSelection53.getTree());
}
break;
case 12:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_listInitializer_in_startNode575);
listInitializer54=listInitializer();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,listInitializer54.getTree());
}
break;
case 13:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_mapInitializer_in_startNode583);
mapInitializer55=mapInitializer();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,mapInitializer55.getTree());
}
break;
}
retval.stop=input.LT(-1);
if (backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException e) {
reportError(e);
throw e;
}
 finally {
}
return retval;
}
