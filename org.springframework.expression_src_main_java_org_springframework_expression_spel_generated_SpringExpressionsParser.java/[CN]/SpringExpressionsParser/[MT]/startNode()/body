{
  startNode_return retval=new startNode_return();
  retval.start=input.LT(1);
  Object root_0=null;
  exprList_return exprList49=null;
  parenExpr_return parenExpr50=null;
  methodOrProperty_return methodOrProperty51=null;
  functionOrVar_return functionOrVar52=null;
  localFunctionOrVar_return localFunctionOrVar53=null;
  reference_return reference54=null;
  indexer_return indexer55=null;
  literal_return literal56=null;
  type_return type57=null;
  constructor_return constructor58=null;
  projection_return projection59=null;
  selection_return selection60=null;
  firstSelection_return firstSelection61=null;
  lastSelection_return lastSelection62=null;
  listInitializer_return listInitializer63=null;
  mapInitializer_return mapInitializer64=null;
  lambda_return lambda65=null;
  try {
    int alt15=17;
switch (input.LA(1)) {
case LPAREN:
{
switch (input.LA(2)) {
case PLUS:
{
            int LA15_23=input.LA(3);
            if ((synpred1())) {
              alt15=1;
            }
 else             if ((true)) {
              alt15=2;
            }
 else {
              if (backtracking > 0) {
                failed=true;
                return retval;
              }
              NoViableAltException nvae=new NoViableAltException("110:1: startNode : ( ( LPAREN expression SEMI )=> exprList | parenExpr | methodOrProperty | functionOrVar | localFunctionOrVar | reference | indexer | literal | type | constructor | projection | selection | firstSelection | lastSelection | listInitializer | mapInitializer | lambda );",15,23,input);
              throw nvae;
            }
          }
        break;
case MINUS:
{
        int LA15_24=input.LA(3);
        if ((synpred1())) {
          alt15=1;
        }
 else         if ((true)) {
          alt15=2;
        }
 else {
          if (backtracking > 0) {
            failed=true;
            return retval;
          }
          NoViableAltException nvae=new NoViableAltException("110:1: startNode : ( ( LPAREN expression SEMI )=> exprList | parenExpr | methodOrProperty | functionOrVar | localFunctionOrVar | reference | indexer | literal | type | constructor | projection | selection | firstSelection | lastSelection | listInitializer | mapInitializer | lambda );",15,24,input);
          throw nvae;
        }
      }
    break;
case BANG:
{
    int LA15_25=input.LA(3);
    if ((synpred1())) {
      alt15=1;
    }
 else     if ((true)) {
      alt15=2;
    }
 else {
      if (backtracking > 0) {
        failed=true;
        return retval;
      }
      NoViableAltException nvae=new NoViableAltException("110:1: startNode : ( ( LPAREN expression SEMI )=> exprList | parenExpr | methodOrProperty | functionOrVar | localFunctionOrVar | reference | indexer | literal | type | constructor | projection | selection | firstSelection | lastSelection | listInitializer | mapInitializer | lambda );",15,25,input);
      throw nvae;
    }
  }
break;
case LPAREN:
{
int LA15_26=input.LA(3);
if ((synpred1())) {
  alt15=1;
}
 else if ((true)) {
  alt15=2;
}
 else {
  if (backtracking > 0) {
    failed=true;
    return retval;
  }
  NoViableAltException nvae=new NoViableAltException("110:1: startNode : ( ( LPAREN expression SEMI )=> exprList | parenExpr | methodOrProperty | functionOrVar | localFunctionOrVar | reference | indexer | literal | type | constructor | projection | selection | firstSelection | lastSelection | listInitializer | mapInitializer | lambda );",15,26,input);
  throw nvae;
}
}
break;
case ID:
{
int LA15_27=input.LA(3);
if ((synpred1())) {
alt15=1;
}
 else if ((true)) {
alt15=2;
}
 else {
if (backtracking > 0) {
failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("110:1: startNode : ( ( LPAREN expression SEMI )=> exprList | parenExpr | methodOrProperty | functionOrVar | localFunctionOrVar | reference | indexer | literal | type | constructor | projection | selection | firstSelection | lastSelection | listInitializer | mapInitializer | lambda );",15,27,input);
throw nvae;
}
}
break;
case POUND:
{
int LA15_28=input.LA(3);
if ((synpred1())) {
alt15=1;
}
 else if ((true)) {
alt15=2;
}
 else {
if (backtracking > 0) {
failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("110:1: startNode : ( ( LPAREN expression SEMI )=> exprList | parenExpr | methodOrProperty | functionOrVar | localFunctionOrVar | reference | indexer | literal | type | constructor | projection | selection | firstSelection | lastSelection | listInitializer | mapInitializer | lambda );",15,28,input);
throw nvae;
}
}
break;
case DOLLAR:
{
int LA15_29=input.LA(3);
if ((synpred1())) {
alt15=1;
}
 else if ((true)) {
alt15=2;
}
 else {
if (backtracking > 0) {
failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("110:1: startNode : ( ( LPAREN expression SEMI )=> exprList | parenExpr | methodOrProperty | functionOrVar | localFunctionOrVar | reference | indexer | literal | type | constructor | projection | selection | firstSelection | lastSelection | listInitializer | mapInitializer | lambda );",15,29,input);
throw nvae;
}
}
break;
case AT:
{
int LA15_30=input.LA(3);
if ((synpred1())) {
alt15=1;
}
 else if ((true)) {
alt15=2;
}
 else {
if (backtracking > 0) {
failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("110:1: startNode : ( ( LPAREN expression SEMI )=> exprList | parenExpr | methodOrProperty | functionOrVar | localFunctionOrVar | reference | indexer | literal | type | constructor | projection | selection | firstSelection | lastSelection | listInitializer | mapInitializer | lambda );",15,30,input);
throw nvae;
}
}
break;
case LBRACKET:
{
int LA15_31=input.LA(3);
if ((synpred1())) {
alt15=1;
}
 else if ((true)) {
alt15=2;
}
 else {
if (backtracking > 0) {
failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("110:1: startNode : ( ( LPAREN expression SEMI )=> exprList | parenExpr | methodOrProperty | functionOrVar | localFunctionOrVar | reference | indexer | literal | type | constructor | projection | selection | firstSelection | lastSelection | listInitializer | mapInitializer | lambda );",15,31,input);
throw nvae;
}
}
break;
case INTEGER_LITERAL:
{
int LA15_32=input.LA(3);
if ((synpred1())) {
alt15=1;
}
 else if ((true)) {
alt15=2;
}
 else {
if (backtracking > 0) {
failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("110:1: startNode : ( ( LPAREN expression SEMI )=> exprList | parenExpr | methodOrProperty | functionOrVar | localFunctionOrVar | reference | indexer | literal | type | constructor | projection | selection | firstSelection | lastSelection | listInitializer | mapInitializer | lambda );",15,32,input);
throw nvae;
}
}
break;
case STRING_LITERAL:
{
int LA15_33=input.LA(3);
if ((synpred1())) {
alt15=1;
}
 else if ((true)) {
alt15=2;
}
 else {
if (backtracking > 0) {
failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("110:1: startNode : ( ( LPAREN expression SEMI )=> exprList | parenExpr | methodOrProperty | functionOrVar | localFunctionOrVar | reference | indexer | literal | type | constructor | projection | selection | firstSelection | lastSelection | listInitializer | mapInitializer | lambda );",15,33,input);
throw nvae;
}
}
break;
case DQ_STRING_LITERAL:
{
int LA15_34=input.LA(3);
if ((synpred1())) {
alt15=1;
}
 else if ((true)) {
alt15=2;
}
 else {
if (backtracking > 0) {
failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("110:1: startNode : ( ( LPAREN expression SEMI )=> exprList | parenExpr | methodOrProperty | functionOrVar | localFunctionOrVar | reference | indexer | literal | type | constructor | projection | selection | firstSelection | lastSelection | listInitializer | mapInitializer | lambda );",15,34,input);
throw nvae;
}
}
break;
case TRUE:
case FALSE:
{
int LA15_35=input.LA(3);
if ((synpred1())) {
alt15=1;
}
 else if ((true)) {
alt15=2;
}
 else {
if (backtracking > 0) {
failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("110:1: startNode : ( ( LPAREN expression SEMI )=> exprList | parenExpr | methodOrProperty | functionOrVar | localFunctionOrVar | reference | indexer | literal | type | constructor | projection | selection | firstSelection | lastSelection | listInitializer | mapInitializer | lambda );",15,35,input);
throw nvae;
}
}
break;
case NULL_LITERAL:
{
int LA15_36=input.LA(3);
if ((synpred1())) {
alt15=1;
}
 else if ((true)) {
alt15=2;
}
 else {
if (backtracking > 0) {
failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("110:1: startNode : ( ( LPAREN expression SEMI )=> exprList | parenExpr | methodOrProperty | functionOrVar | localFunctionOrVar | reference | indexer | literal | type | constructor | projection | selection | firstSelection | lastSelection | listInitializer | mapInitializer | lambda );",15,36,input);
throw nvae;
}
}
break;
case HEXADECIMAL_INTEGER_LITERAL:
{
int LA15_37=input.LA(3);
if ((synpred1())) {
alt15=1;
}
 else if ((true)) {
alt15=2;
}
 else {
if (backtracking > 0) {
failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("110:1: startNode : ( ( LPAREN expression SEMI )=> exprList | parenExpr | methodOrProperty | functionOrVar | localFunctionOrVar | reference | indexer | literal | type | constructor | projection | selection | firstSelection | lastSelection | listInitializer | mapInitializer | lambda );",15,37,input);
throw nvae;
}
}
break;
case REAL_LITERAL:
{
int LA15_38=input.LA(3);
if ((synpred1())) {
alt15=1;
}
 else if ((true)) {
alt15=2;
}
 else {
if (backtracking > 0) {
failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("110:1: startNode : ( ( LPAREN expression SEMI )=> exprList | parenExpr | methodOrProperty | functionOrVar | localFunctionOrVar | reference | indexer | literal | type | constructor | projection | selection | firstSelection | lastSelection | listInitializer | mapInitializer | lambda );",15,38,input);
throw nvae;
}
}
break;
case 95:
{
int LA15_39=input.LA(3);
if ((synpred1())) {
alt15=1;
}
 else if ((true)) {
alt15=2;
}
 else {
if (backtracking > 0) {
failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("110:1: startNode : ( ( LPAREN expression SEMI )=> exprList | parenExpr | methodOrProperty | functionOrVar | localFunctionOrVar | reference | indexer | literal | type | constructor | projection | selection | firstSelection | lastSelection | listInitializer | mapInitializer | lambda );",15,39,input);
throw nvae;
}
}
break;
case TYPE:
{
int LA15_40=input.LA(3);
if ((synpred1())) {
alt15=1;
}
 else if ((true)) {
alt15=2;
}
 else {
if (backtracking > 0) {
failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("110:1: startNode : ( ( LPAREN expression SEMI )=> exprList | parenExpr | methodOrProperty | functionOrVar | localFunctionOrVar | reference | indexer | literal | type | constructor | projection | selection | firstSelection | lastSelection | listInitializer | mapInitializer | lambda );",15,40,input);
throw nvae;
}
}
break;
case 94:
{
int LA15_41=input.LA(3);
if ((synpred1())) {
alt15=1;
}
 else if ((true)) {
alt15=2;
}
 else {
if (backtracking > 0) {
failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("110:1: startNode : ( ( LPAREN expression SEMI )=> exprList | parenExpr | methodOrProperty | functionOrVar | localFunctionOrVar | reference | indexer | literal | type | constructor | projection | selection | firstSelection | lastSelection | listInitializer | mapInitializer | lambda );",15,41,input);
throw nvae;
}
}
break;
case PROJECT:
{
int LA15_42=input.LA(3);
if ((synpred1())) {
alt15=1;
}
 else if ((true)) {
alt15=2;
}
 else {
if (backtracking > 0) {
failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("110:1: startNode : ( ( LPAREN expression SEMI )=> exprList | parenExpr | methodOrProperty | functionOrVar | localFunctionOrVar | reference | indexer | literal | type | constructor | projection | selection | firstSelection | lastSelection | listInitializer | mapInitializer | lambda );",15,42,input);
throw nvae;
}
}
break;
case SELECT:
{
int LA15_43=input.LA(3);
if ((synpred1())) {
alt15=1;
}
 else if ((true)) {
alt15=2;
}
 else {
if (backtracking > 0) {
failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("110:1: startNode : ( ( LPAREN expression SEMI )=> exprList | parenExpr | methodOrProperty | functionOrVar | localFunctionOrVar | reference | indexer | literal | type | constructor | projection | selection | firstSelection | lastSelection | listInitializer | mapInitializer | lambda );",15,43,input);
throw nvae;
}
}
break;
case SELECT_FIRST:
{
int LA15_44=input.LA(3);
if ((synpred1())) {
alt15=1;
}
 else if ((true)) {
alt15=2;
}
 else {
if (backtracking > 0) {
failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("110:1: startNode : ( ( LPAREN expression SEMI )=> exprList | parenExpr | methodOrProperty | functionOrVar | localFunctionOrVar | reference | indexer | literal | type | constructor | projection | selection | firstSelection | lastSelection | listInitializer | mapInitializer | lambda );",15,44,input);
throw nvae;
}
}
break;
case SELECT_LAST:
{
int LA15_45=input.LA(3);
if ((synpred1())) {
alt15=1;
}
 else if ((true)) {
alt15=2;
}
 else {
if (backtracking > 0) {
failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("110:1: startNode : ( ( LPAREN expression SEMI )=> exprList | parenExpr | methodOrProperty | functionOrVar | localFunctionOrVar | reference | indexer | literal | type | constructor | projection | selection | firstSelection | lastSelection | listInitializer | mapInitializer | lambda );",15,45,input);
throw nvae;
}
}
break;
case LCURLY:
{
int LA15_46=input.LA(3);
if ((synpred1())) {
alt15=1;
}
 else if ((true)) {
alt15=2;
}
 else {
if (backtracking > 0) {
failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("110:1: startNode : ( ( LPAREN expression SEMI )=> exprList | parenExpr | methodOrProperty | functionOrVar | localFunctionOrVar | reference | indexer | literal | type | constructor | projection | selection | firstSelection | lastSelection | listInitializer | mapInitializer | lambda );",15,46,input);
throw nvae;
}
}
break;
case LAMBDA:
{
int LA15_47=input.LA(3);
if ((synpred1())) {
alt15=1;
}
 else if ((true)) {
alt15=2;
}
 else {
if (backtracking > 0) {
failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("110:1: startNode : ( ( LPAREN expression SEMI )=> exprList | parenExpr | methodOrProperty | functionOrVar | localFunctionOrVar | reference | indexer | literal | type | constructor | projection | selection | firstSelection | lastSelection | listInitializer | mapInitializer | lambda );",15,47,input);
throw nvae;
}
}
break;
default :
if (backtracking > 0) {
failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("110:1: startNode : ( ( LPAREN expression SEMI )=> exprList | parenExpr | methodOrProperty | functionOrVar | localFunctionOrVar | reference | indexer | literal | type | constructor | projection | selection | firstSelection | lastSelection | listInitializer | mapInitializer | lambda );",15,1,input);
throw nvae;
}
}
break;
case ID:
{
alt15=3;
}
break;
case POUND:
{
int LA15_3=input.LA(2);
if ((LA15_3 == ID)) {
alt15=4;
}
 else if ((LA15_3 == LCURLY)) {
alt15=16;
}
 else {
if (backtracking > 0) {
failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("110:1: startNode : ( ( LPAREN expression SEMI )=> exprList | parenExpr | methodOrProperty | functionOrVar | localFunctionOrVar | reference | indexer | literal | type | constructor | projection | selection | firstSelection | lastSelection | listInitializer | mapInitializer | lambda );",15,3,input);
throw nvae;
}
}
break;
case DOLLAR:
{
alt15=5;
}
break;
case AT:
{
alt15=6;
}
break;
case LBRACKET:
{
alt15=7;
}
break;
case INTEGER_LITERAL:
case STRING_LITERAL:
case DQ_STRING_LITERAL:
case NULL_LITERAL:
case HEXADECIMAL_INTEGER_LITERAL:
case REAL_LITERAL:
case TRUE:
case FALSE:
case 95:
{
alt15=8;
}
break;
case TYPE:
{
alt15=9;
}
break;
case 94:
{
alt15=10;
}
break;
case PROJECT:
{
alt15=11;
}
break;
case SELECT:
{
alt15=12;
}
break;
case SELECT_FIRST:
{
alt15=13;
}
break;
case SELECT_LAST:
{
alt15=14;
}
break;
case LCURLY:
{
alt15=15;
}
break;
case LAMBDA:
{
alt15=17;
}
break;
default :
if (backtracking > 0) {
failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("110:1: startNode : ( ( LPAREN expression SEMI )=> exprList | parenExpr | methodOrProperty | functionOrVar | localFunctionOrVar | reference | indexer | literal | type | constructor | projection | selection | firstSelection | lastSelection | listInitializer | mapInitializer | lambda );",15,0,input);
throw nvae;
}
switch (alt15) {
case 1:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_exprList_in_startNode565);
exprList49=exprList();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,exprList49.getTree());
}
break;
case 2:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_parenExpr_in_startNode574);
parenExpr50=parenExpr();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,parenExpr50.getTree());
}
break;
case 3:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_methodOrProperty_in_startNode582);
methodOrProperty51=methodOrProperty();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,methodOrProperty51.getTree());
}
break;
case 4:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_functionOrVar_in_startNode591);
functionOrVar52=functionOrVar();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,functionOrVar52.getTree());
}
break;
case 5:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_localFunctionOrVar_in_startNode599);
localFunctionOrVar53=localFunctionOrVar();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,localFunctionOrVar53.getTree());
}
break;
case 6:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_reference_in_startNode607);
reference54=reference();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,reference54.getTree());
}
break;
case 7:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_indexer_in_startNode615);
indexer55=indexer();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,indexer55.getTree());
}
break;
case 8:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_literal_in_startNode623);
literal56=literal();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,literal56.getTree());
}
break;
case 9:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_type_in_startNode631);
type57=type();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,type57.getTree());
}
break;
case 10:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_constructor_in_startNode639);
constructor58=constructor();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,constructor58.getTree());
}
break;
case 11:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_projection_in_startNode647);
projection59=projection();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,projection59.getTree());
}
break;
case 12:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_selection_in_startNode656);
selection60=selection();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,selection60.getTree());
}
break;
case 13:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_firstSelection_in_startNode665);
firstSelection61=firstSelection();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,firstSelection61.getTree());
}
break;
case 14:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_lastSelection_in_startNode673);
lastSelection62=lastSelection();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,lastSelection62.getTree());
}
break;
case 15:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_listInitializer_in_startNode681);
listInitializer63=listInitializer();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,listInitializer63.getTree());
}
break;
case 16:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_mapInitializer_in_startNode689);
mapInitializer64=mapInitializer();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,mapInitializer64.getTree());
}
break;
case 17:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_lambda_in_startNode697);
lambda65=lambda();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,lambda65.getTree());
}
break;
}
retval.stop=input.LT(-1);
if (backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException e) {
reportError(e);
throw e;
}
 finally {
}
return retval;
}
