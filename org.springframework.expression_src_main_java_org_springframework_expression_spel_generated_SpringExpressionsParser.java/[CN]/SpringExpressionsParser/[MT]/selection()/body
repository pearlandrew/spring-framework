{
  selection_return retval=new selection_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token SELECT83=null;
  Token RCURLY85=null;
  expression_return expression84=null;
  Object SELECT83_tree=null;
  Object RCURLY85_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      SELECT83=(Token)input.LT(1);
      match(input,SELECT,FOLLOW_SELECT_in_selection870);
      if (failed)       return retval;
      if (backtracking == 0) {
        SELECT83_tree=(Object)adaptor.create(SELECT83);
        root_0=(Object)adaptor.becomeRoot(SELECT83_tree,root_0);
      }
      pushFollow(FOLLOW_expression_in_selection873);
      expression84=expression();
      _fsp--;
      if (failed)       return retval;
      if (backtracking == 0)       adaptor.addChild(root_0,expression84.getTree());
      RCURLY85=(Token)input.LT(1);
      match(input,RCURLY,FOLLOW_RCURLY_in_selection875);
      if (failed)       return retval;
    }
    retval.stop=input.LT(-1);
    if (backtracking == 0) {
      retval.tree=(Object)adaptor.rulePostProcessing(root_0);
      adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
    }
  }
 catch (  RecognitionException e) {
    reportError(e);
    throw e;
  }
 finally {
  }
  return retval;
}
