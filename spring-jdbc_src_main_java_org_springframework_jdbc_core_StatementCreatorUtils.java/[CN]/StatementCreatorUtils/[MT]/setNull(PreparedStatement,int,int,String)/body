{
  if (sqlType == SqlTypeValue.TYPE_UNKNOWN) {
    boolean useSetObject=false;
    Integer sqlTypeToUse=null;
    DatabaseMetaData dbmd=null;
    String jdbcDriverName=null;
    boolean checkGetParameterType=true;
    if (!driversWithNoSupportForGetParameterType.isEmpty()) {
      try {
        dbmd=ps.getConnection().getMetaData();
        jdbcDriverName=dbmd.getDriverName();
        checkGetParameterType=!driversWithNoSupportForGetParameterType.contains(jdbcDriverName);
      }
 catch (      Throwable ex) {
        logger.debug("Could not check connection metadata",ex);
      }
    }
    if (checkGetParameterType) {
      try {
        sqlTypeToUse=ps.getParameterMetaData().getParameterType(paramIndex);
      }
 catch (      Throwable ex) {
        if (logger.isDebugEnabled()) {
          logger.debug("JDBC 3.0 getParameterType call not supported - using fallback method instead: " + ex);
        }
      }
    }
    if (sqlTypeToUse == null) {
      sqlTypeToUse=Types.NULL;
      try {
        if (dbmd == null) {
          dbmd=ps.getConnection().getMetaData();
        }
        if (jdbcDriverName == null) {
          jdbcDriverName=dbmd.getDriverName();
        }
        if (checkGetParameterType) {
          driversWithNoSupportForGetParameterType.add(jdbcDriverName);
        }
        String databaseProductName=dbmd.getDatabaseProductName();
        if (databaseProductName.startsWith("Informix") || jdbcDriverName.startsWith("Microsoft SQL Server")) {
          useSetObject=true;
        }
 else         if (databaseProductName.startsWith("DB2") || jdbcDriverName.startsWith("jConnect") || jdbcDriverName.startsWith("SQLServer")|| jdbcDriverName.startsWith("Apache Derby")) {
          sqlTypeToUse=Types.VARCHAR;
        }
      }
 catch (      Throwable ex) {
        logger.debug("Could not check connection metadata",ex);
      }
    }
    if (useSetObject) {
      ps.setObject(paramIndex,null);
    }
 else {
      ps.setNull(paramIndex,sqlTypeToUse);
    }
  }
 else   if (typeName != null) {
    ps.setNull(paramIndex,sqlType,typeName);
  }
 else {
    ps.setNull(paramIndex,sqlType);
  }
}
