{
  Mapper<Map,Account> mapper=MapperFactory.mapperBuilder(Map.class,Account.class).setAutoMappingEnabled(false).addAssemblerMapping("activationDateTime",new Converter<Map<String,String>,DateTime>(){
    public DateTime convert(    Map<String,String> source){
      MutableDateTime dateTime=new MutableDateTime(DateTimeZone.forID("-05:00"));
      dateTime.setYear(Integer.parseInt(source.get("year")));
      dateTime.setMonthOfYear(Integer.parseInt(source.get("month")));
      dateTime.setDayOfMonth(Integer.parseInt(source.get("day")));
      dateTime.setHourOfDay(Integer.parseInt(source.get("hour")));
      dateTime.setMinuteOfHour(Integer.parseInt(source.get("minute")));
      dateTime.setSecondOfMinute(0);
      dateTime.setMillisOfSecond(0);
      return dateTime.toDateTime();
    }
  }
).getMapper();
  Map<String,Object> source=new HashMap<String,Object>();
  source.put("activationDateTime.year","2009");
  source.put("activationDateTime.month","10");
  source.put("activationDateTime.day","12");
  source.put("activationDateTime.hour","12");
  source.put("activationDateTime.minute","0");
  Account account=mapper.map(source,new Account());
  assertEquals(ISODateTimeFormat.dateTime().withOffsetParsed().parseDateTime("2009-10-12T12:00:00.000-05:00"),account.getActivationDateTime());
}
