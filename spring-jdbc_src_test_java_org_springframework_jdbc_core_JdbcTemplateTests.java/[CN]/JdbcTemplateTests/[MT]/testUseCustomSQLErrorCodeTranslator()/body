{
  final SQLException sex=new SQLException("I have a known problem","07000",1054);
  final String sql="SELECT ID FROM CUSTOMER";
  MockControl ctrlResultSet=MockControl.createControl(ResultSet.class);
  ResultSet mockResultSet=(ResultSet)ctrlResultSet.getMock();
  mockResultSet.next();
  ctrlResultSet.setReturnValue(true);
  mockResultSet.close();
  ctrlResultSet.setVoidCallable();
  MockControl ctrlStatement=MockControl.createControl(PreparedStatement.class);
  PreparedStatement mockStatement=(PreparedStatement)ctrlStatement.getMock();
  mockStatement.executeQuery(sql);
  ctrlStatement.setReturnValue(mockResultSet);
  mockStatement.close();
  ctrlStatement.setVoidCallable();
  mockConnection.createStatement();
  ctrlConnection.setReturnValue(mockStatement);
  ctrlConnection=MockControl.createControl(Connection.class);
  mockConnection=(Connection)ctrlConnection.getMock();
  mockConnection.createStatement();
  ctrlConnection.setReturnValue(mockStatement,1);
  mockConnection.close();
  ctrlConnection.setVoidCallable(1);
  ctrlConnection.replay();
  ctrlDataSource=MockControl.createControl(DataSource.class);
  mockDataSource=(DataSource)ctrlDataSource.getMock();
  mockDataSource.getConnection();
  ctrlDataSource.setReturnValue(mockConnection,1);
  ctrlDataSource.replay();
  ctrlResultSet.replay();
  ctrlStatement.replay();
  JdbcTemplate template=new JdbcTemplate();
  template.setDataSource(mockDataSource);
  template.setExceptionTranslator(new SQLStateSQLExceptionTranslator());
  template.afterPropertiesSet();
  try {
    template.query(sql,new RowCallbackHandler(){
      public void processRow(      ResultSet rs) throws SQLException {
        throw sex;
      }
    }
);
    fail("Should have thrown exception");
  }
 catch (  BadSqlGrammarException ex) {
    assertTrue("Wanted same exception back, not " + ex,sex == ex.getCause());
  }
  ctrlResultSet.verify();
  ctrlStatement.verify();
  ctrlDataSource.verify();
  ctrlConnection.verify();
}
