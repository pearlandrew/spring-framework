{
  final String sql="SELECT ID FROM CUSTMR";
  final RuntimeException rex=new RuntimeException("What I want to see");
  MockControl ctrlResultSet=MockControl.createControl(ResultSet.class);
  ResultSet mockResultSet=(ResultSet)ctrlResultSet.getMock();
  mockResultSet.next();
  ctrlResultSet.setReturnValue(true);
  mockResultSet.close();
  ctrlResultSet.setVoidCallable();
  MockControl ctrlStatement=MockControl.createControl(PreparedStatement.class);
  PreparedStatement mockStatement=(PreparedStatement)ctrlStatement.getMock();
  mockStatement.executeQuery(sql);
  ctrlStatement.setReturnValue(mockResultSet);
  if (debugEnabled) {
    mockStatement.getWarnings();
    ctrlStatement.setReturnValue(null);
  }
  mockStatement.close();
  ctrlStatement.setVoidCallable();
  mockConnection.createStatement();
  ctrlConnection.setReturnValue(mockStatement);
  ctrlResultSet.replay();
  ctrlStatement.replay();
  replay();
  JdbcTemplate template=new JdbcTemplate(mockDataSource);
  try {
    template.query(sql,new RowCallbackHandler(){
      public void processRow(      ResultSet rs){
        throw rex;
      }
    }
);
    fail("Should have thrown exception");
  }
 catch (  RuntimeException ex) {
    assertTrue("Wanted same exception back, not " + ex,ex == rex);
  }
}
