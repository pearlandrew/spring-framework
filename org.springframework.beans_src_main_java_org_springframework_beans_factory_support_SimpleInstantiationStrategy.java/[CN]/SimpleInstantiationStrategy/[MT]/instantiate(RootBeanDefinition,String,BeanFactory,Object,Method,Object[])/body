{
  try {
    ReflectionUtils.makeAccessible(factoryMethod);
    return factoryMethod.invoke(factoryBean,args);
  }
 catch (  IllegalArgumentException ex) {
    throw new BeanDefinitionStoreException("Illegal arguments to factory method [" + factoryMethod + "]; "+ "args: "+ StringUtils.arrayToCommaDelimitedString(args));
  }
catch (  IllegalAccessException ex) {
    throw new BeanDefinitionStoreException("Cannot access factory method [" + factoryMethod + "]; is it public?");
  }
catch (  InvocationTargetException ex) {
    throw new BeanDefinitionStoreException("Factory method [" + factoryMethod + "] threw exception",ex.getTargetException());
  }
}
