{
  String sql="SELECT AGE FROM CUSTMR WHERE ID < :id";
  String sqlToUse="SELECT AGE FROM CUSTMR WHERE ID < ?";
  mockResultSetMetaData.getColumnCount();
  ctrlResultSetMetaData.setReturnValue(1);
  mockResultSetMetaData.getColumnLabel(1);
  ctrlResultSetMetaData.setReturnValue("age",1);
  mockResultSet.getMetaData();
  ctrlResultSet.setReturnValue(mockResultSetMetaData);
  mockResultSet.next();
  ctrlResultSet.setReturnValue(true);
  mockResultSet.getObject(1);
  ctrlResultSet.setReturnValue(new Integer(11));
  mockResultSet.next();
  ctrlResultSet.setReturnValue(false);
  mockResultSet.close();
  ctrlResultSet.setVoidCallable();
  mockPreparedStatement.setObject(1,new Integer(3));
  ctrlPreparedStatement.setVoidCallable();
  mockPreparedStatement.executeQuery();
  ctrlPreparedStatement.setReturnValue(mockResultSet);
  mockPreparedStatement.getWarnings();
  ctrlPreparedStatement.setReturnValue(null);
  mockPreparedStatement.close();
  ctrlPreparedStatement.setVoidCallable();
  mockConnection.prepareStatement(sqlToUse);
  ctrlConnection.setReturnValue(mockPreparedStatement);
  replay();
  NamedParameterJdbcTemplate template=new NamedParameterJdbcTemplate(mockDataSource);
  MapSqlParameterSource parms=new MapSqlParameterSource();
  parms.addValue("id",new Integer(3));
  Map map=template.queryForMap(sql,parms);
  assertEquals("Row is Integer",11,((Integer)map.get("age")).intValue());
}
