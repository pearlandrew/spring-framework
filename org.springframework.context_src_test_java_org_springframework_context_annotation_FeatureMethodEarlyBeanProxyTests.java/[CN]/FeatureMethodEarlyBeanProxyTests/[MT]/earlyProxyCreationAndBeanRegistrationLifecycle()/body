{
  AnnotationConfigApplicationContext ctx=new AnnotationConfigApplicationContext(FeatureConfig.class);
  assertThat(ctx.getBeanFactory().containsBeanDefinition("lazyHelperBean"),is(true));
  assertThat(ctx.getBeanFactory().containsBeanDefinition("eagerHelperBean"),is(true));
  assertThat(ctx.getBeanFactory().containsBeanDefinition("lazyPassthroughBean"),is(true));
  assertThat(ctx.getBeanFactory().containsBeanDefinition("eagerPassthroughBean"),is(true));
  assertThat(ctx.getBeanFactory().containsSingleton("lazyHelperBean"),is(true));
  assertThat(ctx.getBeanFactory().containsSingleton("eagerHelperBean"),is(true));
  assertThat(ctx.getBeanFactory().containsSingleton("lazyPassthroughBean"),is(false));
  assertThat(ctx.getBeanFactory().containsSingleton("eagerPassthroughBean"),is(true));
  assertThat(ctx.getBean("lazyHelperBean"),not(instanceOf(EarlyBeanReferenceProxy.class)));
  assertThat(ctx.getBean("eagerHelperBean"),not(instanceOf(EarlyBeanReferenceProxy.class)));
  assertThat(ctx.getBean("lazyPassthroughBean"),not(instanceOf(EarlyBeanReferenceProxy.class)));
  assertThat(ctx.getBean("eagerPassthroughBean"),not(instanceOf(EarlyBeanReferenceProxy.class)));
}
