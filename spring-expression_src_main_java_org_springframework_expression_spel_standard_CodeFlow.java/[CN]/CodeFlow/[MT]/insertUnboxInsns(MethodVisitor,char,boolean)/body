{
switch (ch) {
case 'I':
    if (isObject) {
      mv.visitTypeInsn(CHECKCAST,"java/lang/Integer");
    }
  mv.visitMethodInsn(INVOKEVIRTUAL,"java/lang/Integer","intValue","()I",false);
break;
case 'Z':
if (isObject) {
mv.visitTypeInsn(CHECKCAST,"java/lang/Boolean");
}
mv.visitMethodInsn(INVOKEVIRTUAL,"java/lang/Boolean","booleanValue","()Z",false);
break;
case 'B':
if (isObject) {
mv.visitTypeInsn(CHECKCAST,"java/lang/Byte");
}
mv.visitMethodInsn(INVOKEVIRTUAL,"java/lang/Byte","byteValue","()B",false);
break;
case 'C':
if (isObject) {
mv.visitTypeInsn(CHECKCAST,"java/lang/Character");
}
mv.visitMethodInsn(INVOKEVIRTUAL,"java/lang/Character","charValue","()C",false);
break;
case 'D':
if (isObject) {
mv.visitTypeInsn(CHECKCAST,"java/lang/Double");
}
mv.visitMethodInsn(INVOKEVIRTUAL,"java/lang/Double","doubleValue","()D",false);
break;
case 'S':
if (isObject) {
mv.visitTypeInsn(CHECKCAST,"java/lang/Short");
}
mv.visitMethodInsn(INVOKEVIRTUAL,"java/lang/Short","shortValue","()S",false);
break;
case 'F':
if (isObject) {
mv.visitTypeInsn(CHECKCAST,"java/lang/Float");
}
mv.visitMethodInsn(INVOKEVIRTUAL,"java/lang/Float","floatValue","()F",false);
break;
case 'J':
if (isObject) {
mv.visitTypeInsn(CHECKCAST,"java/lang/Long");
}
mv.visitMethodInsn(INVOKEVIRTUAL,"java/lang/Long","longValue","()J",false);
break;
default :
throw new IllegalArgumentException("Unboxing should not be attempted for descriptor '" + ch + "'");
}
}
