{
  if (StringUtils.hasText(this.poolSize)) {
    try {
      int corePoolSize;
      int maxPoolSize;
      int separatorIndex=this.poolSize.indexOf('-');
      if (separatorIndex != -1) {
        corePoolSize=Integer.valueOf(this.poolSize.substring(0,separatorIndex));
        maxPoolSize=Integer.valueOf(this.poolSize.substring(separatorIndex + 1,this.poolSize.length()));
        if (corePoolSize > maxPoolSize) {
          throw new IllegalArgumentException("Lower bound of pool-size range must not exceed the upper bound");
        }
        if (this.queueCapacity == null) {
          if (corePoolSize == 0) {
            bw.setPropertyValue("allowCoreThreadTimeOut",true);
            corePoolSize=maxPoolSize;
          }
 else {
            throw new IllegalArgumentException("A non-zero lower bound for the size range requires a queue-capacity value");
          }
        }
      }
 else {
        Integer value=Integer.valueOf(this.poolSize);
        corePoolSize=value;
        maxPoolSize=value;
      }
      bw.setPropertyValue("corePoolSize",corePoolSize);
      bw.setPropertyValue("maxPoolSize",maxPoolSize);
    }
 catch (    NumberFormatException ex) {
      throw new IllegalArgumentException("Invalid pool-size value [" + this.poolSize + "]: only single "+ "maximum integer (e.g. \"5\") and minimum-maximum range (e.g. \"3-5\") are supported",ex);
    }
  }
}
