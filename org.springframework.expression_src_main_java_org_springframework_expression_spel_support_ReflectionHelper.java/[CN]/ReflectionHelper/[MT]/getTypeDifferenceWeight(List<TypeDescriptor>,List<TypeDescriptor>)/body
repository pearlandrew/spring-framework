{
  int result=0;
  for (int i=0, max=paramTypes.size(); i < max; i++) {
    TypeDescriptor argType=argTypes.get(i);
    TypeDescriptor paramType=paramTypes.get(i);
    if (argType == null) {
      if (paramType.isPrimitive()) {
        return Integer.MAX_VALUE;
      }
    }
    if (!ClassUtils.isAssignable(paramType.getClass(),argType.getClass())) {
      return Integer.MAX_VALUE;
    }
    if (argType != null) {
      Class paramTypeClazz=paramType.getType();
      if (paramTypeClazz.isPrimitive()) {
        paramTypeClazz=Object.class;
      }
      Class superClass=argType.getClass().getSuperclass();
      while (superClass != null) {
        if (paramType.equals(superClass)) {
          result=result + 2;
          superClass=null;
        }
 else         if (ClassUtils.isAssignable(paramTypeClazz,superClass)) {
          result=result + 2;
          superClass=superClass.getSuperclass();
        }
 else {
          superClass=null;
        }
      }
      if (paramTypeClazz.isInterface()) {
        result=result + 1;
      }
    }
  }
  return result;
}
