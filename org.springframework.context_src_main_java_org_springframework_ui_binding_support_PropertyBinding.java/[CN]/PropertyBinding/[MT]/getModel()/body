{
  return new Model(){
    public Object getValue(){
      return ReflectionUtils.invokeMethod(propertyDescriptor.getReadMethod(),model);
    }
    public Class<?> getValueType(){
      return propertyDescriptor.getPropertyType();
    }
    public void setValue(    Object value){
      TypeDescriptor targetType=new TypeDescriptor(new MethodParameter(propertyDescriptor.getWriteMethod(),0));
      if (value != null && typeConverter.canConvert(value.getClass(),targetType)) {
        value=typeConverter.convert(value,targetType);
      }
      ReflectionUtils.invokeMethod(propertyDescriptor.getWriteMethod(),model,value);
    }
  }
;
}
