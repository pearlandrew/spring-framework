{
  return new Model(){
    public Object getValue(){
      return ReflectionUtils.invokeMethod(property.getReadMethod(),object);
    }
    public Class<?> getValueType(){
      return property.getPropertyType();
    }
    public void setValue(    Object value){
      TypeDescriptor targetType=new TypeDescriptor(new MethodParameter(property.getWriteMethod(),0));
      TypeConverter converter=bindingContext.getTypeConverter();
      if (value != null && converter.canConvert(value.getClass(),targetType)) {
        value=converter.convert(value,targetType);
      }
      ReflectionUtils.invokeMethod(property.getWriteMethod(),object,value);
    }
  }
;
}
