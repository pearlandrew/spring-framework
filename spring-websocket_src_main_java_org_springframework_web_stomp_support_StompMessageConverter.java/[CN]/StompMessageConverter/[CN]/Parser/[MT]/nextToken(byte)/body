{
  if (this.offset >= this.content.length()) {
    return null;
  }
  int delimAt=this.content.indexOf(delimiter,this.offset);
  if (delimAt == -1) {
    if (this.offset == this.content.length() - 1 && delimiter == COLON && this.content.charAt(this.offset) == LF) {
      this.offset++;
      return null;
    }
 else     if (this.offset == this.content.length() - 2 && delimiter == COLON && this.content.charAt(this.offset) == CR && this.content.charAt(this.offset + 1) == LF) {
      this.offset+=2;
      return null;
    }
 else {
      throw new StompException("No delimiter found at offset " + offset + " in "+ this.content);
    }
  }
  int escapeAt=this.content.indexOf('\\',this.offset);
  String token=this.content.substring(this.offset,delimAt + 1);
  this.offset+=token.length();
  if (escapeAt >= 0 && escapeAt < delimAt) {
    char escaped=this.content.charAt(escapeAt + 1);
    if (escaped == 'n' || escaped == 'c' || escaped == '\\') {
      token=token.replaceAll("\\\\n","\n").replaceAll("\\\\r","\r").replaceAll("\\\\c",":").replaceAll("\\\\\\\\","\\\\");
    }
 else {
      throw new StompException("Invalid escape sequence \\" + escaped);
    }
  }
  int length=token.length();
  if (delimiter == LF && length > 1 && token.charAt(length - 2) == CR) {
    return token.substring(0,length - 2);
  }
 else {
    return token.substring(0,length - 1);
  }
}
