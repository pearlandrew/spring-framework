{
  Assert.notNull(reactor,"reactor is required");
  this.reactor=reactor;
  this.reactor.on(Fn.$(StompCommand.CONNECT),new Consumer<Event<StompMessage>>(){
    @Override public void accept(    Event<StompMessage> event){
      processConnect(event.getData(),event.getReplyTo());
    }
  }
);
  this.reactor.on(Fn.$(StompCommand.SUBSCRIBE),new Consumer<Event<StompMessage>>(){
    @Override public void accept(    Event<StompMessage> event){
      processSubscribe(event.getData(),event.getReplyTo());
    }
  }
);
  this.reactor.on(Fn.$(StompCommand.SEND),new Consumer<Event<StompMessage>>(){
    @Override public void accept(    Event<StompMessage> event){
      processSend(event.getData());
    }
  }
);
  this.reactor.on(Fn.$(StompCommand.DISCONNECT),new Consumer<Event<StompMessage>>(){
    @Override public void accept(    Event<StompMessage> event){
      processDisconnect(event.getData());
    }
  }
);
  this.reactor.on(Fn.$(StompCommand.ACK),new Consumer<Event<StompMessage>>(){
    @Override public void accept(    Event<StompMessage> event){
      processAck(event.getData());
    }
  }
);
  this.reactor.on(Fn.$(StompCommand.NACK),new Consumer<Event<StompMessage>>(){
    @Override public void accept(    Event<StompMessage> event){
      processNack(event.getData());
    }
  }
);
  this.reactor.on(Fn.$(StompCommand.BEGIN),new Consumer<Event<StompMessage>>(){
    @Override public void accept(    Event<StompMessage> event){
      processBegin(event.getData());
    }
  }
);
  this.reactor.on(Fn.$(StompCommand.COMMIT),new Consumer<Event<StompMessage>>(){
    @Override public void accept(    Event<StompMessage> event){
      processCommit(event.getData());
    }
  }
);
  this.reactor.on(Fn.$(StompCommand.ABORT),new Consumer<Event<StompMessage>>(){
    @Override public void accept(    Event<StompMessage> event){
      processAbort(event.getData());
    }
  }
);
  this.reactor.on(Fn.$("CONNECTION_CLOSED"),new Consumer<Event<String>>(){
    @Override public void accept(    Event<String> event){
      processConnectionClosed(event.getData());
    }
  }
);
}
