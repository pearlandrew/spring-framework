{
  HttpHeaders httpHeaders=new HttpHeaders();
  List<MediaType> accept=Collections.singletonList(MediaType.APPLICATION_JSON);
  httpHeaders.setAccept(accept);
  List<Charset> acceptCharset=Collections.singletonList(StandardCharsets.UTF_8);
  httpHeaders.setAcceptCharset(acceptCharset);
  long contentLength=42L;
  httpHeaders.setContentLength(contentLength);
  MediaType contentType=MediaType.TEXT_PLAIN;
  httpHeaders.setContentType(contentType);
  InetSocketAddress host=InetSocketAddress.createUnresolved("localhost",80);
  httpHeaders.setHost(host);
  List<HttpRange> range=Collections.singletonList(HttpRange.createByteRange(0,42));
  httpHeaders.setRange(range);
  when(mockRequest.getHeaders()).thenReturn(httpHeaders);
  Request.Headers headers=defaultRequest.headers();
  assertEquals(accept,headers.accept());
  assertEquals(acceptCharset,headers.acceptCharset());
  assertEquals(OptionalLong.of(contentLength),headers.contentLength());
  assertEquals(Optional.of(contentType),headers.contentType());
  assertEquals(httpHeaders,headers.asHttpHeaders());
}
