{
  final Properties registeredClassCache=new Properties();
  final Properties registeredCollectionCache=new Properties();
  LocalSessionFactoryBean sfb=new LocalSessionFactoryBean(){
    @Override protected Configuration newConfiguration(){
      return new Configuration(){
        public void setCacheConcurrencyStrategy(        String clazz,        String concurrencyStrategy,        String regionName){
          registeredClassCache.setProperty(clazz,concurrencyStrategy + "," + regionName);
        }
        public void setCollectionCacheConcurrencyStrategy(        String collectionRole,        String concurrencyStrategy,        String regionName){
          registeredCollectionCache.setProperty(collectionRole,concurrencyStrategy + "," + regionName);
        }
      }
;
    }
    @Override protected SessionFactory newSessionFactory(){
      return null;
    }
  }
;
  sfb.setMappingResources(new String[0]);
  sfb.setDataSource(new DriverManagerDataSource());
  Properties classCache=new Properties();
  classCache.setProperty("org.springframework.beans.TestBean","read-write,myRegion");
  sfb.setEntityCacheStrategies(classCache);
  Properties collectionCache=new Properties();
  collectionCache.setProperty("org.springframework.beans.TestBean.friends","read-only,myRegion");
  sfb.setCollectionCacheStrategies(collectionCache);
  sfb.afterPropertiesSet();
  assertEquals(classCache,registeredClassCache);
  assertEquals(collectionCache,registeredCollectionCache);
}
