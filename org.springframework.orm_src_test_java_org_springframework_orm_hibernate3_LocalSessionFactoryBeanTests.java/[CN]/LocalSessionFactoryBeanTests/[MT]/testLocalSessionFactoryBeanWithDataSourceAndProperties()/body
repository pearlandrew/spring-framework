{
  final DriverManagerDataSource ds=new DriverManagerDataSource();
  final Set invocations=new HashSet();
  LocalSessionFactoryBean sfb=new LocalSessionFactoryBean(){
    protected Configuration newConfiguration(){
      return new Configuration(){
        public Configuration addInputStream(        InputStream is){
          try {
            is.close();
          }
 catch (          IOException ex) {
          }
          invocations.add("addResource");
          return this;
        }
      }
;
    }
    protected SessionFactory newSessionFactory(    Configuration config){
      assertEquals(LocalDataSourceConnectionProvider.class.getName(),config.getProperty(Environment.CONNECTION_PROVIDER));
      assertEquals(ds,LocalSessionFactoryBean.getConfigTimeDataSource());
      assertEquals("myValue",config.getProperty("myProperty"));
      invocations.add("newSessionFactory");
      return null;
    }
  }
;
  sfb.setMappingLocations(new Resource[]{new ClassPathResource("/org/springframework/beans/factory/xml/test.xml")});
  sfb.setDataSource(ds);
  Properties prop=new Properties();
  prop.setProperty(Environment.CONNECTION_PROVIDER,"myClass");
  prop.setProperty("myProperty","myValue");
  sfb.setHibernateProperties(prop);
  sfb.afterPropertiesSet();
  assertTrue(sfb.getConfiguration() != null);
  assertTrue(invocations.contains("addResource"));
  assertTrue(invocations.contains("newSessionFactory"));
}
