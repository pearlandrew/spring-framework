{
  Object contextObject=state.getActiveContextObject();
  EvaluationContext eContext=state.getEvaluationContext();
  if (cachedReaderExecutor != null) {
    try {
      return cachedReaderExecutor.execute(state.getEvaluationContext(),contextObject);
    }
 catch (    AccessException ae) {
    }
  }
  Class<?> contextObjectClass=getObjectClass(contextObject);
  List<PropertyAccessor> accessorsToTry=getPropertyAccessorsToTry(contextObjectClass,state);
  if (accessorsToTry != null) {
    try {
      for (      PropertyAccessor accessor : accessorsToTry) {
        if (accessor instanceof CacheablePropertyAccessor) {
          cachedReaderExecutor=((CacheablePropertyAccessor)accessor).getReaderAccessor(eContext,contextObject,name);
          if (cachedReaderExecutor != null) {
            try {
              return cachedReaderExecutor.execute(state.getEvaluationContext(),contextObject);
            }
 catch (            AccessException ae) {
              cachedReaderExecutor=null;
              throw ae;
            }
 finally {
              if (!useCaching) {
                cachedReaderExecutor=null;
              }
            }
          }
        }
 else {
          if (accessor.canRead(eContext,contextObject,name)) {
            Object value=accessor.read(eContext,contextObject,name);
            return value;
          }
        }
      }
    }
 catch (    AccessException ae) {
      throw new SpelException(ae,SpelMessages.EXCEPTION_DURING_PROPERTY_READ,name,ae.getMessage());
    }
  }
  throw new SpelException(SpelMessages.PROPERTY_OR_FIELD_NOT_FOUND,name,Utils.formatClassnameForMessage(contextObjectClass));
}
