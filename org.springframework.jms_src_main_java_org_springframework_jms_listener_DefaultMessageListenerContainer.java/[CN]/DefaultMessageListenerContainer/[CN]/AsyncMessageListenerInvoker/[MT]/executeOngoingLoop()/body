{
  boolean messageReceived=false;
  boolean active=true;
  while (active) {
synchronized (lifecycleMonitor) {
      boolean interrupted=false;
      boolean wasWaiting=false;
      while ((active=isActive()) && !isRunning()) {
        if (interrupted) {
          throw new IllegalStateException("Thread was interrupted while waiting for " + "a restart of the listener container, but container is still stopped");
        }
        if (!wasWaiting) {
          decreaseActiveInvokerCount();
        }
        wasWaiting=true;
        try {
          lifecycleMonitor.wait();
        }
 catch (        InterruptedException ex) {
          Thread.currentThread().interrupt();
          interrupted=true;
        }
      }
      if (wasWaiting) {
        activeInvokerCount++;
      }
    }
    if (active) {
      messageReceived=(invokeListener() || messageReceived);
    }
  }
  return messageReceived;
}
