{
  final CompletableFuture<T> future=new CompletableFuture<>();
  publisher.subscribe(new Subscriber<T>(){
    private T value;
    @Override public void onSubscribe(    Subscription s){
      s.request(Long.MAX_VALUE);
    }
    @Override public void onNext(    T t){
      Assert.state(value == null,"This publisher should not publish multiple values");
      value=t;
    }
    @Override public void onError(    Throwable t){
      future.completeExceptionally(t);
    }
    @Override public void onComplete(){
      future.complete(value);
    }
  }
);
  return future;
}
