{
  Object targetObject=contextObject.getValue();
  if (targetObject == null && this.nullSafe) {
    return TypedValue.NULL;
  }
  PropertyAccessor accessorToUse=this.cachedReadAccessor;
  if (accessorToUse != null) {
    try {
      return accessorToUse.read(evalContext,contextObject.getValue(),name);
    }
 catch (    AccessException ex) {
      this.cachedReadAccessor=null;
    }
  }
  List<PropertyAccessor> accessorsToTry=getPropertyAccessorsToTry(contextObject.getValue(),evalContext.getPropertyAccessors());
  if (accessorsToTry != null) {
    try {
      for (      PropertyAccessor accessor : accessorsToTry) {
        if (accessor.canRead(evalContext,contextObject.getValue(),name)) {
          if (accessor instanceof ReflectivePropertyAccessor) {
            accessor=((ReflectivePropertyAccessor)accessor).createOptimalAccessor(evalContext,contextObject.getValue(),name);
          }
          this.cachedReadAccessor=accessor;
          return accessor.read(evalContext,contextObject.getValue(),name);
        }
      }
    }
 catch (    AccessException ex) {
      throw new SpelEvaluationException(ex,SpelMessage.EXCEPTION_DURING_PROPERTY_READ,name,ex.getMessage());
    }
  }
  if (contextObject.getValue() == null) {
    throw new SpelEvaluationException(SpelMessage.PROPERTY_OR_FIELD_NOT_READABLE_ON_NULL,name);
  }
 else {
    throw new SpelEvaluationException(getStartPosition(),SpelMessage.PROPERTY_OR_FIELD_NOT_READABLE,name,FormatHelper.formatClassNameForMessage(getObjectClass(contextObject.getValue())));
  }
}
