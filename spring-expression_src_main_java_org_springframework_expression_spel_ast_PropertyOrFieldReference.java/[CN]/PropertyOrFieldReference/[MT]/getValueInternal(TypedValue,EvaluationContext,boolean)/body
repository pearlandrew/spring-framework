{
  TypedValue result=readProperty(contextObject,evalContext,this.name);
  if (result.getValue() == null && isAutoGrowNullReferences && nextChildIs(Indexer.class,PropertyOrFieldReference.class)) {
    TypeDescriptor resultDescriptor=result.getTypeDescriptor();
    if (List.class == resultDescriptor.getType()) {
      if (isWritableProperty(this.name,contextObject,evalContext)) {
        List<?> newList=new ArrayList<>();
        writeProperty(contextObject,evalContext,this.name,newList);
        result=readProperty(contextObject,evalContext,this.name);
      }
    }
 else     if (Map.class == resultDescriptor.getType()) {
      if (isWritableProperty(this.name,contextObject,evalContext)) {
        Map<?,?> newMap=new HashMap<>();
        writeProperty(contextObject,evalContext,this.name,newMap);
        result=readProperty(contextObject,evalContext,this.name);
      }
    }
 else {
      try {
        if (isWritableProperty(this.name,contextObject,evalContext)) {
          Class<?> clazz=result.getTypeDescriptor().getType();
          Object newObject=ReflectionUtils.accessibleConstructor(clazz).newInstance();
          writeProperty(contextObject,evalContext,this.name,newObject);
          result=readProperty(contextObject,evalContext,this.name);
        }
      }
 catch (      InvocationTargetException ex) {
        throw new SpelEvaluationException(getStartPosition(),ex.getTargetException(),SpelMessage.UNABLE_TO_DYNAMICALLY_CREATE_OBJECT,result.getTypeDescriptor().getType());
      }
catch (      Throwable ex) {
        throw new SpelEvaluationException(getStartPosition(),ex,SpelMessage.UNABLE_TO_DYNAMICALLY_CREATE_OBJECT,result.getTypeDescriptor().getType());
      }
    }
  }
  return result;
}
