{
  if (returnValue == null) {
    return;
  }
  SimpMessageHeaderAccessor inputHeaders=SimpMessageHeaderAccessor.wrap(inputMessage);
  String sessionId=inputHeaders.getSessionId();
  MessagePostProcessor postProcessor=new SessionHeaderPostProcessor(sessionId);
  ReplyTo replyTo=returnType.getMethodAnnotation(ReplyTo.class);
  if (replyTo != null) {
    for (    String destination : replyTo.value()) {
      this.messagingTemplate.convertAndSend(destination,returnValue,postProcessor);
    }
  }
  ReplyToUser replyToUser=returnType.getMethodAnnotation(ReplyToUser.class);
  if (replyToUser != null) {
    if (inputHeaders.getUser() == null) {
      throw new MissingSessionUserException(inputMessage);
    }
    String user=inputHeaders.getUser().getName();
    for (    String destination : replyToUser.value()) {
      this.messagingTemplate.convertAndSendToUser(user,destination,returnValue,postProcessor);
    }
  }
}
