{
  if (CorsUtils.isPreFlightRequest(request)) {
    return PRE_FLIGHT_MATCH;
  }
  if (isEmpty()) {
    return this;
  }
  Set<ProduceMediaTypeExpression> result=new LinkedHashSet<ProduceMediaTypeExpression>(expressions);
  for (Iterator<ProduceMediaTypeExpression> iterator=result.iterator(); iterator.hasNext(); ) {
    ProduceMediaTypeExpression expression=iterator.next();
    if (!expression.match(request)) {
      iterator.remove();
    }
  }
  if (!result.isEmpty()) {
    return new ProducesRequestCondition(result,this.contentNegotiationManager);
  }
  try {
    if (getAcceptedMediaTypes(request).contains(MediaType.ALL)) {
      return new ProducesRequestCondition();
    }
  }
 catch (  HttpMediaTypeException ex) {
  }
  return null;
}
