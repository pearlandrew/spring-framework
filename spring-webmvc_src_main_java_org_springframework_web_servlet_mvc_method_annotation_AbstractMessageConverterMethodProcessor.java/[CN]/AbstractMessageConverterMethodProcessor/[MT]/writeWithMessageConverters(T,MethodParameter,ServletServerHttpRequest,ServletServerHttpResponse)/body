{
  Class<?> returnValueClass=returnValue.getClass();
  HttpServletRequest servletRequest=inputMessage.getServletRequest();
  List<MediaType> requestedMediaTypes=getAcceptableMediaTypes(servletRequest);
  List<MediaType> producibleMediaTypes=getProducibleMediaTypes(servletRequest,returnValueClass);
  Set<MediaType> compatibleMediaTypes=new LinkedHashSet<MediaType>();
  for (  MediaType r : requestedMediaTypes) {
    for (    MediaType p : producibleMediaTypes) {
      if (r.isCompatibleWith(p)) {
        compatibleMediaTypes.add(getMostSpecificMediaType(r,p));
      }
    }
  }
  if (compatibleMediaTypes.isEmpty()) {
    throw new HttpMediaTypeNotAcceptableException(allSupportedMediaTypes);
  }
  List<MediaType> mediaTypes=new ArrayList<MediaType>(compatibleMediaTypes);
  MediaType.sortBySpecificityAndQuality(mediaTypes);
  MediaType selectedMediaType=null;
  for (  MediaType mediaType : mediaTypes) {
    if (mediaType.isConcrete()) {
      selectedMediaType=mediaType;
      break;
    }
 else     if (mediaType.equals(MediaType.ALL) || mediaType.equals(MEDIA_TYPE_APPLICATION)) {
      selectedMediaType=MediaType.APPLICATION_OCTET_STREAM;
      break;
    }
  }
  selectedMediaType=selectedMediaType.removeQualityValue();
  if (selectedMediaType != null) {
    for (    HttpMessageConverter<?> messageConverter : messageConverters) {
      if (messageConverter.canWrite(returnValueClass,selectedMediaType)) {
        ((HttpMessageConverter<T>)messageConverter).write(returnValue,selectedMediaType,outputMessage);
        if (logger.isDebugEnabled()) {
          logger.debug("Written [" + returnValue + "] as \""+ selectedMediaType+ "\" using ["+ messageConverter+ "]");
        }
        return;
      }
    }
  }
  throw new HttpMediaTypeNotAcceptableException(allSupportedMediaTypes);
}
