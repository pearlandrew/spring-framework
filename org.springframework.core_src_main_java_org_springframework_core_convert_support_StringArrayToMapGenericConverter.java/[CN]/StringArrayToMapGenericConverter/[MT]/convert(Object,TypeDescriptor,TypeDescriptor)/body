{
  TypeDescriptor targetKeyType=targetType.getMapKeyTypeDescriptor();
  TypeDescriptor targetValueType=targetType.getMapValueTypeDescriptor();
  if (targetKeyType == TypeDescriptor.NULL && targetValueType == TypeDescriptor.NULL) {
    return mapWithoutConversion(source,targetType);
  }
  TypeDescriptor sourceElementType=sourceType.getElementTypeDescriptor();
  boolean keysCompatible=false;
  if (sourceElementType.isAssignableTo(targetKeyType)) {
    keysCompatible=true;
  }
  boolean valuesCompatible=false;
  if (sourceElementType.isAssignableTo(targetValueType)) {
    valuesCompatible=true;
  }
  if (keysCompatible && valuesCompatible) {
    return mapWithoutConversion(source,targetType);
  }
  int length=Array.getLength(source);
  Map target=CollectionFactory.createMap(targetType.getType(),length);
  MapEntryConverter converter=new MapEntryConverter(sourceElementType,sourceElementType,targetKeyType,targetValueType,keysCompatible,valuesCompatible,conversionService);
  for (int i=0; i < length; i++) {
    String property=(String)Array.get(source,i);
    String[] fields=property.split("=");
    if (fields.length < 2) {
      throw new IllegalArgumentException("Invalid String property '" + property + "'; properties should be in the format name=value");
    }
    Object targetKey=converter.convertKey(fields[0]);
    Object targetValue=converter.convertValue(fields[1]);
    target.put(targetKey,targetValue);
  }
  return target;
}
