{
  Assert.hasLength(type,"type must not be empty");
  Assert.hasLength(subtype,"subtype must not be empty");
  checkToken(type);
  checkToken(subtype);
  this.type=type.toLowerCase(Locale.ENGLISH);
  this.subtype=subtype.toLowerCase(Locale.ENGLISH);
  if (!CollectionUtils.isEmpty(parameters)) {
    Map<String,String> map=new LinkedCaseInsensitiveMap<String>(parameters.size(),Locale.ENGLISH);
    for (    Map.Entry<String,String> entry : parameters.entrySet()) {
      String attribute=entry.getKey();
      String value=entry.getValue();
      checkParameters(attribute,value);
      map.put(attribute,value);
    }
    this.parameters=Collections.unmodifiableMap(map);
  }
 else {
    this.parameters=Collections.emptyMap();
  }
}
