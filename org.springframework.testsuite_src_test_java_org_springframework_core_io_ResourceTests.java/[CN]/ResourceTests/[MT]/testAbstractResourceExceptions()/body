{
  final String name="test-resource";
  Resource resource=new AbstractResource(){
    public String getDescription(){
      return name;
    }
    public InputStream getInputStream(){
      return null;
    }
  }
;
  try {
    resource.getURL();
    fail("FileNotFoundException should have been thrown");
  }
 catch (  FileNotFoundException ex) {
    assertTrue(ex.getMessage().indexOf(name) != -1);
  }
  try {
    resource.getFile();
    fail("FileNotFoundException should have been thrown");
  }
 catch (  FileNotFoundException ex) {
    assertTrue(ex.getMessage().indexOf(name) != -1);
  }
  try {
    resource.createRelative("/testing");
    fail("FileNotFoundException should have been thrown");
  }
 catch (  FileNotFoundException ex) {
    assertTrue(ex.getMessage().indexOf(name) != -1);
  }
  try {
    resource.getFilename();
    fail("IllegalStateException should have been thrown");
  }
 catch (  IllegalStateException ex) {
    assertTrue(ex.getMessage().indexOf(name) != -1);
  }
}
