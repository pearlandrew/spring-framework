{
  HttpServletRequest servletRequest=request.getNativeRequest(HttpServletRequest.class);
  assertIsMultipartRequest(servletRequest);
  MultipartHttpServletRequest multipartRequest=WebUtils.getNativeRequest(servletRequest,MultipartHttpServletRequest.class);
  String partName=getPartName(parameter);
  Object arg;
  if (MultipartFile.class.equals(parameter.getParameterType())) {
    Assert.notNull(multipartRequest,"Expected MultipartHttpServletRequest: is a MultipartResolver configured?");
    arg=multipartRequest.getFile(partName);
  }
 else   if (isMultipartFileCollection(parameter)) {
    Assert.notNull(multipartRequest,"Expected MultipartHttpServletRequest: is a MultipartResolver configured?");
    arg=multipartRequest.getFiles(partName);
  }
 else   if ("javax.servlet.http.Part".equals(parameter.getParameterType().getName())) {
    arg=servletRequest.getPart(partName);
  }
 else {
    try {
      HttpInputMessage inputMessage=new RequestPartServletServerHttpRequest(servletRequest,partName);
      arg=readWithMessageConverters(inputMessage,parameter,parameter.getParameterType());
      if (arg != null) {
        Annotation[] annotations=parameter.getParameterAnnotations();
        for (        Annotation annot : annotations) {
          if (annot.annotationType().getSimpleName().startsWith("Valid")) {
            WebDataBinder binder=binderFactory.createBinder(request,arg,partName);
            Object hints=AnnotationUtils.getValue(annot);
            binder.validate(hints instanceof Object[] ? (Object[])hints : new Object[]{hints});
            BindingResult bindingResult=binder.getBindingResult();
            if (bindingResult.hasErrors()) {
              throw new MethodArgumentNotValidException(parameter,bindingResult);
            }
          }
        }
      }
    }
 catch (    MissingServletRequestPartException ex) {
      arg=null;
    }
  }
  RequestPart annot=parameter.getParameterAnnotation(RequestPart.class);
  boolean isRequired=(annot == null || annot.required());
  if (arg == null && isRequired) {
    throw new MissingServletRequestPartException(partName);
  }
  return arg;
}
