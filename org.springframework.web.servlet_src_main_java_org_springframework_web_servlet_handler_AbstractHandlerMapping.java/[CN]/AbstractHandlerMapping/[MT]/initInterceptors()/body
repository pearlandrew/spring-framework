{
  if (this.detectInterceptors) {
    Map<String,HandlerInterceptor> handlerInterceptors=BeanFactoryUtils.beansOfTypeIncludingAncestors(getApplicationContext(),HandlerInterceptor.class,true,false);
    if (!handlerInterceptors.isEmpty()) {
      this.interceptors.addAll(handlerInterceptors.values());
    }
    Map<String,WebRequestInterceptor> webInterceptors=BeanFactoryUtils.beansOfTypeIncludingAncestors(getApplicationContext(),WebRequestInterceptor.class,true,false);
    if (!webInterceptors.isEmpty()) {
      for (      WebRequestInterceptor interceptor : webInterceptors.values()) {
        this.interceptors.add(new WebRequestHandlerInterceptorAdapter(interceptor));
      }
    }
  }
  if (!this.interceptors.isEmpty()) {
    OrderComparator.sort(this.interceptors);
    this.adaptedInterceptors=new HandlerInterceptor[this.interceptors.size()];
    for (int i=0; i < this.interceptors.size(); i++) {
      Object interceptor=this.interceptors.get(i);
      if (interceptor == null) {
        throw new IllegalArgumentException("Entry number " + i + " in interceptors array is null");
      }
      this.adaptedInterceptors[i]=adaptInterceptor(interceptor);
    }
  }
}
