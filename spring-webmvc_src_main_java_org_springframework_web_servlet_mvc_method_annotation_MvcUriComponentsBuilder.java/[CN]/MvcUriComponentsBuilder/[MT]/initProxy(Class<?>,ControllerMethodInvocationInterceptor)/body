{
  if (type.isInterface()) {
    ProxyFactory factory=new ProxyFactory(EmptyTargetSource.INSTANCE);
    factory.addInterface(type);
    factory.addInterface(MethodInvocationInfo.class);
    factory.addAdvice(interceptor);
    return (T)factory.getProxy();
  }
 else {
    Enhancer enhancer=new Enhancer();
    enhancer.setSuperclass(type);
    enhancer.setInterfaces(new Class<?>[]{MethodInvocationInfo.class});
    enhancer.setNamingPolicy(SpringNamingPolicy.INSTANCE);
    enhancer.setCallbackType(org.springframework.cglib.proxy.MethodInterceptor.class);
    Factory factory=(Factory)objenesis.newInstance(enhancer.createClass());
    factory.setCallbacks(new Callback[]{interceptor});
    return (T)factory;
  }
}
