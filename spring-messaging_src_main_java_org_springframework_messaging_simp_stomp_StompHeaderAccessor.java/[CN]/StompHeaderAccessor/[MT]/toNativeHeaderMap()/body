{
  Map<String,List<String>> result=super.toNativeHeaderMap();
  String destination=super.getDestination();
  if (destination != null) {
    result.put(STOMP_DESTINATION_HEADER,Arrays.asList(destination));
  }
  MimeType contentType=super.getContentType();
  if (contentType != null) {
    result.put(STOMP_CONTENT_TYPE_HEADER,Arrays.asList(contentType.toString()));
  }
  if (getCommand() != null && getCommand().requiresSubscriptionId()) {
    String subscriptionId=getSubscriptionId();
    if (subscriptionId != null) {
      String name=StompCommand.MESSAGE.equals(getCommand()) ? STOMP_SUBSCRIPTION_HEADER : STOMP_ID_HEADER;
      result.put(name,Arrays.asList(subscriptionId));
    }
 else {
      logger.warn(getCommand() + " frame should have a subscription: " + this.toString());
    }
  }
  if (StompCommand.MESSAGE.equals(getCommand()) && ((getMessageId() == null))) {
    String messageId=getSessionId() + "-" + messageIdCounter.getAndIncrement();
    result.put(STOMP_MESSAGE_ID_HEADER,Arrays.asList(messageId));
  }
  return result;
}
