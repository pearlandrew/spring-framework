{
  try {
    Class<?> clazzLoaderType=classLoader.loadClass(LOADER_NAME);
    ClassLoader clazzLoader=null;
    for (ClassLoader cl=classLoader; cl != null && clazzLoader == null; cl=cl.getParent()) {
      if (clazzLoaderType.isInstance(cl)) {
        clazzLoader=cl;
      }
    }
    if (clazzLoader == null) {
      throw new IllegalArgumentException(classLoader + " and its parents are not suitable ClassLoaders: " + "A ["+ LOADER_NAME+ "] implementation is required.");
    }
    this.classLoader=clazzLoader;
    classLoader=clazzLoader.getClass().getClassLoader();
    Method method=clazzLoaderType.getDeclaredMethod("getPolicy");
    ReflectionUtils.makeAccessible(method);
    this.target=method.invoke(this.classLoader);
    this.translatorClass=classLoader.loadClass(TRANSLATOR_NAME);
    this.addTranslator=this.target.getClass().getMethod("addTranslator",this.translatorClass);
  }
 catch (  Exception ex) {
    throw new IllegalStateException("Could not initialize JBoss LoadTimeWeaver because the JBoss 6 API classes are not available",ex);
  }
}
