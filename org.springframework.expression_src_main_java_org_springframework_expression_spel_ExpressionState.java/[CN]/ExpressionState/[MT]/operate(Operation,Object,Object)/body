{
  OperatorOverloader overloader=this.relatedContext.getOperatorOverloader();
  if (overloader.overridesOperation(op,left,right)) {
    Object returnValue=overloader.operate(op,left,right);
    return new TypedValue(returnValue,TypeDescriptor.forObject(returnValue));
  }
 else {
    throw new SpelException(SpelMessages.OPERATOR_NOT_SUPPORTED_BETWEEN_TYPES,op,left,right);
  }
}
