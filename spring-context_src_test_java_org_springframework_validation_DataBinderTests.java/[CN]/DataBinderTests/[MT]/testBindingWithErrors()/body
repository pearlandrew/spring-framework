{
  TestBean rod=new TestBean();
  DataBinder binder=new DataBinder(rod,"person");
  MutablePropertyValues pvs=new MutablePropertyValues();
  pvs.add("name","Rod");
  pvs.add("age","32x");
  pvs.add("touchy","m.y");
  binder.bind(pvs);
  try {
    binder.close();
    fail("Should have thrown BindException");
  }
 catch (  BindException ex) {
    assertTrue("changed name correctly",rod.getName().equals("Rod"));
    Map<?,?> map=binder.getBindingResult().getModel();
    TestBean tb=(TestBean)map.get("person");
    assertTrue("Same object",tb.equals(rod));
    BindingResult br=(BindingResult)map.get(BindingResult.MODEL_KEY_PREFIX + "person");
    assertSame(br,BindingResultUtils.getBindingResult(map,"person"));
    assertSame(br,BindingResultUtils.getRequiredBindingResult(map,"person"));
    assertNull(BindingResultUtils.getBindingResult(map,"someOtherName"));
    try {
      BindingResultUtils.getRequiredBindingResult(map,"someOtherName");
      fail("Should have thrown IllegalStateException");
    }
 catch (    IllegalStateException expected) {
    }
    assertTrue("Added itself to map",br == binder.getBindingResult());
    assertTrue(br.hasErrors());
    assertTrue("Correct number of errors",br.getErrorCount() == 2);
    assertTrue("Has age errors",br.hasFieldErrors("age"));
    assertTrue("Correct number of age errors",br.getFieldErrorCount("age") == 1);
    assertEquals("32x",binder.getBindingResult().getFieldValue("age"));
    assertEquals("32x",binder.getBindingResult().getFieldError("age").getRejectedValue());
    assertEquals(0,tb.getAge());
    assertTrue("Has touchy errors",br.hasFieldErrors("touchy"));
    assertTrue("Correct number of touchy errors",br.getFieldErrorCount("touchy") == 1);
    assertEquals("m.y",binder.getBindingResult().getFieldValue("touchy"));
    assertEquals("m.y",binder.getBindingResult().getFieldError("touchy").getRejectedValue());
    assertNull(tb.getTouchy());
    rod=new TestBean();
    binder=new DataBinder(rod,"person");
    pvs=new MutablePropertyValues();
    pvs.add("name","Rod");
    pvs.add("age","32x");
    pvs.add("touchy","m.y");
    binder.bind(pvs);
    assertEquals(binder.getBindingResult(),ex.getBindingResult());
  }
}
