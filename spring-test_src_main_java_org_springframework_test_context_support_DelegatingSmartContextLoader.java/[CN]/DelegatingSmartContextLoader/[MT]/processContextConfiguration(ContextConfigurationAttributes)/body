{
  Assert.notNull(configAttributes,"configAttributes must not be null");
  Assert.isTrue(!(configAttributes.hasLocations() && configAttributes.hasClasses()),String.format("Cannot process locations AND classes for context " + "configuration %s; configure one or the other, but not both.",configAttributes));
  if (configAttributes.hasLocations()) {
    delegateProcessing(xmlLoader,configAttributes);
  }
 else   if (configAttributes.hasClasses()) {
    delegateProcessing(annotationConfigLoader,configAttributes);
  }
 else {
    delegateProcessing(xmlLoader,configAttributes);
    boolean xmlLoaderDetectedDefaults=configAttributes.hasLocations();
    if (xmlLoaderDetectedDefaults) {
      if (logger.isInfoEnabled()) {
        logger.info(String.format("%s detected default locations for context configuration %s.",name(xmlLoader),configAttributes));
      }
    }
    if (configAttributes.hasClasses()) {
      throw new IllegalStateException(String.format("%s should NOT have detected default configuration classes for context configuration %s.",name(xmlLoader),configAttributes));
    }
    delegateProcessing(annotationConfigLoader,configAttributes);
    if (configAttributes.hasClasses()) {
      if (logger.isInfoEnabled()) {
        logger.info(String.format("%s detected default configuration classes for context configuration %s.",name(annotationConfigLoader),configAttributes));
      }
    }
    if (!xmlLoaderDetectedDefaults && configAttributes.hasLocations()) {
      throw new IllegalStateException(String.format("%s should NOT have detected default locations for context configuration %s.",name(annotationConfigLoader),configAttributes));
    }
    if (!configAttributes.hasResources() && ObjectUtils.isEmpty(configAttributes.getInitializers())) {
      throw new IllegalStateException(String.format("Neither %s nor %s was able to detect defaults, and no ApplicationContextInitializers " + "were declared for context configuration %s",name(xmlLoader),name(annotationConfigLoader),configAttributes));
    }
    if (configAttributes.hasLocations() && configAttributes.hasClasses()) {
      String message=String.format("Configuration error: both default locations AND default configuration classes " + "were detected for context configuration %s; configure one or the other, but not both.",configAttributes);
      logger.error(message);
      throw new IllegalStateException(message);
    }
  }
}
