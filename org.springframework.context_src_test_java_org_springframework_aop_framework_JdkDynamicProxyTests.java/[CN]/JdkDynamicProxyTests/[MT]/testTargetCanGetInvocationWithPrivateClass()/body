{
  final ExposedInvocationTestBean expectedTarget=new ExposedInvocationTestBean(){
    protected void assertions(    MethodInvocation invocation){
      assertTrue(invocation.getThis() == this);
      assertTrue("Invocation should be on ITestBean: " + invocation.getMethod(),invocation.getMethod().getDeclaringClass() == ITestBean.class);
    }
  }
;
  AdvisedSupport pc=new AdvisedSupport(new Class[]{ITestBean.class,IOther.class});
  pc.addAdvice(ExposeInvocationInterceptor.INSTANCE);
  TrapTargetInterceptor tii=new TrapTargetInterceptor(){
    public Object invoke(    MethodInvocation invocation) throws Throwable {
      assertEquals("Target is correct",expectedTarget,invocation.getThis());
      return super.invoke(invocation);
    }
  }
;
  pc.addAdvice(tii);
  pc.setTarget(expectedTarget);
  AopProxy aop=createAopProxy(pc);
  ITestBean tb=(ITestBean)aop.getProxy();
  tb.getName();
}
