{
  int count=this.method.getParameterTypes().length;
  if (count > 1) {
    throw new IllegalStateException("Maximum one parameter is allowed for event listener method: " + this.method);
  }
  EventListener ann=getEventListener();
  if (ann != null && ann.classes().length > 0) {
    List<ResolvableType> types=new ArrayList<ResolvableType>();
    for (    Class<?> eventType : ann.classes()) {
      types.add(ResolvableType.forClass(eventType));
    }
    return types;
  }
 else {
    if (count == 0) {
      throw new IllegalStateException("Event parameter is mandatory for event listener method: " + this.method);
    }
    return Collections.singletonList(ResolvableType.forMethodParameter(this.method,0));
  }
}
