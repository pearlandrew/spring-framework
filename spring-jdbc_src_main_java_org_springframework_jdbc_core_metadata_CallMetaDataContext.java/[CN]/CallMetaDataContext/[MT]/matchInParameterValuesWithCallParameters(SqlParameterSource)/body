{
  Map caseInsensitiveParameterNames=SqlParameterSourceUtils.extractCaseInsensitiveParameterNames(parameterSource);
  Map<String,String> callParameterNames=new HashMap<String,String>(this.callParameters.size());
  Map<String,Object> matchedParameters=new HashMap<String,Object>(this.callParameters.size());
  for (  SqlParameter parameter : this.callParameters) {
    if (parameter.isInputValueProvided()) {
      String parameterName=parameter.getName();
      String parameterNameToMatch=this.metaDataProvider.parameterNameToUse(parameterName);
      if (parameterNameToMatch != null) {
        callParameterNames.put(parameterNameToMatch.toLowerCase(),parameterName);
      }
      if (parameterName != null) {
        if (parameterSource.hasValue(parameterName)) {
          matchedParameters.put(parameterName,SqlParameterSourceUtils.getTypedValue(parameterSource,parameterName));
        }
 else {
          String lowerCaseName=parameterName.toLowerCase();
          if (parameterSource.hasValue(lowerCaseName)) {
            matchedParameters.put(parameterName,SqlParameterSourceUtils.getTypedValue(parameterSource,lowerCaseName));
          }
 else {
            String englishLowerCaseName=parameterName.toLowerCase(Locale.ENGLISH);
            if (parameterSource.hasValue(englishLowerCaseName)) {
              matchedParameters.put(parameterName,SqlParameterSourceUtils.getTypedValue(parameterSource,englishLowerCaseName));
            }
 else {
              String propertyName=JdbcUtils.convertUnderscoreNameToPropertyName(parameterName);
              if (parameterSource.hasValue(propertyName)) {
                matchedParameters.put(parameterName,SqlParameterSourceUtils.getTypedValue(parameterSource,propertyName));
              }
 else {
                if (caseInsensitiveParameterNames.containsKey(lowerCaseName)) {
                  String sourceName=(String)caseInsensitiveParameterNames.get(lowerCaseName);
                  matchedParameters.put(parameterName,SqlParameterSourceUtils.getTypedValue(parameterSource,sourceName));
                }
 else {
                  logger.warn("Unable to locate the corresponding parameter value for '" + parameterName + "' within the parameter values provided: "+ caseInsensitiveParameterNames.values());
                }
              }
            }
          }
        }
      }
    }
  }
  if (logger.isDebugEnabled()) {
    logger.debug("Matching " + caseInsensitiveParameterNames.values() + " with "+ callParameterNames.values());
    logger.debug("Found match for " + matchedParameters.keySet());
  }
  return matchedParameters;
}
