{
  Assert.notEmpty(configAttributesList,"ContextConfigurationAttributes list must not be null or empty");
  ContextLoader contextLoader=resolveContextLoader(testClass,configAttributesList);
  List<String> locations=new ArrayList<String>();
  List<Class<?>> classes=new ArrayList<Class<?>>();
  List<Class<?>> initializers=new ArrayList<Class<?>>();
  for (  ContextConfigurationAttributes configAttributes : configAttributesList) {
    if (logger.isTraceEnabled()) {
      logger.trace(String.format("Processing locations and classes for context configuration attributes %s",configAttributes));
    }
    if (contextLoader instanceof SmartContextLoader) {
      SmartContextLoader smartContextLoader=(SmartContextLoader)contextLoader;
      smartContextLoader.processContextConfiguration(configAttributes);
      locations.addAll(0,Arrays.asList(configAttributes.getLocations()));
      classes.addAll(0,Arrays.asList(configAttributes.getClasses()));
    }
 else {
      String[] processedLocations=contextLoader.processLocations(configAttributes.getDeclaringClass(),configAttributes.getLocations());
      locations.addAll(0,Arrays.asList(processedLocations));
    }
    initializers.addAll(0,Arrays.asList(configAttributes.getInitializers()));
    if (!configAttributes.isInheritLocations()) {
      break;
    }
  }
  if (requireLocationsClassesOrInitializers && areAllEmpty(locations,classes,initializers)) {
    throw new IllegalStateException(String.format("%s was unable to detect defaults, and no ApplicationContextInitializers " + "were declared for context configuration attributes %s",contextLoader.getClass().getSimpleName(),configAttributesList));
  }
  MergedTestPropertySources mergedTestPropertySources=TestPropertySourceUtils.buildMergedTestPropertySources(testClass);
  MergedContextConfiguration mergedConfig=new MergedContextConfiguration(testClass,StringUtils.toStringArray(locations),ClassUtils.toClassArray(classes),ApplicationContextInitializerUtils.resolveInitializerClasses(configAttributesList),ActiveProfilesUtils.resolveActiveProfiles(testClass),mergedTestPropertySources.getLocations(),mergedTestPropertySources.getProperties(),contextLoader,cacheAwareContextLoaderDelegate,parentConfig);
  return processMergedContextConfiguration(mergedConfig);
}
