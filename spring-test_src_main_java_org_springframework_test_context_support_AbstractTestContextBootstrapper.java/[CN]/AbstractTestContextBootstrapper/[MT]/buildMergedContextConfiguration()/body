{
  Class<?> testClass=getBootstrapContext().getTestClass();
  CacheAwareContextLoaderDelegate cacheAwareContextLoaderDelegate=getBootstrapContext().getCacheAwareContextLoaderDelegate();
  if (MetaAnnotationUtils.findAnnotationDescriptorForTypes(testClass,ContextConfiguration.class,ContextHierarchy.class) == null) {
    if (logger.isInfoEnabled()) {
      logger.info(String.format("Neither @ContextConfiguration nor @ContextHierarchy found for test class [%s]",testClass.getName()));
    }
    return new MergedContextConfiguration(testClass,null,null,null,null);
  }
  if (AnnotationUtils.findAnnotation(testClass,ContextHierarchy.class) != null) {
    Map<String,List<ContextConfigurationAttributes>> hierarchyMap=ContextLoaderUtils.buildContextHierarchyMap(testClass);
    MergedContextConfiguration parentConfig=null;
    MergedContextConfiguration mergedConfig=null;
    for (    List<ContextConfigurationAttributes> list : hierarchyMap.values()) {
      List<ContextConfigurationAttributes> reversedList=new ArrayList<ContextConfigurationAttributes>(list);
      Collections.reverse(reversedList);
      Assert.notEmpty(reversedList,"ContextConfigurationAttributes list must not be empty");
      Class<?> declaringClass=reversedList.get(0).getDeclaringClass();
      mergedConfig=buildMergedContextConfiguration(declaringClass,reversedList,parentConfig,cacheAwareContextLoaderDelegate);
      parentConfig=mergedConfig;
    }
    return mergedConfig;
  }
 else {
    return buildMergedContextConfiguration(testClass,ContextLoaderUtils.resolveContextConfigurationAttributes(testClass),null,cacheAwareContextLoaderDelegate);
  }
}
