{
  TypeConverter converterToUse=(this.typeConverter != null ? this.typeConverter : bw);
  BeanDefinitionValueResolver valueResolver=new BeanDefinitionValueResolver(this.beanFactory,beanName,mbd,converterToUse);
  int minNrOfArgs=cargs.getArgumentCount();
  for (Iterator it=cargs.getIndexedArgumentValues().entrySet().iterator(); it.hasNext(); ) {
    Map.Entry entry=(Map.Entry)it.next();
    int index=((Integer)entry.getKey()).intValue();
    if (index < 0) {
      throw new BeanCreationException(mbd.getResourceDescription(),beanName,"Invalid constructor argument index: " + index);
    }
    if (index > minNrOfArgs) {
      minNrOfArgs=index + 1;
    }
    ConstructorArgumentValues.ValueHolder valueHolder=(ConstructorArgumentValues.ValueHolder)entry.getValue();
    if (valueHolder.isConverted()) {
      resolvedValues.addIndexedArgumentValue(index,valueHolder);
    }
 else {
      Object resolvedValue=valueResolver.resolveValueIfNecessary("constructor argument",valueHolder.getValue());
      ConstructorArgumentValues.ValueHolder resolvedValueHolder=new ConstructorArgumentValues.ValueHolder(resolvedValue,valueHolder.getType());
      resolvedValueHolder.setSource(valueHolder);
      resolvedValues.addIndexedArgumentValue(index,resolvedValueHolder);
    }
  }
  for (Iterator it=cargs.getGenericArgumentValues().iterator(); it.hasNext(); ) {
    ConstructorArgumentValues.ValueHolder valueHolder=(ConstructorArgumentValues.ValueHolder)it.next();
    if (valueHolder.isConverted()) {
      resolvedValues.addGenericArgumentValue(valueHolder);
    }
 else {
      Object resolvedValue=valueResolver.resolveValueIfNecessary("constructor argument",valueHolder.getValue());
      ConstructorArgumentValues.ValueHolder resolvedValueHolder=new ConstructorArgumentValues.ValueHolder(resolvedValue,valueHolder.getType());
      resolvedValueHolder.setSource(valueHolder);
      resolvedValues.addGenericArgumentValue(resolvedValueHolder);
    }
  }
  return minNrOfArgs;
}
