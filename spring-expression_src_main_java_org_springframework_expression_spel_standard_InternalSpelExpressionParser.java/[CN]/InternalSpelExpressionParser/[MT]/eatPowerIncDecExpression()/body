{
  SpelNodeImpl expr=eatUnaryExpression();
  if (peekToken(TokenKind.POWER)) {
    Token t=nextToken();
    SpelNodeImpl rhExpr=eatUnaryExpression();
    checkRightOperand(t,rhExpr);
    return new OperatorPower(toPos(t),expr,rhExpr);
  }
 else   if (expr != null && peekToken(TokenKind.INC,TokenKind.DEC)) {
    Token t=nextToken();
    if (t.getKind() == TokenKind.INC) {
      return new OpInc(toPos(t),true,expr);
    }
 else {
      return new OpDec(toPos(t),true,expr);
    }
  }
  return expr;
}
