{
  try {
    this.expressionString=expressionString;
    Tokenizer tokenizer=new Tokenizer(expressionString);
    tokenizer.process();
    this.tokenStream=tokenizer.getTokens();
    this.tokenStreamLength=this.tokenStream.size();
    this.tokenStreamPointer=0;
    this.constructedNodes.clear();
    SpelNodeImpl ast=eatExpression();
    if (moreTokens()) {
      throw new SpelParseException(peekToken().startpos,SpelMessage.MORE_INPUT,toString(nextToken()));
    }
    Assert.isTrue(this.constructedNodes.isEmpty());
    return new SpelExpression(expressionString,ast,this.configuration);
  }
 catch (  InternalParseException ipe) {
    throw ipe.getCause();
  }
}
