{
  LinkedList<SpelNodeImpl> qualifiedIdPieces=new LinkedList<SpelNodeImpl>();
  Token node=peekToken();
  while (isValidQualifiedId(node)) {
    nextToken();
    if (node.kind != TokenKind.DOT) {
      qualifiedIdPieces.add(new Identifier(node.stringValue(),toPos(node)));
    }
    node=peekToken();
  }
  if (qualifiedIdPieces.isEmpty()) {
    if (node == null) {
      raiseInternalException(this.expressionString.length(),SpelMessage.OOD);
    }
    raiseInternalException(node.startPos,SpelMessage.NOT_EXPECTED_TOKEN,"qualified ID",node.getKind().toString().toLowerCase());
  }
  int pos=toPos(qualifiedIdPieces.getFirst().getStartPosition(),qualifiedIdPieces.getLast().getEndPosition());
  return new QualifiedIdentifier(pos,qualifiedIdPieces.toArray(new SpelNodeImpl[qualifiedIdPieces.size()]));
}
