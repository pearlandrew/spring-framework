{
  MockControl ctrlResultSet=MockControl.createControl(ResultSet.class);
  ResultSet mockResultSet=(ResultSet)ctrlResultSet.getMock();
  mockResultSet.next();
  ctrlResultSet.setReturnValue(true);
  mockResultSet.getString("PROCEDURE_CAT");
  ctrlResultSet.setReturnValue(null);
  mockResultSet.getString("PROCEDURE_SCHEM");
  ctrlResultSet.setReturnValue(null);
  mockResultSet.getString("PROCEDURE_NAME");
  ctrlResultSet.setReturnValue("add_invoice");
  mockResultSet.next();
  ctrlResultSet.setReturnValue(false);
  mockResultSet.close();
  ctrlResultSet.setVoidCallable();
  mockResultSet.next();
  ctrlResultSet.setReturnValue(true);
  if (isFunction) {
    mockResultSet.getString("COLUMN_NAME");
    ctrlResultSet.setReturnValue(null);
    mockResultSet.getInt("COLUMN_TYPE");
    ctrlResultSet.setReturnValue(5);
  }
 else {
    mockResultSet.getString("COLUMN_NAME");
    ctrlResultSet.setReturnValue("amount");
    mockResultSet.getInt("COLUMN_TYPE");
    ctrlResultSet.setReturnValue(1);
  }
  mockResultSet.getInt("DATA_TYPE");
  ctrlResultSet.setReturnValue(4);
  mockResultSet.getString("TYPE_NAME");
  ctrlResultSet.setReturnValue(null);
  mockResultSet.getBoolean("NULLABLE");
  ctrlResultSet.setReturnValue(false);
  mockResultSet.next();
  ctrlResultSet.setReturnValue(true);
  if (isFunction) {
    mockResultSet.getString("COLUMN_NAME");
    ctrlResultSet.setReturnValue("amount");
    mockResultSet.getInt("COLUMN_TYPE");
    ctrlResultSet.setReturnValue(1);
  }
 else {
    mockResultSet.getString("COLUMN_NAME");
    ctrlResultSet.setReturnValue("custid");
    mockResultSet.getInt("COLUMN_TYPE");
    ctrlResultSet.setReturnValue(1);
  }
  mockResultSet.getInt("DATA_TYPE");
  ctrlResultSet.setReturnValue(4);
  mockResultSet.getString("TYPE_NAME");
  ctrlResultSet.setReturnValue(null);
  mockResultSet.getBoolean("NULLABLE");
  ctrlResultSet.setReturnValue(false);
  mockResultSet.next();
  ctrlResultSet.setReturnValue(true);
  if (isFunction) {
    mockResultSet.getString("COLUMN_NAME");
    ctrlResultSet.setReturnValue("custid");
    mockResultSet.getInt("COLUMN_TYPE");
    ctrlResultSet.setReturnValue(1);
  }
 else {
    mockResultSet.getString("COLUMN_NAME");
    ctrlResultSet.setReturnValue("newid");
    mockResultSet.getInt("COLUMN_TYPE");
    ctrlResultSet.setReturnValue(4);
  }
  mockResultSet.getInt("DATA_TYPE");
  ctrlResultSet.setReturnValue(4);
  mockResultSet.getString("TYPE_NAME");
  ctrlResultSet.setReturnValue(null);
  mockResultSet.getBoolean("NULLABLE");
  ctrlResultSet.setReturnValue(false);
  mockResultSet.next();
  ctrlResultSet.setReturnValue(false);
  mockResultSet.close();
  ctrlResultSet.setVoidCallable();
  mockDatabaseMetaData.getDatabaseProductName();
  ctrlDatabaseMetaData.setReturnValue("Oracle");
  mockDatabaseMetaData.getUserName();
  ctrlDatabaseMetaData.setReturnValue("ME");
  mockDatabaseMetaData.supportsCatalogsInProcedureCalls();
  ctrlDatabaseMetaData.setReturnValue(false);
  mockDatabaseMetaData.supportsSchemasInProcedureCalls();
  ctrlDatabaseMetaData.setReturnValue(false);
  mockDatabaseMetaData.storesUpperCaseIdentifiers();
  ctrlDatabaseMetaData.setReturnValue(true);
  mockDatabaseMetaData.storesLowerCaseIdentifiers();
  ctrlDatabaseMetaData.setReturnValue(false);
  mockDatabaseMetaData.getProcedures("","ME","ADD_INVOICE");
  ctrlDatabaseMetaData.setReturnValue(mockResultSet);
  mockDatabaseMetaData.getProcedureColumns("","ME","ADD_INVOICE",null);
  ctrlDatabaseMetaData.setReturnValue(mockResultSet);
  if (isFunction) {
    mockCallable.registerOutParameter(1,4);
    ctrlCallable.setVoidCallable();
    mockCallable.setObject(2,1103,4);
    ctrlCallable.setVoidCallable();
    mockCallable.setObject(3,3,4);
    ctrlCallable.setVoidCallable();
  }
 else {
    mockCallable.setObject(1,1103,4);
    ctrlCallable.setVoidCallable();
    mockCallable.setObject(2,3,4);
    ctrlCallable.setVoidCallable();
    mockCallable.registerOutParameter(3,4);
    ctrlCallable.setVoidCallable();
  }
  mockCallable.execute();
  ctrlCallable.setReturnValue(false);
  mockCallable.getUpdateCount();
  ctrlCallable.setReturnValue(-1);
  if (isFunction) {
    mockCallable.getObject(1);
    ctrlCallable.setReturnValue(new Long(4));
  }
 else {
    mockCallable.getObject(3);
    ctrlCallable.setReturnValue(new Long(4));
  }
  if (debugEnabled) {
    mockCallable.getWarnings();
    ctrlCallable.setReturnValue(null);
  }
  mockCallable.close();
  ctrlCallable.setVoidCallable();
  if (isFunction) {
    mockConnection.prepareCall("{? = call ADD_INVOICE(?, ?)}");
    ctrlConnection.setReturnValue(mockCallable);
  }
 else {
    mockConnection.prepareCall("{call ADD_INVOICE(?, ?, ?)}");
    ctrlConnection.setReturnValue(mockCallable);
  }
  return ctrlResultSet;
}
