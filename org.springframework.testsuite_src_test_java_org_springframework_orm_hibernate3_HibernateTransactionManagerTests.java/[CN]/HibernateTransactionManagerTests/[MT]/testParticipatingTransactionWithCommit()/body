{
  MockControl conControl=MockControl.createControl(Connection.class);
  Connection con=(Connection)conControl.getMock();
  MockControl sfControl=MockControl.createControl(SessionFactory.class);
  final SessionFactory sf=(SessionFactory)sfControl.getMock();
  MockControl sessionControl=MockControl.createControl(Session.class);
  final Session session=(Session)sessionControl.getMock();
  MockControl txControl=MockControl.createControl(Transaction.class);
  Transaction tx=(Transaction)txControl.getMock();
  sf.openSession();
  sfControl.setReturnValue(session,1);
  session.beginTransaction();
  sessionControl.setReturnValue(tx,1);
  session.isOpen();
  sessionControl.setReturnValue(true,1);
  session.getFlushMode();
  sessionControl.setReturnValue(FlushMode.AUTO,1);
  session.flush();
  sessionControl.setVoidCallable(1);
  session.close();
  sessionControl.setReturnValue(null,1);
  tx.commit();
  txControl.setVoidCallable(1);
  session.isConnected();
  sessionControl.setReturnValue(true,1);
  session.connection();
  sessionControl.setReturnValue(con,2);
  con.isReadOnly();
  conControl.setReturnValue(false,1);
  sfControl.replay();
  sessionControl.replay();
  txControl.replay();
  LocalSessionFactoryBean lsfb=new LocalSessionFactoryBean(){
    protected SessionFactory newSessionFactory(    Configuration config) throws HibernateException {
      return sf;
    }
  }
;
  lsfb.afterPropertiesSet();
  final SessionFactory sfProxy=(SessionFactory)lsfb.getObject();
  PlatformTransactionManager tm=new HibernateTransactionManager(sfProxy);
  final TransactionTemplate tt=new TransactionTemplate(tm);
  final List l=new ArrayList();
  l.add("test");
  Object result=tt.execute(new TransactionCallback(){
    public Object doInTransaction(    TransactionStatus status){
      return tt.execute(new TransactionCallback(){
        public Object doInTransaction(        TransactionStatus status){
          HibernateTemplate ht=new HibernateTemplate(sfProxy);
          ht.setFlushMode(HibernateTemplate.FLUSH_EAGER);
          return ht.executeFind(new HibernateCallback(){
            public Object doInHibernate(            org.hibernate.Session session){
              return l;
            }
          }
);
        }
      }
);
    }
  }
);
  assertTrue("Correct result list",result == l);
  sfControl.verify();
  sessionControl.verify();
  txControl.verify();
}
