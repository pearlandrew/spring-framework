{
  OpenEntityManagerInViewInterceptor rawInterceptor=new OpenEntityManagerInViewInterceptor();
  rawInterceptor.setEntityManagerFactory(factory);
  HandlerInterceptor interceptor=new WebRequestHandlerInterceptorAdapter(rawInterceptor);
  MockServletContext sc=new MockServletContext();
  MockHttpServletRequest request=new MockHttpServletRequest(sc);
  MockHttpServletResponse response=new MockHttpServletResponse();
  managerControl.replay();
  factoryControl.replay();
  interceptor.preHandle(request,response,"handler");
  assertTrue(TransactionSynchronizationManager.hasResource(factory));
  interceptor.preHandle(request,response,"handler");
  interceptor.preHandle(request,response,"handler");
  interceptor.postHandle(request,response,"handler",null);
  interceptor.afterCompletion(request,response,"handler",null);
  interceptor.postHandle(request,response,"handler",null);
  interceptor.afterCompletion(request,response,"handler",null);
  interceptor.preHandle(request,response,"handler");
  interceptor.postHandle(request,response,"handler",null);
  interceptor.afterCompletion(request,response,"handler",null);
  factoryControl.verify();
  managerControl.verify();
  managerControl.reset();
  factoryControl.reset();
  managerControl.replay();
  factoryControl.replay();
  interceptor.postHandle(request,response,"handler",null);
  assertTrue(TransactionSynchronizationManager.hasResource(factory));
  factoryControl.verify();
  managerControl.verify();
  managerControl.reset();
  factoryControl.reset();
  manager.close();
  managerControl.replay();
  factoryControl.replay();
  interceptor.afterCompletion(request,response,"handler",null);
  assertFalse(TransactionSynchronizationManager.hasResource(factory));
  factoryControl.verify();
  managerControl.verify();
}
