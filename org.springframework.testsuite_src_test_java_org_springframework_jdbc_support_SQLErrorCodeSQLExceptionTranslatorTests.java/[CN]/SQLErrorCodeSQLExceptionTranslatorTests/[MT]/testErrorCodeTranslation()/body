{
  SQLExceptionTranslator sext=new SQLErrorCodeSQLExceptionTranslator(ERROR_CODES);
  SQLException badSqlEx=new SQLException("","",1);
  BadSqlGrammarException bsgex=(BadSqlGrammarException)sext.translate("task","SQL",badSqlEx);
  assertEquals("SQL",bsgex.getSql());
  assertEquals(badSqlEx,bsgex.getSQLException());
  SQLException invResEx=new SQLException("","",4);
  InvalidResultSetAccessException irsex=(InvalidResultSetAccessException)sext.translate("task","SQL",invResEx);
  assertEquals("SQL",irsex.getSql());
  assertEquals(invResEx,irsex.getSQLException());
  checkTranslation(sext,5,DataAccessResourceFailureException.class);
  checkTranslation(sext,6,DataIntegrityViolationException.class);
  checkTranslation(sext,7,CannotAcquireLockException.class);
  checkTranslation(sext,8,DeadlockLoserDataAccessException.class);
  checkTranslation(sext,9,CannotSerializeTransactionException.class);
  SQLException sex=new SQLException("","07xxx",666666666);
  BadSqlGrammarException bsgex2=(BadSqlGrammarException)sext.translate("task","SQL2",sex);
  assertEquals("SQL2",bsgex2.getSql());
  assertEquals(sex,bsgex2.getSQLException());
}
