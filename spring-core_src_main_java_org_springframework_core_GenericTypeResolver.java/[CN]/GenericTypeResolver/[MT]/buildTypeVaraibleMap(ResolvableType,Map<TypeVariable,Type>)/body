{
  if (type != ResolvableType.NONE) {
    if (type.getType() instanceof ParameterizedType) {
      TypeVariable<?>[] variables=type.resolve().getTypeParameters();
      for (int i=0; i < variables.length; i++) {
        ResolvableType generic=type.getGeneric(i);
        while (generic.getType() instanceof TypeVariable<?>) {
          generic=generic.resolveType();
        }
        if (generic != ResolvableType.NONE) {
          typeVariableMap.put(variables[i],generic.getType());
        }
      }
    }
    buildTypeVaraibleMap(type.getSuperType(),typeVariableMap);
    for (    ResolvableType interfaceType : type.getInterfaces()) {
      buildTypeVaraibleMap(interfaceType,typeVariableMap);
    }
    if (type.resolve().isMemberClass()) {
      buildTypeVaraibleMap(ResolvableType.forClass(type.resolve().getEnclosingClass()),typeVariableMap);
    }
  }
}
