{
  while (classToIntrospect != null) {
    if (genericIfc.isInterface()) {
      Type[] ifcs=classToIntrospect.getGenericInterfaces();
      for (      Type ifc : ifcs) {
        Class[] result=doResolveTypeArguments(ownerClass,ifc,genericIfc);
        if (result != null) {
          return result;
        }
      }
    }
 else {
      Class[] result=doResolveTypeArguments(ownerClass,classToIntrospect.getGenericSuperclass(),genericIfc);
      if (result != null) {
        return result;
      }
    }
    classToIntrospect=classToIntrospect.getSuperclass();
  }
  return null;
}
