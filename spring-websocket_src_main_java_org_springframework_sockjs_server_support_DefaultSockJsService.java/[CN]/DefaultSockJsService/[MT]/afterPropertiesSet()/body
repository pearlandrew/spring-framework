{
  super.afterPropertiesSet();
  if (this.transportHandlers.isEmpty()) {
    if (isWebSocketEnabled() && (this.transportHandlerOverrides.get(TransportType.WEBSOCKET) == null)) {
      this.transportHandlers.put(TransportType.WEBSOCKET,new WebSocketTransportHandler(new DefaultHandshakeHandler()));
    }
    this.transportHandlers.put(TransportType.XHR,new XhrPollingTransportHandler());
    this.transportHandlers.put(TransportType.XHR_SEND,new XhrTransportHandler());
    this.transportHandlers.put(TransportType.JSONP,new JsonpPollingTransportHandler());
    this.transportHandlers.put(TransportType.JSONP_SEND,new JsonpTransportHandler());
    this.transportHandlers.put(TransportType.XHR_STREAMING,new XhrStreamingTransportHandler());
    this.transportHandlers.put(TransportType.EVENT_SOURCE,new EventSourceTransportHandler());
    this.transportHandlers.put(TransportType.HTML_FILE,new HtmlFileTransportHandler());
  }
  if (!this.transportHandlerOverrides.isEmpty()) {
    for (    TransportHandler transportHandler : this.transportHandlerOverrides.values()) {
      this.transportHandlers.put(transportHandler.getTransportType(),transportHandler);
    }
  }
  configureTransportHandlers();
  this.sessionTimeoutSchedulerHolder.initialize();
  this.sessionTimeoutSchedulerHolder.getScheduler().scheduleAtFixedRate(new Runnable(){
    public void run(){
      try {
        int count=sessions.size();
        if (logger.isTraceEnabled() && (count != 0)) {
          logger.trace("Checking " + count + " session(s) for timeouts ["+ getPrefix()+ "]");
        }
        for (        SockJsSessionSupport session : sessions.values()) {
          if (session.getTimeSinceLastActive() > getDisconnectDelay()) {
            if (logger.isTraceEnabled()) {
              logger.trace("Removing " + session + " for ["+ getPrefix()+ "]");
            }
            session.close();
            sessions.remove(session.getId());
          }
        }
        if (logger.isTraceEnabled() && (count != 0)) {
          logger.trace(sessions.size() + " remaining session(s) [" + getPrefix()+ "]");
        }
      }
 catch (      Throwable t) {
        logger.error("Failed to complete session timeout checks for [" + getPrefix() + "]",t);
      }
    }
  }
,getDisconnectDelay());
}
