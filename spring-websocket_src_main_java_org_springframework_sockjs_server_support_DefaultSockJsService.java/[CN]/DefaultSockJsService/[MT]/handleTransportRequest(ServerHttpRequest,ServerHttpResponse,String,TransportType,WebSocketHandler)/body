{
  TransportHandler transportHandler=this.transportHandlers.get(transportType);
  if (transportHandler == null) {
    logger.debug("Transport handler not found");
    response.setStatusCode(HttpStatus.NOT_FOUND);
    return;
  }
  HttpMethod supportedMethod=transportType.getHttpMethod();
  if (!supportedMethod.equals(request.getMethod())) {
    if (HttpMethod.OPTIONS.equals(request.getMethod()) && transportType.supportsCors()) {
      response.setStatusCode(HttpStatus.NO_CONTENT);
      addCorsHeaders(request,response,supportedMethod,HttpMethod.OPTIONS);
      addCacheHeaders(response);
    }
 else {
      List<HttpMethod> supportedMethods=Arrays.asList(supportedMethod);
      if (transportType.supportsCors()) {
        supportedMethods.add(HttpMethod.OPTIONS);
      }
      sendMethodNotAllowed(response,supportedMethods);
    }
    return;
  }
  AbstractSockJsSession session=getSockJsSession(sessionId,webSocketHandler,transportHandler,request,response);
  if (session != null) {
    if (transportType.setsNoCache()) {
      addNoCacheHeaders(response);
    }
    if (transportType.setsJsessionId() && isJsessionIdCookieRequired()) {
      Cookie cookie=request.getCookies().getCookie("JSESSIONID");
      String jsid=(cookie != null) ? cookie.getValue() : "dummy";
      response.getHeaders().set("Set-Cookie","JSESSIONID=" + jsid + ";path=/");
    }
    if (transportType.supportsCors()) {
      addCorsHeaders(request,response);
    }
  }
  transportHandler.handleRequest(request,response,webSocketHandler,session);
}
