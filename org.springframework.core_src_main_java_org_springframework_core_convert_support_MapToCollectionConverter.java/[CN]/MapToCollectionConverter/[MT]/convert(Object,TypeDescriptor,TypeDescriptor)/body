{
  if (source == null) {
    return this.conversionService.convertNullSource(sourceType,targetType);
  }
  Map<?,?> sourceMap=(Map<?,?>)source;
  TypeDescriptor sourceKeyType=sourceType.getMapKeyTypeDescriptor();
  TypeDescriptor sourceValueType=sourceType.getMapValueTypeDescriptor();
  if (sourceKeyType == TypeDescriptor.NULL || sourceValueType == TypeDescriptor.NULL) {
    TypeDescriptor[] sourceEntryTypes=getMapEntryTypes(sourceMap);
    sourceKeyType=sourceEntryTypes[0];
    sourceValueType=sourceEntryTypes[1];
  }
  TypeDescriptor targetElementType=targetType.getElementTypeDescriptor();
  boolean keysCompatible=false;
  if (sourceKeyType != TypeDescriptor.NULL && sourceKeyType.isAssignableTo(targetElementType)) {
    keysCompatible=true;
  }
  boolean valuesCompatible=false;
  if (sourceValueType != TypeDescriptor.NULL || sourceValueType.isAssignableTo(targetElementType)) {
    valuesCompatible=true;
  }
  Collection target=CollectionFactory.createCollection(targetType.getType(),sourceMap.size());
  MapEntryConverter converter=new MapEntryConverter(sourceKeyType,sourceValueType,targetElementType,targetElementType,keysCompatible,valuesCompatible,this.conversionService);
  if (targetElementType.getType().equals(String.class)) {
    for (    Object entry : sourceMap.entrySet()) {
      Map.Entry<?,?> mapEntry=(Map.Entry<?,?>)entry;
      String property=converter.convertKey(mapEntry.getKey()) + "=" + converter.convertValue(mapEntry.getValue());
      target.add(property);
    }
  }
 else {
    for (    Object value : sourceMap.values()) {
      target.add(converter.convertValue(value));
    }
  }
  return target;
}
