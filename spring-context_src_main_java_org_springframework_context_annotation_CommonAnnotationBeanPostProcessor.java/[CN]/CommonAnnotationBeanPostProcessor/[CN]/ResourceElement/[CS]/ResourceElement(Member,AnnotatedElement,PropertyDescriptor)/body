{
  super(member,pd);
  Resource resource=ae.getAnnotation(Resource.class);
  String resourceName=resource.name();
  Class<?> resourceType=resource.type();
  this.isDefaultName=!StringUtils.hasLength(resourceName);
  if (this.isDefaultName) {
    resourceName=this.member.getName();
    if (this.member instanceof Method && resourceName.startsWith("set") && resourceName.length() > 3) {
      resourceName=Introspector.decapitalize(resourceName.substring(3));
    }
  }
 else   if (beanFactory instanceof ConfigurableBeanFactory) {
    resourceName=((ConfigurableBeanFactory)beanFactory).resolveEmbeddedValue(resourceName);
  }
  if (resourceType != null && Object.class != resourceType) {
    checkResourceType(resourceType);
  }
 else {
    resourceType=getResourceType();
  }
  this.name=resourceName;
  this.lookupType=resourceType;
  String lookupValue=(lookupAttribute != null ? (String)ReflectionUtils.invokeMethod(lookupAttribute,resource) : null);
  this.mappedName=(StringUtils.hasLength(lookupValue) ? lookupValue : resource.mappedName());
  Lazy lazy=ae.getAnnotation(Lazy.class);
  this.lazyLookup=(lazy != null && lazy.value());
}
