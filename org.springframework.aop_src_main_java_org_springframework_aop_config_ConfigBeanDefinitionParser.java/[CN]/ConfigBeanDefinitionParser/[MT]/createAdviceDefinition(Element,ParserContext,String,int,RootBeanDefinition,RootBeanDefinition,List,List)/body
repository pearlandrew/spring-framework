{
  RootBeanDefinition adviceDefinition=new RootBeanDefinition(getAdviceClass(adviceElement));
  adviceDefinition.setSource(parserContext.extractSource(adviceElement));
  adviceDefinition.getPropertyValues().addPropertyValue(ASPECT_NAME_PROPERTY,aspectName);
  adviceDefinition.getPropertyValues().addPropertyValue(DECLARATION_ORDER_PROPERTY,new Integer(order));
  if (adviceElement.hasAttribute(RETURNING)) {
    adviceDefinition.getPropertyValues().addPropertyValue(RETURNING_PROPERTY,adviceElement.getAttribute(RETURNING));
  }
  if (adviceElement.hasAttribute(THROWING)) {
    adviceDefinition.getPropertyValues().addPropertyValue(THROWING_PROPERTY,adviceElement.getAttribute(THROWING));
  }
  if (adviceElement.hasAttribute(ARG_NAMES)) {
    adviceDefinition.getPropertyValues().addPropertyValue(ARG_NAMES_PROPERTY,adviceElement.getAttribute(ARG_NAMES));
  }
  ConstructorArgumentValues cav=adviceDefinition.getConstructorArgumentValues();
  cav.addIndexedArgumentValue(METHOD_INDEX,methodDef);
  Object pointcut=parsePointcutProperty(adviceElement,parserContext);
  if (pointcut instanceof BeanDefinition) {
    cav.addIndexedArgumentValue(POINTCUT_INDEX,pointcut);
    beanDefinitions.add(pointcut);
  }
 else   if (pointcut instanceof String) {
    RuntimeBeanReference pointcutRef=new RuntimeBeanReference((String)pointcut);
    cav.addIndexedArgumentValue(POINTCUT_INDEX,pointcutRef);
    beanReferences.add(pointcutRef);
  }
  cav.addIndexedArgumentValue(ASPECT_INSTANCE_FACTORY_INDEX,aspectFactoryDef);
  return adviceDefinition;
}
