{
  JmsTemplate template=createTemplate();
  template.setConnectionFactory(mockConnectionFactory);
  String destinationName="testDestination";
  if (useDefaultDestination) {
    if (explicitDestination) {
      template.setDefaultDestination(mockQueue);
    }
 else {
      template.setDefaultDestinationName(destinationName);
    }
  }
  if (disableIdAndTimestamp) {
    template.setMessageIdEnabled(false);
    template.setMessageTimestampEnabled(false);
  }
  MockControl messageProducerControl=MockControl.createControl(MessageProducer.class);
  MessageProducer mockMessageProducer=(MessageProducer)messageProducerControl.getMock();
  MockControl messageControl=MockControl.createControl(TextMessage.class);
  TextMessage mockMessage=(TextMessage)messageControl.getMock();
  mockSession.createProducer(mockQueue);
  sessionControl.setReturnValue(mockMessageProducer);
  mockSession.createTextMessage("just testing");
  sessionControl.setReturnValue(mockMessage);
  if (useTransactedTemplate()) {
    mockSession.commit();
    sessionControl.setVoidCallable(1);
  }
  if (disableIdAndTimestamp) {
    mockMessageProducer.setDisableMessageID(true);
    messageProducerControl.setVoidCallable(1);
    mockMessageProducer.setDisableMessageTimestamp(true);
    messageProducerControl.setVoidCallable(1);
  }
  if (ignoreQOS) {
    mockMessageProducer.send(mockMessage);
  }
 else {
    template.setExplicitQosEnabled(true);
    template.setDeliveryMode(deliveryMode);
    template.setPriority(priority);
    template.setTimeToLive(timeToLive);
    mockMessageProducer.send(mockMessage,deliveryMode,priority,timeToLive);
  }
  messageProducerControl.setVoidCallable(1);
  mockMessageProducer.close();
  messageProducerControl.setVoidCallable(1);
  mockSession.close();
  sessionControl.setVoidCallable(1);
  mockConnection.close();
  connectionControl.setVoidCallable(1);
  messageProducerControl.replay();
  sessionControl.replay();
  connectionControl.replay();
  if (useDefaultDestination) {
    template.send(new MessageCreator(){
      public Message createMessage(      Session session) throws JMSException {
        return session.createTextMessage("just testing");
      }
    }
);
  }
 else {
    if (explicitDestination) {
      template.send(mockQueue,new MessageCreator(){
        public Message createMessage(        Session session) throws JMSException {
          return session.createTextMessage("just testing");
        }
      }
);
    }
 else {
      template.send(destinationName,new MessageCreator(){
        public Message createMessage(        Session session) throws JMSException {
          return session.createTextMessage("just testing");
        }
      }
);
    }
  }
  connectionFactoryControl.verify();
  connectionControl.verify();
  sessionControl.verify();
  messageProducerControl.verify();
}
