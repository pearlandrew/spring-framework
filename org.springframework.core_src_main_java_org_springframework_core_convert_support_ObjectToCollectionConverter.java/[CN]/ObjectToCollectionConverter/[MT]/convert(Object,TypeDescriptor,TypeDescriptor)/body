{
  TypeDescriptor targetElementType=targetType.getElementTypeDescriptor();
  if (sourceType.typeEquals(String.class)) {
    String string=(String)source;
    String[] fields=StringUtils.commaDelimitedListToStringArray(string);
    Collection target=CollectionFactory.createCollection(targetType.getType(),fields.length);
    if (targetElementType == TypeDescriptor.NULL || sourceType.isAssignableTo(targetElementType)) {
      for (int i=0; i < fields.length; i++) {
        target.add(fields[i]);
      }
    }
 else {
      GenericConverter converter=this.conversionService.getConverter(sourceType,targetElementType);
      if (converter == null) {
        throw new ConverterNotFoundException(sourceType,targetElementType);
      }
      for (int i=0; i < fields.length; i++) {
        String sourceElement=fields[i];
        Object targetElement=invokeConverter(converter,sourceElement,sourceType,targetElementType);
        target.add(targetElement);
      }
    }
    return target;
  }
 else {
    Collection target=CollectionFactory.createCollection(targetType.getType(),1);
    if (targetElementType == TypeDescriptor.NULL || sourceType.isAssignableTo(targetElementType)) {
      target.add(source);
    }
 else {
      GenericConverter converter=this.conversionService.getConverter(sourceType,targetElementType);
      if (converter == null) {
        throw new ConverterNotFoundException(sourceType,targetElementType);
      }
      target.add(invokeConverter(converter,source,sourceType,targetElementType));
    }
    return target;
  }
}
