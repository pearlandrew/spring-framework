{
  if (event.getApplicationContext() != this.applicationContext) {
    return;
  }
  if (this.scheduler != null) {
    this.registrar.setScheduler(this.scheduler);
  }
  Map<String,SchedulingConfigurer> configurers=this.applicationContext.getBeansOfType(SchedulingConfigurer.class);
  for (  SchedulingConfigurer configurer : configurers.values()) {
    configurer.configureTasks(this.registrar);
  }
  if (this.registrar.hasTasks() && this.registrar.getScheduler() == null) {
    Map<String,? super Object> schedulers=new HashMap<String,Object>();
    schedulers.putAll(this.applicationContext.getBeansOfType(TaskScheduler.class));
    schedulers.putAll(this.applicationContext.getBeansOfType(ScheduledExecutorService.class));
    if (schedulers.size() == 0) {
    }
 else     if (schedulers.size() == 1) {
      this.registrar.setScheduler(schedulers.values().iterator().next());
    }
 else     if (schedulers.size() >= 2) {
      throw new IllegalStateException("More than one TaskScheduler and/or ScheduledExecutorService  " + "exist within the context. Remove all but one of the beans; or " + "implement the SchedulingConfigurer interface and call "+ "ScheduledTaskRegistrar#setScheduler explicitly within the "+ "configureTasks() callback. Found the following beans: "+ schedulers.keySet());
    }
  }
  this.registrar.afterPropertiesSet();
}
