{
  given(pmf.getPersistenceManager()).willReturn(pm);
  given(pm.currentTransaction()).willReturn(tx);
  given(tx.isActive()).willReturn(true);
  PlatformTransactionManager tm=new JdoTransactionManager(pmf);
  TransactionTemplate tt=new TransactionTemplate(tm);
  assertTrue("Hasn't thread pm",!TransactionSynchronizationManager.hasResource(pmf));
  tt.execute(new TransactionCallback(){
    @Override public Object doInTransaction(    TransactionStatus status){
      assertTrue("Has thread pm",TransactionSynchronizationManager.hasResource(pmf));
      JdoTemplate jt=new JdoTemplate(pmf);
      jt.execute(new JdoCallback(){
        @Override public Object doInJdo(        PersistenceManager pm2){
          pm2.flush();
          return null;
        }
      }
);
      status.setRollbackOnly();
      return null;
    }
  }
);
  assertTrue("Hasn't thread pm",!TransactionSynchronizationManager.hasResource(pmf));
  verify(pm).flush();
  verify(pm).close();
  verify(tx).begin();
  verify(tx).rollback();
}
