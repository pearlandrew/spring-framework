{
  given(pmf.getPersistenceManager()).willReturn(pm);
  given(pm.currentTransaction()).willReturn(tx);
  given(tx.isActive()).willReturn(true);
  PlatformTransactionManager tm=new JdoTransactionManager(pmf);
  TransactionTemplate tt=new TransactionTemplate(tm);
  assertTrue("Hasn't thread pm",!TransactionSynchronizationManager.hasResource(pmf));
  assertTrue("JTA synchronizations not active",!TransactionSynchronizationManager.isSynchronizationActive());
  try {
    tt.execute(new TransactionCallback(){
      @Override public Object doInTransaction(      TransactionStatus status){
        assertTrue("Has thread pm",TransactionSynchronizationManager.hasResource(pmf));
        PersistenceManagerFactoryUtils.getPersistenceManager(pmf,true);
        throw new RuntimeException("application exception");
      }
    }
);
    fail("Should have thrown RuntimeException");
  }
 catch (  RuntimeException ex) {
  }
  assertTrue("Hasn't thread pm",!TransactionSynchronizationManager.hasResource(pmf));
  assertTrue("JTA synchronizations not active",!TransactionSynchronizationManager.isSynchronizationActive());
  verify(pm).close();
  verify(tx).begin();
  verify(tx).rollback();
}
