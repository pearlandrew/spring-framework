{
  given(pm.currentTransaction()).willReturn(tx);
  PlatformTransactionManager tm=new JdoTransactionManager(pmf);
  TransactionTemplate tt=new TransactionTemplate(tm);
  final List l=new ArrayList();
  l.add("test");
  assertTrue("JTA synchronizations not active",!TransactionSynchronizationManager.isSynchronizationActive());
  TransactionSynchronizationManager.bindResource(pmf,new PersistenceManagerHolder(pm));
  assertTrue("Has thread pm",TransactionSynchronizationManager.hasResource(pmf));
  Object result=tt.execute(new TransactionCallback(){
    @Override public Object doInTransaction(    TransactionStatus status){
      assertTrue("Has thread pm",TransactionSynchronizationManager.hasResource(pmf));
      JdoTemplate jt=new JdoTemplate(pmf);
      return jt.execute(new JdoCallback(){
        @Override public Object doInJdo(        PersistenceManager pm){
          return l;
        }
      }
);
    }
  }
);
  assertTrue("Correct result list",result == l);
  assertTrue("Has thread pm",TransactionSynchronizationManager.hasResource(pmf));
  TransactionSynchronizationManager.unbindResource(pmf);
  assertTrue("JTA synchronizations not active",!TransactionSynchronizationManager.isSynchronizationActive());
  verify(tx).begin();
  verify(tx).commit();
}
