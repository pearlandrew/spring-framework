{
  pmf.getConnectionFactory();
  pmfControl.setReturnValue(null,2);
  pmf.getPersistenceManager();
  pmfControl.setReturnValue(pm,1);
  pm.currentTransaction();
  pmControl.setReturnValue(tx,5);
  pm.flush();
  pmControl.setVoidCallable(1);
  pm.close();
  pmControl.setVoidCallable(1);
  tx.begin();
  txControl.setVoidCallable(1);
  pmfControl.replay();
  pmControl.replay();
  txControl.replay();
  PlatformTransactionManager tm=new JdoTransactionManager(pmf);
  final TransactionTemplate tt=new TransactionTemplate(tm);
  final List l=new ArrayList();
  l.add("test");
  try {
    tt.execute(new TransactionCallback(){
      public Object doInTransaction(      TransactionStatus status){
        txControl.reset();
        tx.isActive();
        txControl.setReturnValue(true,1);
        tx.setRollbackOnly();
        txControl.setVoidCallable(1);
        tx.getRollbackOnly();
        txControl.setReturnValue(true,1);
        tx.commit();
        txControl.setThrowable(new JDOFatalDataStoreException(),1);
        tx.isActive();
        txControl.setReturnValue(false,1);
        txControl.replay();
        return tt.execute(new TransactionCallback(){
          public Object doInTransaction(          TransactionStatus status){
            JdoTemplate jt=new JdoTemplate(pmf);
            jt.execute(new JdoCallback(){
              public Object doInJdo(              PersistenceManager pm2){
                pm2.flush();
                return l;
              }
            }
);
            status.setRollbackOnly();
            return null;
          }
        }
);
      }
    }
);
    fail("Should have thrown JdoResourceFailureException");
  }
 catch (  JdoResourceFailureException ex) {
  }
}
