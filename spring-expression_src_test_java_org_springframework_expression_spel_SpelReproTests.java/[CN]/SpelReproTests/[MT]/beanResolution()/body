{
  StandardEvaluationContext eContext=new StandardEvaluationContext(new XX());
  Expression expr=null;
  try {
    expr=new SpelExpressionParser().parseRaw("@foo");
    assertEquals("custard",expr.getValue(eContext,String.class));
  }
 catch (  SpelEvaluationException see) {
    assertEquals(SpelMessage.NO_BEAN_RESOLVER_REGISTERED,see.getMessageCode());
    assertEquals("foo",see.getInserts()[0]);
  }
  eContext.setBeanResolver(new MyBeanResolver());
  expr=new SpelExpressionParser().parseRaw("@foo");
  assertEquals("custard",expr.getValue(eContext,String.class));
  expr=new SpelExpressionParser().parseRaw("@bar");
  assertEquals(null,expr.getValue(eContext,String.class));
  expr=new SpelExpressionParser().parseRaw("@goo");
  try {
    assertEquals(null,expr.getValue(eContext,String.class));
  }
 catch (  SpelEvaluationException see) {
    assertEquals(SpelMessage.EXCEPTION_DURING_BEAN_RESOLUTION,see.getMessageCode());
    assertEquals("goo",see.getInserts()[0]);
    assertTrue(see.getCause() instanceof AccessException);
    assertTrue(see.getCause().getMessage().startsWith("DONT"));
  }
  expr=new SpelExpressionParser().parseRaw("@'foo.bar'");
  assertEquals("trouble",expr.getValue(eContext,String.class));
  try {
    expr=new SpelExpressionParser().parseRaw("@378");
    assertEquals("trouble",expr.getValue(eContext,String.class));
  }
 catch (  SpelParseException spe) {
    assertEquals(SpelMessage.INVALID_BEAN_REFERENCE,spe.getMessageCode());
  }
}
