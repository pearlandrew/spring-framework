{
  if (this.subscriptionClosed || this.draining) {
    return;
  }
  if (0 == BackpressureUtils.getAndSub(DEMAND,this,1)) {
    return;
  }
  this.draining=true;
  if (this.channel == null) {
    this.channel=exchange.getRequestChannel();
    if (this.channel == null) {
      if (exchange.isRequestComplete()) {
        return;
      }
 else {
        throw new IllegalStateException("Another party already acquired the channel!");
      }
    }
  }
  if (this.pooledBuffer == null) {
    this.pooledBuffer=exchange.getConnection().getByteBufferPool().allocate();
  }
 else {
    this.pooledBuffer.getBuffer().clear();
  }
  try {
    ByteBuffer buffer=this.pooledBuffer.getBuffer();
    int count;
    do {
      count=this.channel.read(buffer);
      if (count == 0) {
        this.channel.getReadSetter().set(this);
        this.channel.resumeReads();
      }
 else       if (count == -1) {
        if (buffer.position() > 0) {
          doOnNext(buffer);
        }
        doOnComplete();
      }
 else {
        if (buffer.remaining() == 0) {
          if (this.demand == 0) {
            this.channel.suspendReads();
          }
          doOnNext(buffer);
          if (this.demand > 0) {
            scheduleNextMessage();
          }
          break;
        }
      }
    }
 while (count > 0);
  }
 catch (  IOException e) {
    doOnError(e);
  }
}
