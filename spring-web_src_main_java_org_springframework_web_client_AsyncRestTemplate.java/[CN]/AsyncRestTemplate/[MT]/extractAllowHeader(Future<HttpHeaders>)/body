{
  return new Future<Set<HttpMethod>>(){
    @Override public boolean cancel(    boolean mayInterruptIfRunning){
      return headersFuture.cancel(mayInterruptIfRunning);
    }
    @Override public boolean isCancelled(){
      return headersFuture.isCancelled();
    }
    @Override public boolean isDone(){
      return headersFuture.isDone();
    }
    @Override public Set<HttpMethod> get() throws InterruptedException, ExecutionException {
      HttpHeaders headers=headersFuture.get();
      return headers.getAllow();
    }
    @Override public Set<HttpMethod> get(    long timeout,    TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException {
      HttpHeaders headers=headersFuture.get(timeout,unit);
      return headers.getAllow();
    }
  }
;
}
