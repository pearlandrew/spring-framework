{
  if (logger.isDebugEnabled()) {
    String requestUri=urlPathHelper.getRequestUri(request);
    logger.debug("DispatcherServlet with name '" + getServletName() + "' processing "+ request.getMethod()+ " request for ["+ requestUri+ "]");
  }
  Map<String,Object> attributesSnapshot=null;
  if (WebUtils.isIncludeRequest(request)) {
    logger.debug("Taking snapshot of request attributes before include");
    attributesSnapshot=new HashMap<String,Object>();
    Enumeration<?> attrNames=request.getAttributeNames();
    while (attrNames.hasMoreElements()) {
      String attrName=(String)attrNames.nextElement();
      if (this.cleanupAfterInclude || attrName.startsWith("org.springframework.web.servlet")) {
        attributesSnapshot.put(attrName,request.getAttribute(attrName));
      }
    }
  }
  request.setAttribute(WEB_APPLICATION_CONTEXT_ATTRIBUTE,getWebApplicationContext());
  request.setAttribute(LOCALE_RESOLVER_ATTRIBUTE,this.localeResolver);
  request.setAttribute(THEME_RESOLVER_ATTRIBUTE,this.themeResolver);
  request.setAttribute(THEME_SOURCE_ATTRIBUTE,getThemeSource());
  request.setAttribute(OUTPUT_FLASH_MAP_ATTRIBUTE,new FlashMap());
  request.setAttribute(FLASH_MAP_MANAGER_ATTRIBUTE,this.flashMapManager);
  Map<String,?> flashMap=this.flashMapManager.getFlashMapForRequest(request);
  if (flashMap != null) {
    request.setAttribute(INPUT_FLASH_MAP_ATTRIBUTE,flashMap);
  }
  try {
    doDispatch(request,response);
  }
  finally {
    if (attributesSnapshot != null) {
      restoreAttributesAfterInclude(request,attributesSnapshot);
    }
  }
}
