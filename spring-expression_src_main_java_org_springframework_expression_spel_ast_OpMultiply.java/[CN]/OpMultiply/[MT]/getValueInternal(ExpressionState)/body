{
  Object leftOperand=getLeftOperand().getValueInternal(state).getValue();
  Object rightOperand=getRightOperand().getValueInternal(state).getValue();
  if (leftOperand instanceof Number && rightOperand instanceof Number) {
    Number leftNumber=(Number)leftOperand;
    Number rightNumber=(Number)rightOperand;
    if (leftNumber instanceof BigDecimal || rightNumber instanceof BigDecimal) {
      BigDecimal leftBigDecimal=NumberUtils.convertNumberToTargetClass(leftNumber,BigDecimal.class);
      BigDecimal rightBigDecimal=NumberUtils.convertNumberToTargetClass(rightNumber,BigDecimal.class);
      return new TypedValue(leftBigDecimal.multiply(rightBigDecimal));
    }
    if (leftNumber instanceof Double || rightNumber instanceof Double) {
      if (leftNumber instanceof Double && rightNumber instanceof Double) {
        this.exitTypeDescriptor="D";
      }
      return new TypedValue(leftNumber.doubleValue() * rightNumber.doubleValue());
    }
    if (leftNumber instanceof Float || rightNumber instanceof Float) {
      if (leftNumber instanceof Float && rightNumber instanceof Float) {
        this.exitTypeDescriptor="F";
      }
      return new TypedValue(leftNumber.floatValue() * rightNumber.floatValue());
    }
    if (leftNumber instanceof Long || rightNumber instanceof Long) {
      if (leftNumber instanceof Long && rightNumber instanceof Long) {
        this.exitTypeDescriptor="J";
      }
      return new TypedValue(leftNumber.longValue() * rightNumber.longValue());
    }
    if (leftNumber instanceof Integer && rightNumber instanceof Integer) {
      this.exitTypeDescriptor="I";
    }
    return new TypedValue(leftNumber.intValue() * rightNumber.intValue());
  }
 else   if (leftOperand instanceof String && rightOperand instanceof Integer) {
    int repeats=(Integer)rightOperand;
    StringBuilder result=new StringBuilder();
    for (int i=0; i < repeats; i++) {
      result.append(leftOperand);
    }
    return new TypedValue(result.toString());
  }
  return state.operate(Operation.MULTIPLY,leftOperand,rightOperand);
}
