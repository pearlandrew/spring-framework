{
  String cache=element.getAttribute("cache");
  String[] localCaches=caches;
  if (StringUtils.hasText(cache)) {
    localCaches=StringUtils.commaDelimitedListToStringArray(cache.trim());
  }
 else {
    if (caches == null) {
      readerCtx.error("No cache specified specified for " + element.getNodeName(),element);
    }
  }
  op.setCacheNames(localCaches);
  op.setKey(getAttributeValue(element,"key",this.key));
  op.setKeyGenerator(getAttributeValue(element,"key-generator",this.keyGenerator));
  op.setCondition(getAttributeValue(element,"condition",this.condition));
  if (StringUtils.hasText(op.getKey()) && StringUtils.hasText(op.getKeyGenerator())) {
    throw new IllegalStateException("Invalid cache advice configuration on '" + element.toString() + "'. Both 'key' and 'keyGenerator' attributes have been set. "+ "These attributes are mutually exclusive: either set the SpEL expression used to"+ "compute the key at runtime or set the name of the KeyGenerator bean to use.");
  }
  return op;
}
