{
  Field field;
  field=ReflectionUtils.findField(TestBeanSubclassWithPublicField.class,"publicField",String.class);
  assertNotNull(field);
  assertEquals("publicField",field.getName());
  assertEquals(String.class,field.getType());
  assertTrue("Field should be public.",Modifier.isPublic(field.getModifiers()));
  field=ReflectionUtils.findField(TestBeanSubclassWithNewField.class,"prot",String.class);
  assertNotNull(field);
  assertEquals("prot",field.getName());
  assertEquals(String.class,field.getType());
  assertTrue("Field should be protected.",Modifier.isProtected(field.getModifiers()));
  field=ReflectionUtils.findField(TestBeanSubclassWithNewField.class,"name",String.class);
  assertNotNull(field);
  assertEquals("name",field.getName());
  assertEquals(String.class,field.getType());
  assertTrue("Field should be private.",Modifier.isPrivate(field.getModifiers()));
}
