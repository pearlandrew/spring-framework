{
  final MockServletContext servletContext=new MockServletContext();
  final MockServletConfig servletConfig=new MockServletConfig(servletContext);
  @SuppressWarnings("serial") DispatcherServlet servlet=new DispatcherServlet(){
    @Override protected WebApplicationContext createWebApplicationContext(    WebApplicationContext parent){
      GenericWebApplicationContext wac=new GenericWebApplicationContext();
      wac.setServletContext(servletContext);
      RootBeanDefinition bd=new RootBeanDefinition(MyConstrainedParameterDispatchingController.class);
      bd.setScope(WebApplicationContext.SCOPE_REQUEST);
      wac.registerBeanDefinition("controller",bd);
      wac.refresh();
      return wac;
    }
  }
;
  servlet.init(servletConfig);
  MockHttpServletRequest request=new MockHttpServletRequest(servletContext,"GET","/myPath.do");
  request.addParameter("view","other");
  MockHttpServletResponse response=new MockHttpServletResponse();
  try {
    servlet.service(request,response);
    fail("Should have failed because of type-level parameter constraint not met");
  }
 catch (  ServletException ex) {
    ex.printStackTrace();
  }
  request=new MockHttpServletRequest(servletContext,"GET","/myPath.do");
  request.addParameter("active","true");
  request.addParameter("view","other");
  response=new MockHttpServletResponse();
  servlet.service(request,response);
  assertEquals("myOtherView",response.getContentAsString());
  request=new MockHttpServletRequest(servletContext,"GET","/myPath.do");
  request.addParameter("view","my");
  request.addParameter("lang","de");
  response=new MockHttpServletResponse();
  try {
    servlet.service(request,response);
    fail("Should have failed because of type-level parameter constraint not met");
  }
 catch (  ServletException ex) {
    ex.printStackTrace();
  }
  request=new MockHttpServletRequest(servletContext,"GET","/myPath.do");
  request.addParameter("view","my");
  request.addParameter("lang","de");
  request.addParameter("active","true");
  response=new MockHttpServletResponse();
  servlet.service(request,response);
  assertEquals("myLangView",response.getContentAsString());
}
