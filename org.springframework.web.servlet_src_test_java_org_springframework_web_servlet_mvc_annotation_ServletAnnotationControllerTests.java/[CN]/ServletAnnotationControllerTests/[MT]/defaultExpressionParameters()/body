{
  servlet=new DispatcherServlet(){
    @Override protected WebApplicationContext createWebApplicationContext(    WebApplicationContext parent){
      GenericWebApplicationContext wac=new GenericWebApplicationContext();
      wac.registerBeanDefinition("controller",new RootBeanDefinition(DefaultExpressionValueParamController.class));
      RootBeanDefinition ppc=new RootBeanDefinition(PropertyPlaceholderConfigurer.class);
      ppc.getPropertyValues().add("properties","myKey=foo");
      wac.registerBeanDefinition("ppc",ppc);
      wac.refresh();
      return wac;
    }
  }
;
  servlet.init(new MockServletConfig());
  MockHttpServletRequest request=new MockHttpServletRequest("GET","/myApp/myPath.do");
  request.setContextPath("/myApp");
  MockHttpServletResponse response=new MockHttpServletResponse();
  System.setProperty("myHeader","bar");
  try {
    servlet.service(request,response);
  }
  finally {
    System.clearProperty("myHeader");
  }
  assertEquals("foo-bar-/myApp",response.getContentAsString());
}
