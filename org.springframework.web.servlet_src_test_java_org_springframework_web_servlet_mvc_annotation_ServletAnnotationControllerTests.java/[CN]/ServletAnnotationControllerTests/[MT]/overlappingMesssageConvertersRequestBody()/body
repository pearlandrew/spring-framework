{
  @SuppressWarnings("serial") DispatcherServlet servlet=new DispatcherServlet(){
    @Override protected WebApplicationContext createWebApplicationContext(    WebApplicationContext parent){
      GenericWebApplicationContext wac=new GenericWebApplicationContext();
      wac.registerBeanDefinition("controller",new RootBeanDefinition(RequestBodyController.class));
      RootBeanDefinition adapterDef=new RootBeanDefinition(AnnotationMethodHandlerAdapter.class);
      List<HttpMessageConverter> messageConverters=new ArrayList<HttpMessageConverter>();
      messageConverters.add(new StringHttpMessageConverter());
      messageConverters.add(new SimpleMessageConverter(new MediaType("application","json"),MediaType.ALL));
      adapterDef.getPropertyValues().add("messageConverters",messageConverters);
      wac.registerBeanDefinition("handlerAdapter",adapterDef);
      wac.refresh();
      return wac;
    }
  }
;
  servlet.init(new MockServletConfig());
  MockHttpServletRequest request=new MockHttpServletRequest("PUT","/something");
  request.setContent("Hello World".getBytes("UTF-8"));
  request.addHeader("Content-Type","text/plain; charset=utf-8");
  request.addHeader("Accept","application/json, text/javascript, */*");
  MockHttpServletResponse response=new MockHttpServletResponse();
  servlet.service(request,response);
  assertEquals("Invalid response status code","application/json",response.getHeader("Content-Type"));
}
