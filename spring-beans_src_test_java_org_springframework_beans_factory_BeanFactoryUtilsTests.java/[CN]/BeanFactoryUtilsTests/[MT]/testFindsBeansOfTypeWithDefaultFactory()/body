{
  Object test3=this.listableBeanFactory.getBean("test3");
  Object test=this.listableBeanFactory.getBean("test");
  TestBean t1=new TestBean();
  TestBean t2=new TestBean();
  DummyFactory t3=new DummyFactory();
  DummyFactory t4=new DummyFactory();
  t4.setSingleton(false);
  this.listableBeanFactory.registerSingleton("t1",t1);
  this.listableBeanFactory.registerSingleton("t2",t2);
  this.listableBeanFactory.registerSingleton("t3",t3);
  this.listableBeanFactory.registerSingleton("t4",t4);
  Map<?,?> beans=BeanFactoryUtils.beansOfTypeIncludingAncestors(this.listableBeanFactory,ITestBean.class,true,false);
  assertEquals(6,beans.size());
  assertEquals(test3,beans.get("test3"));
  assertEquals(test,beans.get("test"));
  assertEquals(t1,beans.get("t1"));
  assertEquals(t2,beans.get("t2"));
  assertEquals(t3.getObject(),beans.get("t3"));
  assertTrue(beans.get("t4") instanceof TestBean);
  beans=BeanFactoryUtils.beansOfTypeIncludingAncestors(this.listableBeanFactory,ITestBean.class,false,true);
  Object testFactory1=this.listableBeanFactory.getBean("testFactory1");
  assertEquals(5,beans.size());
  assertEquals(test,beans.get("test"));
  assertEquals(testFactory1,beans.get("testFactory1"));
  assertEquals(t1,beans.get("t1"));
  assertEquals(t2,beans.get("t2"));
  assertEquals(t3.getObject(),beans.get("t3"));
  beans=BeanFactoryUtils.beansOfTypeIncludingAncestors(this.listableBeanFactory,ITestBean.class,true,true);
  assertEquals(8,beans.size());
  assertEquals(test3,beans.get("test3"));
  assertEquals(test,beans.get("test"));
  assertEquals(testFactory1,beans.get("testFactory1"));
  assertTrue(beans.get("testFactory2") instanceof TestBean);
  assertEquals(t1,beans.get("t1"));
  assertEquals(t2,beans.get("t2"));
  assertEquals(t3.getObject(),beans.get("t3"));
  assertTrue(beans.get("t4") instanceof TestBean);
  beans=BeanFactoryUtils.beansOfTypeIncludingAncestors(this.listableBeanFactory,DummyFactory.class,true,true);
  assertEquals(4,beans.size());
  assertEquals(this.listableBeanFactory.getBean("&testFactory1"),beans.get("&testFactory1"));
  assertEquals(this.listableBeanFactory.getBean("&testFactory2"),beans.get("&testFactory2"));
  assertEquals(t3,beans.get("&t3"));
  assertEquals(t4,beans.get("&t4"));
  beans=BeanFactoryUtils.beansOfTypeIncludingAncestors(this.listableBeanFactory,FactoryBean.class,true,true);
  assertEquals(4,beans.size());
  assertEquals(this.listableBeanFactory.getBean("&testFactory1"),beans.get("&testFactory1"));
  assertEquals(this.listableBeanFactory.getBean("&testFactory2"),beans.get("&testFactory2"));
  assertEquals(t3,beans.get("&t3"));
  assertEquals(t4,beans.get("&t4"));
}
