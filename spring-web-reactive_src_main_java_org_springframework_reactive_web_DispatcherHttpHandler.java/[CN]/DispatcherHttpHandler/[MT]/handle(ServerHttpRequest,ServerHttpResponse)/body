{
  Object handler=getHandler(request);
  if (handler == null) {
    response.setStatusCode(HttpStatus.NOT_FOUND);
    return Publishers.complete();
  }
  HandlerAdapter handlerAdapter=getHandlerAdapter(handler);
  final Publisher<HandlerResult> resultPublisher=handlerAdapter.handle(request,response,handler);
  return new Publisher<Void>(){
    @Override public void subscribe(    final Subscriber<? super Void> subscriber){
      resultPublisher.subscribe(new Subscriber<HandlerResult>(){
        @Override public void onSubscribe(        Subscription subscription){
          subscription.request(Long.MAX_VALUE);
        }
        @Override public void onNext(        HandlerResult result){
          for (          HandlerResultHandler resultHandler : resultHandlers) {
            if (resultHandler.supports(result)) {
              Publisher<Void> publisher=resultHandler.handleResult(request,response,result);
              publisher.subscribe(new Subscriber<Void>(){
                @Override public void onSubscribe(                Subscription subscription){
                  subscription.request(Long.MAX_VALUE);
                }
                @Override public void onNext(                Void aVoid){
                }
                @Override public void onError(                Throwable error){
                  subscriber.onError(error);
                }
                @Override public void onComplete(){
                  subscriber.onComplete();
                }
              }
);
            }
          }
        }
        @Override public void onError(        Throwable error){
          subscriber.onError(error);
        }
        @Override public void onComplete(){
        }
      }
);
    }
  }
;
}
