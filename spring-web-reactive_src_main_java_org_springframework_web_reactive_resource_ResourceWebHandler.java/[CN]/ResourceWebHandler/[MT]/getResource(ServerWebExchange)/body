{
  String attrName=HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE;
  Optional<String> optional=exchange.getAttribute(attrName);
  if (!optional.isPresent()) {
    throw new IllegalStateException("Required request attribute '" + attrName + "' is not set");
  }
  String path=processPath(optional.get());
  if (!StringUtils.hasText(path) || isInvalidPath(path)) {
    if (logger.isTraceEnabled()) {
      logger.trace("Ignoring invalid resource path [" + path + "]");
    }
    return null;
  }
  if (path.contains("%")) {
    try {
      if (isInvalidPath(URLDecoder.decode(path,"UTF-8"))) {
        if (logger.isTraceEnabled()) {
          logger.trace("Ignoring invalid resource path with escape sequences [" + path + "].");
        }
        return null;
      }
    }
 catch (    IllegalArgumentException ex) {
    }
  }
  ResourceResolverChain resolveChain=new DefaultResourceResolverChain(getResourceResolvers());
  Resource resource=resolveChain.resolveResource(exchange,path,getLocations());
  if (resource == null || getResourceTransformers().isEmpty()) {
    return resource;
  }
  ResourceTransformerChain transformChain=new DefaultResourceTransformerChain(resolveChain,getResourceTransformers());
  resource=transformChain.transform(exchange,resource);
  return resource;
}
