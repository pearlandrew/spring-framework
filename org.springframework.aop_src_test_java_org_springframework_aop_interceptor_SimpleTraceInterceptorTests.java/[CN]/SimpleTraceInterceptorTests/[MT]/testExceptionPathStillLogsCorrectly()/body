{
  Log log=createMock(Log.class);
  MethodInvocation mi=createMock(MethodInvocation.class);
  Method toString=String.class.getMethod("toString",new Class[]{});
  expect(mi.getMethod()).andReturn(toString);
  expect(mi.getThis()).andReturn(this);
  log.trace(isA(String.class));
  IllegalArgumentException exception=new IllegalArgumentException();
  expect(mi.proceed()).andThrow(exception);
  log.trace(isA(String.class));
  replay(log);
  replay(mi);
  final SimpleTraceInterceptor interceptor=new SimpleTraceInterceptor(true);
  try {
    interceptor.invokeUnderTrace(mi,log);
    fail("Must have propagated the IllegalArgumentException.");
  }
 catch (  IllegalArgumentException expected) {
  }
  verify(log);
  verify(mi);
}
