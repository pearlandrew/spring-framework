{
  if (this.advisorChainInitialized) {
    return;
  }
  if (!ObjectUtils.isEmpty(this.interceptorNames)) {
    if (this.beanFactory == null) {
      throw new IllegalStateException("No BeanFactory available anymore (probably due to serialization) " + "- cannot resolve interceptor names " + Arrays.asList(this.interceptorNames));
    }
    if (this.interceptorNames[this.interceptorNames.length - 1].endsWith(GLOBAL_SUFFIX) && this.targetName == null && this.targetSource == EMPTY_TARGET_SOURCE) {
      throw new AopConfigException("Target required after globals");
    }
    for (int i=0; i < this.interceptorNames.length; i++) {
      String name=this.interceptorNames[i];
      if (logger.isTraceEnabled()) {
        logger.trace("Configuring advisor or advice '" + name + "'");
      }
      if (name.endsWith(GLOBAL_SUFFIX)) {
        if (!(this.beanFactory instanceof ListableBeanFactory)) {
          throw new AopConfigException("Can only use global advisors or interceptors with a ListableBeanFactory");
        }
        addGlobalAdvisor((ListableBeanFactory)this.beanFactory,name.substring(0,name.length() - GLOBAL_SUFFIX.length()));
      }
 else {
        Object advice=null;
        if (this.singleton || this.beanFactory.isSingleton(this.interceptorNames[i])) {
          advice=this.beanFactory.getBean(this.interceptorNames[i]);
        }
 else {
          advice=new PrototypePlaceholderAdvisor(this.interceptorNames[i]);
        }
        addAdvisorOnChainCreation(advice,this.interceptorNames[i]);
      }
    }
  }
  this.advisorChainInitialized=true;
}
