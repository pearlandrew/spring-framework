{
  String[] globalAdvisorNames=BeanFactoryUtils.beanNamesForTypeIncludingAncestors(beanFactory,Advisor.class);
  String[] globalInterceptorNames=BeanFactoryUtils.beanNamesForTypeIncludingAncestors(beanFactory,Interceptor.class);
  List<Object> beans=new ArrayList<Object>(globalAdvisorNames.length + globalInterceptorNames.length);
  Map<Object,String> names=new HashMap<Object,String>(beans.size());
  for (  String name : globalAdvisorNames) {
    Object bean=beanFactory.getBean(name);
    beans.add(bean);
    names.put(bean,name);
  }
  for (  String name : globalInterceptorNames) {
    Object bean=beanFactory.getBean(name);
    beans.add(bean);
    names.put(bean,name);
  }
  Collections.sort(beans,new OrderComparator());
  for (  Object bean : beans) {
    String name=names.get(bean);
    if (name.startsWith(prefix)) {
      addAdvisorOnChainCreation(bean,name);
    }
  }
}
