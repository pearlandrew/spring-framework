{
  String[] globalAdvisorNames=BeanFactoryUtils.beanNamesForTypeIncludingAncestors(beanFactory,Advisor.class);
  String[] globalInterceptorNames=BeanFactoryUtils.beanNamesForTypeIncludingAncestors(beanFactory,Interceptor.class);
  List beans=new ArrayList(globalAdvisorNames.length + globalInterceptorNames.length);
  Map names=new HashMap();
  for (int i=0; i < globalAdvisorNames.length; i++) {
    String name=globalAdvisorNames[i];
    Object bean=beanFactory.getBean(name);
    beans.add(bean);
    names.put(bean,name);
  }
  for (int i=0; i < globalInterceptorNames.length; i++) {
    String name=globalInterceptorNames[i];
    Object bean=beanFactory.getBean(name);
    beans.add(bean);
    names.put(bean,name);
  }
  Collections.sort(beans,new OrderComparator());
  for (Iterator it=beans.iterator(); it.hasNext(); ) {
    Object bean=it.next();
    String name=(String)names.get(bean);
    if (name.startsWith(prefix)) {
      addAdvisorOnChainCreation(bean,name);
    }
  }
}
