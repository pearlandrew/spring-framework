{
  if (prefix == null) {
    prefix="";
  }
  int beanCount=0;
  for (  Object key : map.keySet()) {
    if (!(key instanceof String)) {
      throw new IllegalArgumentException("Illegal key [" + key + "]: only Strings allowed");
    }
    String keyString=(String)key;
    if (keyString.startsWith(prefix)) {
      String nameAndProperty=keyString.substring(prefix.length());
      int sepIdx=-1;
      int propKeyIdx=nameAndProperty.indexOf(PropertyAccessor.PROPERTY_KEY_PREFIX);
      if (propKeyIdx != -1) {
        sepIdx=nameAndProperty.lastIndexOf(SEPARATOR,propKeyIdx);
      }
 else {
        sepIdx=nameAndProperty.lastIndexOf(SEPARATOR);
      }
      if (sepIdx != -1) {
        String beanName=nameAndProperty.substring(0,sepIdx);
        if (logger.isDebugEnabled()) {
          logger.debug("Found bean name '" + beanName + "'");
        }
        if (!getRegistry().containsBeanDefinition(beanName)) {
          registerBeanDefinition(beanName,map,prefix + beanName,resourceDescription);
          ++beanCount;
        }
      }
 else {
        if (logger.isDebugEnabled()) {
          logger.debug("Invalid bean name and property [" + nameAndProperty + "]");
        }
      }
    }
  }
  return beanCount;
}
