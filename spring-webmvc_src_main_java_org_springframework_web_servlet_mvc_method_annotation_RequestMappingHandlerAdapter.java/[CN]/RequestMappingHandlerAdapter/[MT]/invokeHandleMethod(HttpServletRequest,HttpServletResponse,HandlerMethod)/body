{
  ServletWebRequest webRequest=new ServletWebRequest(request,response);
  WebDataBinderFactory binderFactory=getDataBinderFactory(handlerMethod);
  ModelFactory modelFactory=getModelFactory(handlerMethod,binderFactory);
  ServletInvocableHandlerMethod requestMappingMethod=createRequestMappingMethod(handlerMethod,binderFactory);
  ModelAndViewContainer mavContainer=new ModelAndViewContainer();
  mavContainer.addAllAttributes(RequestContextUtils.getInputFlashMap(request));
  modelFactory.initModel(webRequest,mavContainer,requestMappingMethod);
  mavContainer.setIgnoreDefaultModelOnRedirect(this.ignoreDefaultModelOnRedirect);
  AsyncExecutionChain chain=AsyncExecutionChain.getForCurrentRequest(request);
  chain.setAsyncWebRequest(createAsyncWebRequest(request,response));
  chain.setTaskExecutor(this.taskExecutor);
  chain.push(getAsyncCallable(mavContainer,modelFactory,webRequest));
  try {
    requestMappingMethod.invokeAndHandle(webRequest,mavContainer);
  }
  finally {
    if (!chain.pop()) {
      return null;
    }
  }
  return getModelAndView(mavContainer,modelFactory,webRequest);
}
