{
  Class<?> handlerType=handlerMethod.getBeanType();
  Set<Method> methods=this.initBinderCache.get(handlerType);
  if (methods == null) {
    methods=MethodIntrospector.selectMethods(handlerType,INIT_BINDER_METHODS);
    this.initBinderCache.put(handlerType,methods);
  }
  List<InvocableHandlerMethod> initBinderMethods=new ArrayList<InvocableHandlerMethod>();
  for (  Entry<ControllerAdviceBean,Set<Method>> entry : this.initBinderAdviceCache.entrySet()) {
    if (entry.getKey().isApplicableToBeanType(handlerType)) {
      Object bean=entry.getKey().resolveBean();
      for (      Method method : entry.getValue()) {
        initBinderMethods.add(createInitBinderMethod(bean,method));
      }
    }
  }
  for (  Method method : methods) {
    Object bean=handlerMethod.getBean();
    initBinderMethods.add(createInitBinderMethod(bean,method));
  }
  return createDataBinderFactory(initBinderMethods);
}
