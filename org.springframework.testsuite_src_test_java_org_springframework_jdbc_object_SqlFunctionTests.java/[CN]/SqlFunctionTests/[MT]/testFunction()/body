{
  ctrlResultSetMetaData=MockControl.createControl(ResultSetMetaData.class);
  mockResultSetMetaData=(ResultSetMetaData)ctrlResultSetMetaData.getMock();
  mockResultSetMetaData.getColumnCount();
  ctrlResultSetMetaData.setReturnValue(1);
  mockResultSet.getMetaData();
  ctrlResultSet.setReturnValue(mockResultSetMetaData,1);
  mockResultSet.next();
  ctrlResultSet.setReturnValue(true);
  mockResultSet.getObject(1);
  ctrlResultSet.setReturnValue(new Integer(14));
  mockResultSet.next();
  ctrlResultSet.setReturnValue(false);
  mockResultSet.close();
  ctrlResultSet.setVoidCallable();
  mockPreparedStatement.executeQuery();
  ctrlPreparedStatement.setReturnValue(mockResultSet);
  if (debugEnabled) {
    mockPreparedStatement.getWarnings();
    ctrlPreparedStatement.setReturnValue(null);
  }
  mockPreparedStatement.close();
  ctrlPreparedStatement.setVoidCallable();
  mockConnection.prepareStatement(FUNCTION);
  ctrlConnection.setReturnValue(mockPreparedStatement);
  replay();
  SqlFunction function=new SqlFunction();
  function.setDataSource(mockDataSource);
  function.setSql(FUNCTION);
  function.compile();
  int count=function.run();
  assertTrue("Function returned value 14",count == 14);
}
