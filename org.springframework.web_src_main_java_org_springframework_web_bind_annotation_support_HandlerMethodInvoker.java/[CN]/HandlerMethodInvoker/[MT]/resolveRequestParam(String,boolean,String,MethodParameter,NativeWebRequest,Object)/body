{
  Class<?> paramType=methodParam.getParameterType();
  if (Map.class.isAssignableFrom(paramType) && paramName.length() == 0) {
    return resolveRequestParamMap((Class<? extends Map>)paramType,webRequest);
  }
  if (paramName.length() == 0) {
    paramName=getRequiredParameterName(methodParam);
  }
  Object paramValue=null;
  MultipartRequest multipartRequest=webRequest.getNativeRequest(MultipartRequest.class);
  if (multipartRequest != null) {
    List<MultipartFile> files=multipartRequest.getFiles(paramName);
    if (!files.isEmpty()) {
      if (files.size() == 1 && !paramType.isArray() && !Collection.class.isAssignableFrom(paramType)) {
        paramValue=files.get(0);
      }
 else {
        paramValue=files;
      }
    }
  }
  if (paramValue == null) {
    String[] paramValues=webRequest.getParameterValues(paramName);
    if (paramValues != null) {
      if (paramValues.length == 1 && !paramType.isArray() && !Collection.class.isAssignableFrom(paramType)) {
        paramValue=paramValues[0];
      }
 else {
        paramValue=paramValues;
      }
    }
  }
  if (paramValue == null) {
    if (defaultValue != null) {
      paramValue=resolveDefaultValue(defaultValue);
    }
 else     if (required) {
      raiseMissingParameterException(paramName,paramType);
    }
    paramValue=checkValue(paramName,paramValue,paramType);
  }
  WebDataBinder binder=createBinder(webRequest,null,paramName);
  initBinder(handlerForInitBinderCall,paramName,binder,webRequest);
  return binder.convertIfNecessary(paramValue,paramType,methodParam);
}
