{
  if (this.methodResolver.hasSessionAttributes() && this.sessionStatus.isComplete()) {
    for (    String attrName : this.methodResolver.getActualSessionAttributeNames()) {
      this.sessionAttributeStore.cleanupAttribute(webRequest,attrName);
    }
  }
  Map<String,Object> model=(mavModel != null ? mavModel : implicitModel);
  if (model != null) {
    try {
      String[] originalAttrNames=model.keySet().toArray(new String[model.size()]);
      for (      String attrName : originalAttrNames) {
        Object attrValue=model.get(attrName);
        boolean isSessionAttr=this.methodResolver.isSessionAttribute(attrName,(attrValue != null ? attrValue.getClass() : null));
        if (isSessionAttr) {
          if (this.sessionStatus.isComplete()) {
            implicitModel.put(MODEL_KEY_PREFIX_STALE + attrName,Boolean.TRUE);
          }
 else           if (!implicitModel.containsKey(MODEL_KEY_PREFIX_STALE + attrName)) {
            this.sessionAttributeStore.storeAttribute(webRequest,attrName,attrValue);
          }
        }
        if (!attrName.startsWith(BindingResult.MODEL_KEY_PREFIX) && (isSessionAttr || isBindingCandidate(attrValue))) {
          String bindingResultKey=BindingResult.MODEL_KEY_PREFIX + attrName;
          if (mavModel != null && !model.containsKey(bindingResultKey)) {
            WebDataBinder binder=createBinder(webRequest,attrValue,attrName);
            initBinder(handler,attrName,binder,webRequest);
            mavModel.put(bindingResultKey,binder.getBindingResult());
          }
        }
      }
    }
 catch (    InvocationTargetException ex) {
      ReflectionUtils.rethrowException(ex.getTargetException());
    }
  }
}
