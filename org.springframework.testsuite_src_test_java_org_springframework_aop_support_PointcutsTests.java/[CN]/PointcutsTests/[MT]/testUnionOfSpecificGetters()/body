{
  Pointcut union=Pointcuts.union(allClassGetAgePointcut,allClassGetNamePointcut);
  assertFalse(Pointcuts.matches(union,TEST_BEAN_SET_AGE,TestBean.class,new Object[]{new Integer(6)}));
  assertTrue(Pointcuts.matches(union,TEST_BEAN_GET_AGE,TestBean.class,null));
  assertFalse(Pointcuts.matches(allClassGetAgePointcut,TEST_BEAN_GET_NAME,TestBean.class,null));
  assertTrue(Pointcuts.matches(union,TEST_BEAN_GET_NAME,TestBean.class,null));
  assertFalse(Pointcuts.matches(union,TEST_BEAN_ABSQUATULATE,TestBean.class,null));
  union=Pointcuts.union(union,allClassSetterPointcut);
  assertTrue(Pointcuts.matches(union,TEST_BEAN_SET_AGE,TestBean.class,new Object[]{new Integer(6)}));
  assertTrue(Pointcuts.matches(union,TEST_BEAN_GET_AGE,TestBean.class,null));
  assertFalse(Pointcuts.matches(allClassGetAgePointcut,TEST_BEAN_GET_NAME,TestBean.class,null));
  assertTrue(Pointcuts.matches(union,TEST_BEAN_GET_NAME,TestBean.class,null));
  assertFalse(Pointcuts.matches(union,TEST_BEAN_ABSQUATULATE,TestBean.class,null));
  assertTrue(Pointcuts.matches(union,TEST_BEAN_SET_AGE,TestBean.class,new Object[]{new Integer(6)}));
}
