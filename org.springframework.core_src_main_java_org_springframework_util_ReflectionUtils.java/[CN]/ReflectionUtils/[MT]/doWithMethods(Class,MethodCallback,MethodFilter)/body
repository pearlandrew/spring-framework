{
  do {
    Method[] methods=targetClass.getDeclaredMethods();
    for (int i=0; i < methods.length; i++) {
      if (mf != null && !mf.matches(methods[i])) {
        continue;
      }
      try {
        mc.doWith(methods[i]);
      }
 catch (      IllegalAccessException ex) {
        throw new IllegalStateException("Shouldn't be illegal to access method '" + methods[i].getName() + "': "+ ex);
      }
    }
    targetClass=targetClass.getSuperclass();
  }
 while (targetClass != null);
}
