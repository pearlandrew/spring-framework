{
  String[] dbResults=new String[]{"alpha","beta","charlie"};
  MockControl[] ctrlCountResultSetMetaData=new MockControl[3];
  ResultSetMetaData[] mockCountResultSetMetaData=new ResultSetMetaData[3];
  MockControl[] ctrlCountResultSet=new MockControl[3];
  ResultSet[] mockCountResultSet=new ResultSet[3];
  MockControl[] ctrlCountPreparedStatement=new MockControl[3];
  PreparedStatement[] mockCountPreparedStatement=new PreparedStatement[3];
  mockResultSet.next();
  ctrlResultSet.setReturnValue(true);
  mockResultSet.getString(1);
  ctrlResultSet.setReturnValue(dbResults[0]);
  mockResultSet.next();
  ctrlResultSet.setReturnValue(true);
  mockResultSet.getString(1);
  ctrlResultSet.setReturnValue(dbResults[1]);
  mockResultSet.next();
  ctrlResultSet.setReturnValue(true);
  mockResultSet.getString(1);
  ctrlResultSet.setReturnValue(dbResults[2]);
  mockResultSet.next();
  ctrlResultSet.setReturnValue(false);
  mockResultSet.close();
  ctrlResultSet.setVoidCallable();
  mockPreparedStatement.executeQuery();
  ctrlPreparedStatement.setReturnValue(mockResultSet);
  if (debugEnabled) {
    mockPreparedStatement.getWarnings();
    ctrlPreparedStatement.setReturnValue(null);
  }
  mockPreparedStatement.close();
  ctrlPreparedStatement.setVoidCallable();
  mockConnection.prepareStatement(SELECT_FORENAME);
  ctrlConnection.setReturnValue(mockPreparedStatement);
  for (int i=0; i < dbResults.length; i++) {
    ctrlCountResultSetMetaData[i]=MockControl.createControl(ResultSetMetaData.class);
    mockCountResultSetMetaData[i]=(ResultSetMetaData)ctrlCountResultSetMetaData[i].getMock();
    mockCountResultSetMetaData[i].getColumnCount();
    ctrlCountResultSetMetaData[i].setReturnValue(1);
    ctrlCountResultSet[i]=MockControl.createControl(ResultSet.class);
    mockCountResultSet[i]=(ResultSet)ctrlCountResultSet[i].getMock();
    mockCountResultSet[i].getMetaData();
    ctrlCountResultSet[i].setReturnValue(mockCountResultSetMetaData[i]);
    mockCountResultSet[i].next();
    ctrlCountResultSet[i].setReturnValue(true);
    mockCountResultSet[i].getInt(1);
    ctrlCountResultSet[i].setReturnValue(1);
    mockCountResultSet[i].wasNull();
    ctrlCountResultSet[i].setReturnValue(false);
    mockCountResultSet[i].next();
    ctrlCountResultSet[i].setReturnValue(false);
    mockCountResultSet[i].close();
    ctrlCountResultSet[i].setVoidCallable();
    ctrlCountPreparedStatement[i]=MockControl.createControl(PreparedStatement.class);
    mockCountPreparedStatement[i]=(PreparedStatement)ctrlCountPreparedStatement[i].getMock();
    mockCountPreparedStatement[i].executeQuery();
    ctrlCountPreparedStatement[i].setReturnValue(mockCountResultSet[i]);
    if (debugEnabled) {
      mockCountPreparedStatement[i].getWarnings();
      ctrlCountPreparedStatement[i].setReturnValue(null);
    }
    mockCountPreparedStatement[i].close();
    ctrlCountPreparedStatement[i].setVoidCallable();
    mockConnection.prepareStatement("SELECT COUNT(FORENAME) FROM CUSTMR WHERE FORENAME='" + dbResults[i] + "'");
    ctrlConnection.setReturnValue(mockCountPreparedStatement[i]);
    ctrlCountResultSetMetaData[i].replay();
    ctrlCountResultSet[i].replay();
    ctrlCountPreparedStatement[i].replay();
  }
  replay();
  StringQuery query=new StringQuery(mockDataSource,SELECT_FORENAME);
  query.setRowsExpected(3);
  String[] results=query.run();
  assertTrue("Array is non null",results != null);
  assertTrue("Found results",results.length > 0);
  assertTrue("Found expected number of results",query.getRowsExpected() == 3);
  JdbcTemplate helper=new JdbcTemplate(mockDataSource);
  for (int i=0; i < results.length; i++) {
    int dbCount=helper.queryForInt("SELECT COUNT(FORENAME) FROM CUSTMR WHERE FORENAME='" + results[i] + "'",(Object[])null);
    assertTrue("found in db",dbCount == 1);
  }
  for (int i=0; i < dbResults.length; i++) {
    ctrlCountResultSetMetaData[i].verify();
    ctrlCountResultSet[i].verify();
    ctrlCountPreparedStatement[i].verify();
  }
}
