{
  this.request.addHeader("Accept-Encoding","gzip");
  String file="js/foo.js";
  Resource resolved=this.resolver.resolveResource(this.exchange,file,this.locations);
  String gzFile=file + ".gz";
  Resource gzResource=new ClassPathResource("test/" + gzFile,getClass());
  assertEquals(gzResource.getDescription(),resolved.getDescription());
  assertEquals(new ClassPathResource("test/" + file).getFilename(),resolved.getFilename());
  assertTrue("Expected " + resolved + " to be of type "+ ResolvedResource.class,resolved instanceof ResolvedResource);
  this.request=new MockServerHttpRequest(HttpMethod.GET,"/js/foo.js");
  MockServerHttpResponse response=new MockServerHttpResponse();
  this.exchange=new DefaultServerWebExchange(this.request,response,new DefaultWebSessionManager());
  resolved=this.resolver.resolveResource(this.exchange,file,this.locations);
  Resource resource=new ClassPathResource("test/" + file,getClass());
  assertEquals(resource.getDescription(),resolved.getDescription());
  assertEquals(new ClassPathResource("test/" + file).getFilename(),resolved.getFilename());
  assertFalse("Expected " + resolved + " to *not* be of type "+ ResolvedResource.class,resolved instanceof ResolvedResource);
}
