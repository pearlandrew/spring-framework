{
  Class<?> aspectClass=aspectInstanceFactory.getAspectMetadata().getAspectClass();
  String aspectName=aspectInstanceFactory.getAspectMetadata().getAspectName();
  validate(aspectClass);
  MetadataAwareAspectInstanceFactory lazySingletonAspectInstanceFactory=new LazySingletonAspectInstanceFactoryDecorator(aspectInstanceFactory);
  List<Advisor> advisors=new LinkedList<>();
  for (  Method method : getAdvisorMethods(aspectClass)) {
    Advisor advisor=getAdvisor(method,lazySingletonAspectInstanceFactory,advisors.size(),aspectName);
    if (advisor != null) {
      advisors.add(advisor);
    }
  }
  if (!advisors.isEmpty() && lazySingletonAspectInstanceFactory.getAspectMetadata().isLazilyInstantiated()) {
    Advisor instantiationAdvisor=new SyntheticInstantiationAdvisor(lazySingletonAspectInstanceFactory);
    advisors.add(0,instantiationAdvisor);
  }
  for (  Field field : aspectClass.getDeclaredFields()) {
    Advisor advisor=getDeclareParentsAdvisor(field);
    if (advisor != null) {
      advisors.add(advisor);
    }
  }
  return advisors;
}
