{
  MultiValueMap<HttpRequestHandler,String> mappings=new LinkedMultiValueMap<HttpRequestHandler,String>();
  if (this.registration != null) {
    SockJsService sockJsService=this.registration.getSockJsService();
    for (    String path : this.paths) {
      String pattern=path.endsWith("/") ? path + "**" : path + "/**";
      SockJsHttpRequestHandler handler=new SockJsHttpRequestHandler(sockJsService,this.webSocketHandler);
      mappings.add(handler,pattern);
    }
  }
 else {
    for (    String path : this.paths) {
      WebSocketHttpRequestHandler handler;
      if (this.handshakeHandler != null) {
        handler=new WebSocketHttpRequestHandler(this.webSocketHandler,this.handshakeHandler);
      }
 else {
        handler=new WebSocketHttpRequestHandler(this.webSocketHandler);
      }
      if (this.interceptors != null) {
        handler.setHandshakeInterceptors(Arrays.asList(this.interceptors));
      }
      mappings.add(handler,path);
    }
  }
  return mappings;
}
