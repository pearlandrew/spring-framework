{
  Object delegate=getDelegate();
  if (delegate != this) {
    if (delegate instanceof SessionAwareMessageListener) {
      if (session != null) {
        ((SessionAwareMessageListener<Message>)delegate).onMessage(message,session);
        return;
      }
 else       if (!(delegate instanceof MessageListener)) {
        throw new javax.jms.IllegalStateException("MessageListenerAdapter cannot handle a " + "SessionAwareMessageListener delegate if it hasn't been invoked with a Session itself");
      }
    }
    if (delegate instanceof MessageListener) {
      ((MessageListener)delegate).onMessage(message);
      return;
    }
  }
  Object convertedMessage=extractMessage(message);
  String methodName=getListenerMethodName(message,convertedMessage);
  if (methodName == null) {
    throw new javax.jms.IllegalStateException("No default listener method specified: " + "Either specify a non-null value for the 'defaultListenerMethod' property or " + "override the 'getListenerMethodName' method.");
  }
  Object[] listenerArguments=buildListenerArguments(convertedMessage);
  Object result=invokeListenerMethod(methodName,listenerArguments);
  if (result != null) {
    handleResult(result,message,session);
  }
 else {
    logger.trace("No result object given - no result to handle");
  }
}
