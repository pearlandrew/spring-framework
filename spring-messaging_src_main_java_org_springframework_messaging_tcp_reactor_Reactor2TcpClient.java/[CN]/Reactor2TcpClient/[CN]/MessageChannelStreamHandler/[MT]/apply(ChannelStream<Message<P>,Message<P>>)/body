{
  Promise<Void> closePromise=Promises.prepare();
  this.connectionHandler.afterConnected(new Reactor2TcpConnection<>(channelStream,closePromise));
  channelStream.finallyDo(new Consumer<Signal<Message<P>>>(){
    @Override public void accept(    Signal<Message<P>> signal){
      cleanupTask.run();
      if (signal.isOnError()) {
        connectionHandler.handleFailure(signal.getThrowable());
      }
 else       if (signal.isOnComplete()) {
        connectionHandler.afterConnectionClosed();
      }
    }
  }
).consume(new Consumer<Message<P>>(){
    @Override public void accept(    Message<P> message){
      connectionHandler.handleMessage(message);
    }
  }
);
  return closePromise;
}
