{
  Type returnType=method.getReturnType();
  Type genericReturnType=method.getGenericReturnType();
  ParameterizedType targetType;
  if (returnType.equals(genericIfc)) {
    if (genericReturnType instanceof ParameterizedType) {
      targetType=(ParameterizedType)genericReturnType;
      Type[] actualTypeArguments=targetType.getActualTypeArguments();
      Type typeArg=actualTypeArguments[0];
      if (!(typeArg instanceof WildcardType)) {
        return (Class<?>)typeArg;
      }
    }
 else {
      return null;
    }
  }
  return GenericTypeResolver.resolveTypeArgument((Class<?>)returnType,genericIfc);
}
