{
  factory=mock(EntityManagerFactory.class);
  manager=mock(EntityManager.class);
  tx=mock(EntityTransaction.class);
  JpaTransactionManager tm=new JpaTransactionManager(factory);
  tt=new TransactionTemplate(tm);
  given(factory.createEntityManager()).willReturn(manager);
  given(manager.getTransaction()).willReturn(tx);
  given(manager.isOpen()).willReturn(true);
  bean=new EntityManagerHoldingBean();
  PersistenceAnnotationBeanPostProcessor pabpp=new PersistenceAnnotationBeanPostProcessor(){
    @Override protected EntityManagerFactory findEntityManagerFactory(    String unitName,    String requestingBeanName){
      return factory;
    }
  }
;
  pabpp.postProcessPropertyValues(null,null,bean,"bean");
  assertTrue(TransactionSynchronizationManager.getResourceMap().isEmpty());
  assertFalse(TransactionSynchronizationManager.isSynchronizationActive());
}
