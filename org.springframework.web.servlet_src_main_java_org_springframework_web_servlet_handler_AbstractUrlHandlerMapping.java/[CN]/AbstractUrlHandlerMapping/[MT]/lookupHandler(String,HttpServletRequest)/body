{
  Object handler=this.handlerMap.get(urlPath);
  if (handler != null) {
    if (handler instanceof String) {
      String handlerName=(String)handler;
      handler=getApplicationContext().getBean(handlerName);
    }
    validateHandler(handler,request);
    return buildPathExposingHandler(handler,urlPath,urlPath,null);
  }
  List<String> matchingPatterns=new ArrayList<String>();
  for (  String registeredPattern : this.handlerMap.keySet()) {
    if (getPathMatcher().match(registeredPattern,urlPath)) {
      matchingPatterns.add(registeredPattern);
    }
  }
  String bestPatternMatch=null;
  if (!matchingPatterns.isEmpty()) {
    Collections.sort(matchingPatterns,getPathMatcher().getPatternComparator(urlPath));
    if (logger.isDebugEnabled()) {
      logger.debug("Matching patterns for request [" + urlPath + "] are "+ matchingPatterns);
    }
    bestPatternMatch=matchingPatterns.get(0);
  }
  if (bestPatternMatch != null) {
    handler=this.handlerMap.get(bestPatternMatch);
    if (handler instanceof String) {
      String handlerName=(String)handler;
      handler=getApplicationContext().getBean(handlerName);
    }
    validateHandler(handler,request);
    String pathWithinMapping=getPathMatcher().extractPathWithinPattern(bestPatternMatch,urlPath);
    Map<String,String> uriTemplateVariables=getPathMatcher().extractUriTemplateVariables(bestPatternMatch,urlPath);
    return buildPathExposingHandler(handler,bestPatternMatch,pathWithinMapping,uriTemplateVariables);
  }
  return null;
}
