{
  MethodParameter methodParameter=new MethodParameter(getClass().getMethod("testParameterList",List.class),0);
  TypeDescriptor desc=new TypeDescriptor(methodParameter);
  assertEquals(List.class,desc.getType());
  assertEquals(List.class,desc.getObjectType());
  assertEquals("java.util.List",desc.getName());
  assertEquals("java.util.List<java.util.List<java.util.Map<java.lang.Integer, java.lang.Enum>>>",desc.toString());
  assertTrue(!desc.isPrimitive());
  assertEquals(0,desc.getAnnotations().length);
  assertTrue(desc.isCollection());
  assertFalse(desc.isArray());
  assertEquals(List.class,desc.getElementType().getType());
  assertEquals(TypeDescriptor.nested(methodParameter,1),desc.getElementType());
  assertEquals(TypeDescriptor.nested(methodParameter,2),desc.getElementType().getElementType());
  assertEquals(TypeDescriptor.nested(methodParameter,3),desc.getElementType().getElementType().getMapValueType());
  assertEquals(Integer.class,desc.getElementType().getElementType().getMapKeyType().getType());
  assertEquals(Enum.class,desc.getElementType().getElementType().getMapValueType().getType());
  assertFalse(desc.isMap());
}
