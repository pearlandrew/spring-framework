{
  MethodParameter methodParameter=new MethodParameter(getClass().getMethod("testParameterMap",Map.class),0);
  TypeDescriptor desc=new TypeDescriptor(methodParameter);
  assertEquals(Map.class,desc.getType());
  assertEquals(Map.class,desc.getObjectType());
  assertEquals("java.util.Map",desc.getName());
  assertEquals("java.util.Map<java.lang.Integer, java.util.List<java.lang.String>>",desc.toString());
  assertTrue(!desc.isPrimitive());
  assertEquals(0,desc.getAnnotations().length);
  assertFalse(desc.isCollection());
  assertFalse(desc.isArray());
  assertNull(desc.getElementType());
  assertEquals(TypeDescriptor.NULL,desc.getElementTypeDescriptor());
  assertTrue(desc.isMap());
  assertEquals(TypeDescriptor.nested(methodParameter,1),desc.getMapValueTypeDescriptor());
  assertEquals(TypeDescriptor.nested(methodParameter,2),desc.getMapValueTypeDescriptor().getElementTypeDescriptor());
  assertEquals(Integer.class,desc.getMapKeyTypeDescriptor().getType());
  assertEquals(List.class,desc.getMapValueTypeDescriptor().getType());
  assertEquals(String.class,desc.getMapValueTypeDescriptor().getElementTypeDescriptor().getType());
}
