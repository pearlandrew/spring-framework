{
  servlet=new DispatcherServlet(){
    @Override protected WebApplicationContext createWebApplicationContext(    WebApplicationContext parent) throws BeansException {
      GenericWebApplicationContext wac=new GenericWebApplicationContext();
      wac.registerBeanDefinition("controller",new RootBeanDefinition(BookController.class));
      RootBeanDefinition hmDef=new RootBeanDefinition(SimpleUrlHandlerMapping.class);
      hmDef.getPropertyValues().add("mappings","/book/*=controller\n/book=controller");
      wac.registerBeanDefinition("handlerMapping",hmDef);
      wac.refresh();
      return wac;
    }
  }
;
  servlet.init(new MockServletConfig());
  MockHttpServletRequest request=new MockHttpServletRequest("GET","/book/list");
  MockHttpServletResponse response=new MockHttpServletResponse();
  servlet.service(request,response);
  assertEquals("list",response.getContentAsString());
  request=new MockHttpServletRequest("GET","/book/show");
  request.addParameter("id","12");
  response=new MockHttpServletResponse();
  servlet.service(request,response);
  assertEquals("show-id=12",response.getContentAsString());
  request=new MockHttpServletRequest("POST","/book");
  response=new MockHttpServletResponse();
  servlet.service(request,response);
  assertEquals("create",response.getContentAsString());
}
