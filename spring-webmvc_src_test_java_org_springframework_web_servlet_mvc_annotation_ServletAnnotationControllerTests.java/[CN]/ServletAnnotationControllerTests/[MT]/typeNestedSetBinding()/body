{
  servlet=new DispatcherServlet(){
    @Override protected WebApplicationContext createWebApplicationContext(    WebApplicationContext parent){
      GenericWebApplicationContext wac=new GenericWebApplicationContext();
      wac.registerBeanDefinition("controller",new RootBeanDefinition(NestedSetController.class));
      RootBeanDefinition csDef=new RootBeanDefinition(FormattingConversionServiceFactoryBean.class);
      csDef.getPropertyValues().add("converters",new TestBeanConverter());
      RootBeanDefinition wbiDef=new RootBeanDefinition(ConfigurableWebBindingInitializer.class);
      wbiDef.getPropertyValues().add("conversionService",csDef);
      RootBeanDefinition adapterDef=new RootBeanDefinition(AnnotationMethodHandlerAdapter.class);
      adapterDef.getPropertyValues().add("webBindingInitializer",wbiDef);
      wac.registerBeanDefinition("handlerAdapter",adapterDef);
      wac.refresh();
      return wac;
    }
  }
;
  servlet.init(new MockServletConfig());
  MockHttpServletRequest request=new MockHttpServletRequest("GET","/myPath.do");
  request.addParameter("testBeanSet",new String[]{"1","2"});
  MockHttpServletResponse response=new MockHttpServletResponse();
  servlet.service(request,response);
  assertEquals("[1, 2]-org.springframework.beans.TestBean",response.getContentAsString());
}
