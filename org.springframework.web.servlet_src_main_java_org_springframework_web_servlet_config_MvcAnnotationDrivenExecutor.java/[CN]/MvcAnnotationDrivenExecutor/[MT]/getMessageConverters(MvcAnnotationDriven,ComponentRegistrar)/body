{
  ManagedList<? super Object> messageConverters=new ManagedList<Object>();
  Object source=spec.source();
  messageConverters.setSource(source);
  messageConverters.addAll(spec.messageConverters());
  if (spec.shouldRegisterDefaultMessageConverters()) {
    messageConverters.add(createConverterBeanDefinition(ByteArrayHttpMessageConverter.class,source));
    RootBeanDefinition stringConverterDef=createConverterBeanDefinition(StringHttpMessageConverter.class,source);
    stringConverterDef.getPropertyValues().add("writeAcceptCharset",false);
    messageConverters.add(stringConverterDef);
    messageConverters.add(createConverterBeanDefinition(ResourceHttpMessageConverter.class,source));
    messageConverters.add(createConverterBeanDefinition(SourceHttpMessageConverter.class,source));
    messageConverters.add(createConverterBeanDefinition(XmlAwareFormHttpMessageConverter.class,source));
    if (jaxb2Present) {
      messageConverters.add(createConverterBeanDefinition(Jaxb2RootElementHttpMessageConverter.class,source));
    }
    if (jacksonPresent) {
      messageConverters.add(createConverterBeanDefinition(MappingJacksonHttpMessageConverter.class,source));
    }
    if (romePresent) {
      messageConverters.add(createConverterBeanDefinition(AtomFeedHttpMessageConverter.class,source));
      messageConverters.add(createConverterBeanDefinition(RssChannelHttpMessageConverter.class,source));
    }
  }
  return messageConverters;
}
