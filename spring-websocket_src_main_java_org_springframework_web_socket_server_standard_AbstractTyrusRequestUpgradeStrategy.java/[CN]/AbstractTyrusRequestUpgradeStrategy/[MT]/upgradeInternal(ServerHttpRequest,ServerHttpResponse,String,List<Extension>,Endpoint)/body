{
  HttpServletRequest servletRequest=getHttpServletRequest(request);
  HttpServletResponse servletResponse=getHttpServletResponse(response);
  TyrusServerContainer serverContainer=(TyrusServerContainer)getContainer(servletRequest);
  TyrusWebSocketEngine engine=(TyrusWebSocketEngine)serverContainer.getWebSocketEngine();
  Object tyrusEndpoint=null;
  try {
    String path="/" + random.nextLong();
    tyrusEndpoint=createTyrusEndpoint(endpoint,path,subProtocol,extensions,serverContainer,engine);
    getEndpointHelper().register(engine,tyrusEndpoint);
    HttpHeaders headers=request.getHeaders();
    RequestContext requestContext=createRequestContext(servletRequest,path,headers);
    TyrusUpgradeResponse upgradeResponse=new TyrusUpgradeResponse();
    UpgradeInfo upgradeInfo=engine.upgrade(requestContext,upgradeResponse);
switch (upgradeInfo.getStatus()) {
case SUCCESS:
      if (logger.isTraceEnabled()) {
        logger.trace("Successful upgrade: " + upgradeResponse.getHeaders());
      }
    handleSuccess(servletRequest,servletResponse,upgradeInfo,upgradeResponse);
  break;
case HANDSHAKE_FAILED:
throw new HandshakeFailureException("Unexpected handshake failure: " + request.getURI());
case NOT_APPLICABLE:
throw new HandshakeFailureException("Unexpected handshake mapping failure: " + request.getURI());
}
}
 catch (Exception ex) {
throw new HandshakeFailureException("Error during handshake: " + request.getURI(),ex);
}
 finally {
if (tyrusEndpoint != null) {
getEndpointHelper().unregister(engine,tyrusEndpoint);
}
}
}
