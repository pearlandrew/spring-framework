{
  DefaultListableBeanFactory bf=new DefaultListableBeanFactory();
  CommonAnnotationBeanPostProcessor bpp=new CommonAnnotationBeanPostProcessor();
  bpp.setBeanFactory(bf);
  bf.addBeanPostProcessor(bpp);
  bf.registerResolvableDependency(BeanFactory.class,bf);
  PropertyPlaceholderConfigurer ppc=new PropertyPlaceholderConfigurer();
  Properties props=new Properties();
  props.setProperty("tb","testBean3");
  ppc.setProperties(props);
  ppc.postProcessBeanFactory(bf);
  RootBeanDefinition annotatedBd=new RootBeanDefinition(ExtendedResourceInjectionBean.class);
  TestBean tb5=new TestBean();
  annotatedBd.getPropertyValues().addPropertyValue("testBean2",tb5);
  bf.registerBeanDefinition("annotatedBean",annotatedBd);
  bf.registerBeanDefinition("annotatedBean2",new RootBeanDefinition(NamedResourceInjectionBean.class));
  TestBean tb=new TestBean();
  bf.registerSingleton("testBean",tb);
  TestBean tb2=new TestBean();
  bf.registerSingleton("testBean2",tb2);
  TestBean tb3=new TestBean();
  bf.registerSingleton("testBean3",tb3);
  TestBean tb4=new TestBean();
  bf.registerSingleton("testBean4",tb4);
  NestedTestBean tb6=new NestedTestBean();
  bf.registerSingleton("xy",tb6);
  ExtendedResourceInjectionBean bean=(ExtendedResourceInjectionBean)bf.getBean("annotatedBean");
  assertTrue(bean.initCalled);
  assertTrue(bean.init2Called);
  assertSame(tb,bean.getTestBean());
  assertSame(tb5,bean.getTestBean2());
  assertSame(tb4,bean.getTestBean3());
  assertSame(tb3,bean.getTestBean4());
  assertSame(tb6,bean.testBean5);
  assertSame(tb6,bean.testBean6);
  assertSame(bf,bean.beanFactory);
  try {
    bf.getBean("annotatedBean2");
  }
 catch (  BeanCreationException ex) {
    assertTrue(ex.getRootCause() instanceof NoSuchBeanDefinitionException);
    NoSuchBeanDefinitionException innerEx=(NoSuchBeanDefinitionException)ex.getRootCause();
    assertEquals("testBean9",innerEx.getBeanName());
  }
  bf.destroySingletons();
  assertTrue(bean.destroyCalled);
  assertTrue(bean.destroy2Called);
}
