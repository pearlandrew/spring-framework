{
  AnnotationCacheKey cacheKey=new AnnotationCacheKey(method,annotationType);
  A result=(A)findAnnotationCache.get(cacheKey);
  if (result == null) {
    result=getAnnotation(method,annotationType);
    Class<?> clazz=method.getDeclaringClass();
    if (result == null) {
      result=searchOnInterfaces(method,annotationType,clazz.getInterfaces());
    }
    while (result == null) {
      clazz=clazz.getSuperclass();
      if (clazz == null || clazz.equals(Object.class)) {
        break;
      }
      try {
        Method equivalentMethod=clazz.getDeclaredMethod(method.getName(),method.getParameterTypes());
        result=getAnnotation(equivalentMethod,annotationType);
      }
 catch (      NoSuchMethodException ex) {
      }
      if (result == null) {
        result=searchOnInterfaces(method,annotationType,clazz.getInterfaces());
      }
    }
    if (result != null) {
      findAnnotationCache.put(cacheKey,result);
    }
  }
  return result;
}
