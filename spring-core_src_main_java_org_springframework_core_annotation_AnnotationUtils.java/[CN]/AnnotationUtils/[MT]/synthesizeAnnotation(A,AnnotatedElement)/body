{
  if (annotation == null) {
    return null;
  }
  if (annotation instanceof SynthesizedAnnotation) {
    return annotation;
  }
  Class<? extends Annotation> annotationType=annotation.annotationType();
  if (!isSynthesizable(annotationType)) {
    return annotation;
  }
  DefaultAnnotationAttributeExtractor attributeExtractor=new DefaultAnnotationAttributeExtractor(annotation,annotatedElement);
  InvocationHandler handler=new SynthesizedAnnotationInvocationHandler(attributeExtractor);
  A synthesizedAnnotation=(A)Proxy.newProxyInstance(ClassUtils.getDefaultClassLoader(),new Class<?>[]{(Class<A>)annotationType,SynthesizedAnnotation.class},handler);
  return synthesizedAnnotation;
}
