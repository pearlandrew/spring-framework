{
  if (ReflectionUtils.isEqualsMethod(method)) {
    return (isProxyForSameRubyObject(args[0]));
  }
 else   if (ReflectionUtils.isHashCodeMethod(method)) {
    return this.rubyObject.hashCode();
  }
 else   if (ReflectionUtils.isToStringMethod(method)) {
    String toStringResult=this.rubyObject.toString();
    if (!StringUtils.hasText(toStringResult)) {
      toStringResult=ObjectUtils.identityToString(this.rubyObject);
    }
    return "JRuby object [" + toStringResult + "]";
  }
  try {
    IRubyObject[] rubyArgs=convertToRuby(args);
    IRubyObject rubyResult=this.rubyObject.callMethod(this.ruby.getCurrentContext(),method.getName(),rubyArgs);
    return convertFromRuby(rubyResult,method.getReturnType());
  }
 catch (  RaiseException ex) {
    throw new JRubyExecutionException(ex);
  }
}
