{
  pmf.getConnectionFactory();
  pmfControl.setReturnValue(null,2);
  pmf.getPersistenceManager();
  pmfControl.setReturnValue(pm,1);
  pm.currentTransaction();
  pmControl.setReturnValue(tx,3);
  pm.flush();
  pmControl.setVoidCallable(2);
  pm.close();
  pmControl.setVoidCallable(1);
  tx.begin();
  txControl.setVoidCallable(1);
  tx.getRollbackOnly();
  txControl.setReturnValue(false,1);
  tx.commit();
  txControl.setVoidCallable(1);
  pmfControl.replay();
  pmControl.replay();
  txControl.replay();
  PlatformTransactionManager tm=new JdoTransactionManager(pmf);
  TransactionTemplate tt=new TransactionTemplate(tm);
  final List l=new ArrayList();
  l.add("test");
  assertTrue("Hasn't thread pm",!TransactionSynchronizationManager.hasResource(pmf));
  assertTrue("JTA synchronizations not active",!TransactionSynchronizationManager.isSynchronizationActive());
  Object result=tt.execute(new TransactionCallback(){
    public Object doInTransaction(    TransactionStatus status){
      assertTrue("Has thread pm",TransactionSynchronizationManager.hasResource(pmf));
      TransactionAwarePersistenceManagerFactoryProxy proxyFactory=new TransactionAwarePersistenceManagerFactoryProxy();
      proxyFactory.setTargetPersistenceManagerFactory(pmf);
      PersistenceManagerFactory proxy=(PersistenceManagerFactory)proxyFactory.getObject();
      assertEquals(pm.toString(),proxy.getPersistenceManager().toString());
      proxy.getPersistenceManager().flush();
      proxy.getPersistenceManager().close();
      JdoTemplate jt=new JdoTemplate(pmf);
      return jt.execute(new JdoCallback(){
        public Object doInJdo(        PersistenceManager pm2){
          pm2.flush();
          return l;
        }
      }
);
    }
  }
);
  assertTrue("Correct result list",result == l);
  assertTrue("Hasn't thread pm",!TransactionSynchronizationManager.hasResource(pmf));
  assertTrue("JTA synchronizations not active",!TransactionSynchronizationManager.isSynchronizationActive());
}
