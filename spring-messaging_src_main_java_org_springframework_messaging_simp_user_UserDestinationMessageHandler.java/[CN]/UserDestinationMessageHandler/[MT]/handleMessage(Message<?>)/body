{
  UserDestinationResult result=this.userDestinationResolver.resolveDestination(message);
  if (result == null) {
    return;
  }
  Set<String> destinations=result.getTargetDestinations();
  if (destinations.isEmpty()) {
    if (logger.isTraceEnabled()) {
      logger.trace("No user destinations for " + message);
    }
    return;
  }
  if (SimpMessageType.MESSAGE.equals(SimpMessageHeaderAccessor.getMessageType(message.getHeaders()))) {
    SimpMessageHeaderAccessor headerAccessor=SimpMessageHeaderAccessor.wrap(message);
    initHeaders(headerAccessor);
    String header=SimpMessageHeaderAccessor.ORIGINAL_DESTINATION;
    headerAccessor.setNativeHeader(header,result.getSubscribeDestination());
    message=MessageBuilder.createMessage(message.getPayload(),headerAccessor.getMessageHeaders());
  }
  for (  String destination : destinations) {
    if (logger.isTraceEnabled()) {
      logger.trace("Sending " + message);
    }
    this.brokerMessagingTemplate.send(destination,message);
  }
}
