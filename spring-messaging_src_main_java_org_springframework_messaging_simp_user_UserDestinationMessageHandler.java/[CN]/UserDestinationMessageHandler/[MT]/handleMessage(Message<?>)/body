{
  if (this.broadcastHandler != null) {
    message=this.broadcastHandler.preHandle(message);
    if (message == null) {
      return;
    }
  }
  UserDestinationResult result=this.destinationResolver.resolveDestination(message);
  if (result == null) {
    return;
  }
  if (result.getTargetDestinations().isEmpty()) {
    if (logger.isTraceEnabled()) {
      logger.trace("No active sessions for user destination: " + result.getSourceDestination());
    }
    if (this.broadcastHandler != null) {
      this.broadcastHandler.handleUnresolved(message);
    }
    return;
  }
  SimpMessageHeaderAccessor accessor=SimpMessageHeaderAccessor.wrap(message);
  initHeaders(accessor);
  accessor.setNativeHeader(ORIGINAL_DESTINATION,result.getSubscribeDestination());
  accessor.setLeaveMutable(true);
  message=MessageBuilder.createMessage(message.getPayload(),accessor.getMessageHeaders());
  if (logger.isTraceEnabled()) {
    logger.trace("Translated " + result.getSourceDestination() + " -> "+ result.getTargetDestinations());
  }
  for (  String target : result.getTargetDestinations()) {
    this.messagingTemplate.send(target,message);
  }
}
