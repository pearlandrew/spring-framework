{
  resolveBeanClass(mbd,beanName);
  if (mbd.getFactoryMethodName() != null && mbd.factoryMethodForIntrospection == null) {
    Class factoryClass;
    if (mbd.getFactoryBeanName() != null) {
      factoryClass=getType(mbd.getFactoryBeanName());
    }
 else {
      factoryClass=mbd.getBeanClass();
    }
    factoryClass=ClassUtils.getUserClass(factoryClass);
    Method[] candidates=ReflectionUtils.getAllDeclaredMethods(factoryClass);
    Method uniqueCandidate=null;
    for (    Method candidate : candidates) {
      if (candidate.getName().equals(mbd.getFactoryMethodName())) {
        if (uniqueCandidate == null) {
          uniqueCandidate=candidate;
        }
 else         if (!Arrays.equals(uniqueCandidate.getParameterTypes(),candidate.getParameterTypes())) {
          uniqueCandidate=null;
          break;
        }
      }
    }
    mbd.factoryMethodForIntrospection=uniqueCandidate;
  }
  return getAutowireCandidateResolver().isAutowireCandidate(new BeanDefinitionHolder(mbd,beanName,getAliases(beanName)),descriptor);
}
