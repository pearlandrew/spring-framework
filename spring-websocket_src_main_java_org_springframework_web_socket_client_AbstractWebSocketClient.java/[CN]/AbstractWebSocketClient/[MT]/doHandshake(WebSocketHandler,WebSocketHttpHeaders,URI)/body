{
  Assert.notNull(webSocketHandler,"webSocketHandler must not be null");
  Assert.notNull(uri,"uri must not be null");
  String scheme=uri.getScheme();
  Assert.isTrue(((scheme != null) && ("ws".equals(scheme) || "wss".equals(scheme))),"Invalid scheme: " + scheme);
  if (logger.isDebugEnabled()) {
    logger.debug("Connecting to " + uri);
  }
  HttpHeaders headersToUse=new HttpHeaders();
  if (headers != null) {
    for (    String header : headers.keySet()) {
      if (!specialHeaders.contains(header.toLowerCase())) {
        headersToUse.put(header,headers.get(header));
      }
    }
  }
  List<String> subProtocols=((headers != null) && (headers.getSecWebSocketProtocol() != null)) ? headers.getSecWebSocketProtocol() : Collections.<String>emptyList();
  List<WebSocketExtension> extensions=((headers != null) && (headers.getSecWebSocketExtensions() != null)) ? headers.getSecWebSocketExtensions() : Collections.<WebSocketExtension>emptyList();
  return doHandshakeInternal(webSocketHandler,headersToUse,uri,subProtocols,extensions,Collections.<String,Object>emptyMap());
}
