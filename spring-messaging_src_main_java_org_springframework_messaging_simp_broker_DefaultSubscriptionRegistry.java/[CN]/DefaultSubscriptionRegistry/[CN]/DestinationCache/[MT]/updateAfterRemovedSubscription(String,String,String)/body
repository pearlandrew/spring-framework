{
synchronized (this.updateCache) {
    Set<String> destinationsToRemove=new HashSet<String>();
    for (    Map.Entry<String,MultiValueMap<String,String>> entry : this.updateCache.entrySet()) {
      String cachedDestination=entry.getKey();
      if (getPathMatcher().match(destination,cachedDestination)) {
        MultiValueMap<String,String> subs=entry.getValue();
        List<String> subsIds=subs.get(sessionId);
        subsIds.remove(subsId);
        if (subsIds.isEmpty()) {
          subs.remove(sessionId);
        }
        if (subs.isEmpty()) {
          destinationsToRemove.add(cachedDestination);
        }
 else {
          this.accessCache.put(cachedDestination,new LinkedMultiValueMap<String,String>(subs));
        }
      }
    }
    for (    String destinationToRemove : destinationsToRemove) {
      this.updateCache.remove(destinationToRemove);
      this.accessCache.remove(destinationToRemove);
    }
  }
}
