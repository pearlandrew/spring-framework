{
synchronized (this.updateCache) {
    for (    String destination : info.getDestinations()) {
      Set<String> destinationsToRemove=new HashSet<String>();
      for (      Map.Entry<String,MultiValueMap<String,String>> entry : this.updateCache.entrySet()) {
        String cachedDestination=entry.getKey();
        if (getPathMatcher().match(destination,cachedDestination)) {
          MultiValueMap<String,String> subs=entry.getValue();
          subs.remove(info.getSessionId());
          if (subs.isEmpty()) {
            destinationsToRemove.add(cachedDestination);
          }
 else {
            this.accessCache.put(cachedDestination,new LinkedMultiValueMap<String,String>(subs));
          }
        }
      }
      for (      String d : destinationsToRemove) {
        this.updateCache.remove(d);
        this.accessCache.remove(d);
      }
    }
  }
}
