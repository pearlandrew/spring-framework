{
  DateTimeFormatter dateTimeFormatter=null;
  if (StringUtils.hasLength(this.pattern)) {
    dateTimeFormatter=DateTimeFormatter.ofPattern(this.pattern);
  }
 else   if (this.iso != null && this.iso != ISO.NONE) {
switch (this.iso) {
case DATE:
      dateTimeFormatter=DateTimeFormatter.ISO_DATE;
    break;
case TIME:
  dateTimeFormatter=DateTimeFormatter.ISO_TIME;
break;
case DATE_TIME:
dateTimeFormatter=DateTimeFormatter.ISO_DATE_TIME;
break;
case NONE:
break;
default :
throw new IllegalStateException("Unsupported ISO format: " + this.iso);
}
}
 else if (this.dateStyle != null && this.timeStyle != null) {
dateTimeFormatter=DateTimeFormatter.ofLocalizedDateTime(this.dateStyle,this.timeStyle);
}
 else if (this.dateStyle != null) {
dateTimeFormatter=DateTimeFormatter.ofLocalizedDate(this.dateStyle);
}
 else if (this.timeStyle != null) {
dateTimeFormatter=DateTimeFormatter.ofLocalizedTime(this.timeStyle);
}
if (dateTimeFormatter != null && this.timeZone != null) {
dateTimeFormatter=dateTimeFormatter.withZone(this.timeZone.toZoneId());
}
return (dateTimeFormatter != null ? dateTimeFormatter : fallbackFormatter);
}
