{
  if (ObjectUtils.isEmpty(this.argumentResolvers)) {
    List<HttpMessageConverter<?>> converters=Arrays.asList(new CodecHttpMessageConverter<ByteBuffer>(new ByteBufferEncoder(),new ByteBufferDecoder()),new CodecHttpMessageConverter<String>(new StringEncoder(),new StringDecoder()),new CodecHttpMessageConverter<Object>(new Jaxb2Encoder(),new Jaxb2Decoder()),new CodecHttpMessageConverter<Object>(new JacksonJsonEncoder(),new JacksonJsonDecoder(new JsonObjectDecoder())));
    ConversionService cs=getConversionService();
    this.argumentResolvers.add(new RequestParamMethodArgumentResolver(cs,getBeanFactory(),false));
    this.argumentResolvers.add(new RequestParamMapMethodArgumentResolver());
    this.argumentResolvers.add(new PathVariableMethodArgumentResolver(cs,getBeanFactory()));
    this.argumentResolvers.add(new PathVariableMapMethodArgumentResolver());
    this.argumentResolvers.add(new RequestBodyArgumentResolver(converters,cs));
    this.argumentResolvers.add(new RequestHeaderMethodArgumentResolver(cs,getBeanFactory()));
    this.argumentResolvers.add(new RequestHeaderMapMethodArgumentResolver());
    this.argumentResolvers.add(new CookieValueMethodArgumentResolver(cs,getBeanFactory()));
    this.argumentResolvers.add(new ExpressionValueMethodArgumentResolver(cs,getBeanFactory()));
    this.argumentResolvers.add(new SessionAttributeMethodArgumentResolver(cs,getBeanFactory()));
    this.argumentResolvers.add(new RequestAttributeMethodArgumentResolver(cs,getBeanFactory()));
    this.argumentResolvers.add(new ModelArgumentResolver());
    this.argumentResolvers.add(new RequestParamMethodArgumentResolver(cs,getBeanFactory(),true));
  }
}
