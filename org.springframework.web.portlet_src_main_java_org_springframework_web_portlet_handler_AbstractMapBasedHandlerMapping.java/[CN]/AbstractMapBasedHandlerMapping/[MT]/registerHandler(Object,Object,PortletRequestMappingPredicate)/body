{
  Assert.notNull(lookupKey,"Lookup key must not be null");
  Assert.notNull(handler,"Handler object must not be null");
  Object resolvedHandler=handler;
  if (!this.lazyInitHandlers && handler instanceof String) {
    String handlerName=(String)handler;
    if (getApplicationContext().isSingleton(handlerName)) {
      resolvedHandler=getApplicationContext().getBean(handlerName);
    }
  }
  Object mappedHandler=this.handlerMap.get(lookupKey);
  if (mappedHandler != null && !(mappedHandler instanceof Map)) {
    if (mappedHandler != resolvedHandler) {
      throw new IllegalStateException("Cannot map handler [" + handler + "] to key ["+ lookupKey+ "]: There's already handler ["+ mappedHandler+ "] mapped.");
    }
  }
 else {
    if (predicate != null) {
      Map predicateMap=(Map)mappedHandler;
      if (predicateMap == null) {
        predicateMap=new LinkedHashMap();
        this.handlerMap.put(lookupKey,predicateMap);
      }
      predicateMap.put(predicate,resolvedHandler);
    }
 else {
      this.handlerMap.put(lookupKey,resolvedHandler);
    }
    if (logger.isDebugEnabled()) {
      logger.debug("Mapped key [" + lookupKey + "] onto handler ["+ resolvedHandler+ "]");
    }
  }
}
