{
  Object source=parserContext.extractSource(element);
  if (this.handlerAdapterBeanName == null) {
    RootBeanDefinition handlerAdapterDef=new RootBeanDefinition(SimpleControllerHandlerAdapter.class);
    handlerAdapterDef.setSource(source);
    handlerAdapterDef.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);
    this.handlerAdapterBeanName=parserContext.getReaderContext().registerWithGeneratedName(handlerAdapterDef);
    parserContext.registerComponent(new BeanComponentDefinition(handlerAdapterDef,handlerAdapterBeanName));
  }
  RootBeanDefinition handlerMappingDef;
  if (this.handlerMappingBeanName == null) {
    handlerMappingDef=new RootBeanDefinition(SimpleUrlHandlerMapping.class);
    handlerMappingDef.setSource(source);
    handlerMappingDef.getPropertyValues().add("order","1");
    handlerMappingDef.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);
    this.handlerMappingBeanName=parserContext.getReaderContext().registerWithGeneratedName(handlerMappingDef);
    parserContext.registerComponent(new BeanComponentDefinition(handlerMappingDef,handlerMappingBeanName));
  }
 else {
    handlerMappingDef=(RootBeanDefinition)parserContext.getReaderContext().getRegistry().getBeanDefinition(this.handlerMappingBeanName);
  }
  RootBeanDefinition viewControllerDef=new RootBeanDefinition(ParameterizableViewController.class);
  viewControllerDef.setSource(source);
  if (element.hasAttribute("view-name")) {
    viewControllerDef.getPropertyValues().add("viewName",element.getAttribute("view-name"));
  }
  Map<String,BeanDefinition> urlMap;
  if (handlerMappingDef.getPropertyValues().contains("urlMap")) {
    urlMap=(Map<String,BeanDefinition>)handlerMappingDef.getPropertyValues().getPropertyValue("urlMap").getValue();
  }
 else {
    urlMap=new ManagedMap<String,BeanDefinition>();
    handlerMappingDef.getPropertyValues().add("urlMap",urlMap);
  }
  urlMap.put(element.getAttribute("path"),viewControllerDef);
  return null;
}
