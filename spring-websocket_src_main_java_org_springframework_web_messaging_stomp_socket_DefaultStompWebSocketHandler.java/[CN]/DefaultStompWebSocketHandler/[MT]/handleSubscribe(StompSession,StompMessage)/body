{
  final String subscriptionId=message.getHeaders().getId();
  String replyKey=getSubscriptionReplyKey(session,subscriptionId);
  if (logger.isTraceEnabled()) {
    logger.trace("Adding subscription, key=" + replyKey);
  }
  EventRegistration registration=this.eventBus.registerConsumer(replyKey,new EventConsumer<Message<?>>(){
    @Override public void accept(    Message<?> replyMessage){
      StompHeaders headers=new StompHeaders();
      headers.setSubscription(subscriptionId);
      headerMapper.fromMessageHeaders(replyMessage.getHeaders(),headers);
      byte[] payload;
      try {
        MediaType contentType=headers.getContentType();
        payload=payloadConverter.convertToPayload(replyMessage.getPayload(),contentType);
      }
 catch (      Exception e) {
        logger.error("Failed to send " + replyMessage,e);
        return;
      }
      try {
        StompMessage stompMessage=new StompMessage(StompCommand.MESSAGE,headers,payload);
        session.sendMessage(stompMessage);
      }
 catch (      Throwable t) {
        handleError(session,t);
      }
    }
  }
);
  addRegistration(session,registration);
  return replyKey;
}
