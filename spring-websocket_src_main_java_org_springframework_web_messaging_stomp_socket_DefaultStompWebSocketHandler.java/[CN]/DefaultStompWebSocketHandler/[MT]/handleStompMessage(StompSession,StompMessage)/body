{
  try {
    StompCommand command=message.getCommand();
    if (StompCommand.CONNECT.equals(command) || StompCommand.STOMP.equals(command)) {
      registerConnectionClosedCallback(session);
      handleConnect(session,message);
    }
 else     if (StompCommand.SUBSCRIBE.equals(command)) {
      handleSubscribe(session,message);
    }
 else     if (StompCommand.UNSUBSCRIBE.equals(command)) {
      handleUnsubscribe(session,message);
    }
 else     if (StompCommand.SEND.equals(command)) {
      handleSend(session,message);
    }
 else     if (StompCommand.DISCONNECT.equals(command)) {
      handleDisconnect(session,message);
    }
 else     if (StompCommand.ACK.equals(command) || StompCommand.NACK.equals(command)) {
      this.reactor.notify(command,Event.wrap(message));
    }
 else     if (StompCommand.BEGIN.equals(command) || StompCommand.COMMIT.equals(command) || StompCommand.ABORT.equals(command)) {
      this.reactor.notify(command,Event.wrap(message));
    }
 else {
      sendErrorMessage(session,"Invalid STOMP command " + command);
    }
  }
 catch (  Throwable t) {
    handleError(session,t);
  }
}
