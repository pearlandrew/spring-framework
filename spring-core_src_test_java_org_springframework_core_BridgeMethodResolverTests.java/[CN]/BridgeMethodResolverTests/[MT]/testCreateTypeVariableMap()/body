{
  Map<TypeVariable,Type> typeVariableMap=GenericTypeResolver.getTypeVariableMap(MyBar.class);
  TypeVariable<?> barT=findTypeVariable(InterBar.class,"T");
  assertEquals(String.class,typeVariableMap.get(barT));
  typeVariableMap=GenericTypeResolver.getTypeVariableMap(MyFoo.class);
  TypeVariable<?> fooT=findTypeVariable(Foo.class,"T");
  assertEquals(String.class,typeVariableMap.get(fooT));
  typeVariableMap=GenericTypeResolver.getTypeVariableMap(ExtendsEnclosing.ExtendsEnclosed.ExtendsReallyDeepNow.class);
  TypeVariable<?> r=findTypeVariable(Enclosing.Enclosed.ReallyDeepNow.class,"R");
  TypeVariable<?> s=findTypeVariable(Enclosing.Enclosed.class,"S");
  TypeVariable<?> t=findTypeVariable(Enclosing.class,"T");
  assertEquals(Long.class,typeVariableMap.get(r));
  assertEquals(Integer.class,typeVariableMap.get(s));
  assertEquals(String.class,typeVariableMap.get(t));
}
