{
  resolver=new RequestParamMethodArgumentResolver(null,true);
  ParameterNameDiscoverer paramNameDiscoverer=new LocalVariableTableParameterNameDiscoverer();
  Method method=ReflectionUtils.findMethod(getClass(),"handle",(Class<?>[])null);
  paramNamedDefaultValueString=new SynthesizingMethodParameter(method,0);
  paramNamedStringArray=new SynthesizingMethodParameter(method,1);
  paramNamedMap=new SynthesizingMethodParameter(method,2);
  paramMultipartFile=new SynthesizingMethodParameter(method,3);
  paramMultipartFileList=new SynthesizingMethodParameter(method,4);
  paramMultipartFileArray=new SynthesizingMethodParameter(method,5);
  paramPart=new SynthesizingMethodParameter(method,6);
  paramPartList=new SynthesizingMethodParameter(method,7);
  paramPartArray=new SynthesizingMethodParameter(method,8);
  paramMap=new SynthesizingMethodParameter(method,9);
  paramStringNotAnnot=new SynthesizingMethodParameter(method,10);
  paramStringNotAnnot.initParameterNameDiscovery(paramNameDiscoverer);
  paramMultipartFileNotAnnot=new SynthesizingMethodParameter(method,11);
  paramMultipartFileNotAnnot.initParameterNameDiscovery(paramNameDiscoverer);
  paramMultipartFileListNotAnnot=new SynthesizingMethodParameter(method,12);
  paramMultipartFileListNotAnnot.initParameterNameDiscovery(paramNameDiscoverer);
  paramPartNotAnnot=new SynthesizingMethodParameter(method,13);
  paramPartNotAnnot.initParameterNameDiscovery(paramNameDiscoverer);
  paramRequestPartAnnot=new SynthesizingMethodParameter(method,14);
  paramRequired=new SynthesizingMethodParameter(method,15);
  paramNotRequired=new SynthesizingMethodParameter(method,16);
  paramOptional=new SynthesizingMethodParameter(method,17);
  multipartFileOptional=new SynthesizingMethodParameter(method,18);
  request=new MockHttpServletRequest();
  webRequest=new ServletWebRequest(request,new MockHttpServletResponse());
}
