{
  Flux<Pojo> source=Flux.just(new Pojo("foo","bar"),new Pojo("foofoo","barbar"),new Pojo("foofoofoo","barbarbar"));
  ResolvableType type=ResolvableType.forClass(Pojo.class);
  Flux<DataBuffer> output=this.encoder.encode(source,this.dataBufferFactory,type,null);
  TestSubscriber.subscribe(output).assertComplete().assertNoError().assertValuesWith(stringConsumer("["),stringConsumer("{\"foo\":\"foo\",\"bar\":\"bar\"}"),stringConsumer(","),stringConsumer("{\"foo\":\"foofoo\",\"bar\":\"barbar\"}"),stringConsumer(","),stringConsumer("{\"foo\":\"foofoofoo\",\"bar\":\"barbarbar\"}"),stringConsumer("]"));
}
