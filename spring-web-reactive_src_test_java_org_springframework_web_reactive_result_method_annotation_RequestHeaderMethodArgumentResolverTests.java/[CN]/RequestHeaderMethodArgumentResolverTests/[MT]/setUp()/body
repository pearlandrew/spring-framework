{
  ConversionService conversionService=new DefaultFormattingConversionService();
  AnnotationConfigApplicationContext context=new AnnotationConfigApplicationContext();
  context.refresh();
  this.resolver=new RequestHeaderMethodArgumentResolver(conversionService,context.getBeanFactory());
  @SuppressWarnings("ConfusingArgumentToVarargsMethod") Method method=ReflectionUtils.findMethod(getClass(),"params",null);
  this.paramNamedDefaultValueStringHeader=new SynthesizingMethodParameter(method,0);
  this.paramNamedValueStringArray=new SynthesizingMethodParameter(method,1);
  this.paramSystemProperty=new SynthesizingMethodParameter(method,2);
  this.paramResolvedNameWithExpression=new SynthesizingMethodParameter(method,3);
  this.paramResolvedNameWithPlaceholder=new SynthesizingMethodParameter(method,4);
  this.paramNamedValueMap=new SynthesizingMethodParameter(method,5);
  this.paramDate=new SynthesizingMethodParameter(method,6);
  this.paramInstant=new SynthesizingMethodParameter(method,7);
  ServerHttpRequest request=new MockServerHttpRequest(HttpMethod.GET,new URI("/"));
  WebSessionManager sessionManager=mock(WebSessionManager.class);
  this.exchange=new DefaultServerWebExchange(request,new MockServerHttpResponse(),sessionManager);
}
