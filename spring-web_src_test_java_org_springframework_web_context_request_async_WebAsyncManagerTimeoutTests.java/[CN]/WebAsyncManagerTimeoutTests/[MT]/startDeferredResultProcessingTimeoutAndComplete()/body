{
  DeferredResult<Integer> deferredResult=new DeferredResult<Integer>();
  DeferredResultProcessingInterceptor interceptor=mock(DeferredResultProcessingInterceptor.class);
  given(interceptor.handleTimeout(this.asyncWebRequest,deferredResult)).willReturn(true);
  this.asyncManager.registerDeferredResultInterceptor("interceptor",interceptor);
  this.asyncManager.startDeferredResultProcessing(deferredResult);
  this.asyncWebRequest.onTimeout(ASYNC_EVENT);
  this.asyncWebRequest.onComplete(ASYNC_EVENT);
  assertFalse(this.asyncManager.hasConcurrentResult());
  assertEquals(DispatcherType.REQUEST,this.servletRequest.getDispatcherType());
  assertEquals(503,this.servletResponse.getStatus());
  verify(interceptor).beforeConcurrentHandling(this.asyncWebRequest,deferredResult);
  verify(interceptor).preProcess(this.asyncWebRequest,deferredResult);
  verify(interceptor).afterCompletion(this.asyncWebRequest,deferredResult);
}
