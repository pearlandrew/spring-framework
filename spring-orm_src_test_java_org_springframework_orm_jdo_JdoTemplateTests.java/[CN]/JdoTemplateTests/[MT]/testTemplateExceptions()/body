{
  try {
    createTemplate().execute(new JdoCallback(){
      @Override public Object doInJdo(      PersistenceManager pm){
        throw new JDOObjectNotFoundException();
      }
    }
);
    fail("Should have thrown JdoObjectRetrievalFailureException");
  }
 catch (  JdoObjectRetrievalFailureException ex) {
  }
  try {
    createTemplate().execute(new JdoCallback(){
      @Override public Object doInJdo(      PersistenceManager pm){
        throw new JDOOptimisticVerificationException();
      }
    }
);
    fail("Should have thrown JdoOptimisticLockingFailureException");
  }
 catch (  JdoOptimisticLockingFailureException ex) {
  }
  try {
    createTemplate().execute(new JdoCallback(){
      @Override public Object doInJdo(      PersistenceManager pm){
        throw new JDODataStoreException();
      }
    }
);
    fail("Should have thrown JdoResourceFailureException");
  }
 catch (  JdoResourceFailureException ex) {
  }
  try {
    createTemplate().execute(new JdoCallback(){
      @Override public Object doInJdo(      PersistenceManager pm){
        throw new JDOFatalDataStoreException();
      }
    }
);
    fail("Should have thrown JdoResourceFailureException");
  }
 catch (  JdoResourceFailureException ex) {
  }
  try {
    createTemplate().execute(new JdoCallback(){
      @Override public Object doInJdo(      PersistenceManager pm){
        throw new JDOUserException();
      }
    }
);
    fail("Should have thrown JdoUsageException");
  }
 catch (  JdoUsageException ex) {
  }
  try {
    createTemplate().execute(new JdoCallback(){
      @Override public Object doInJdo(      PersistenceManager pm){
        throw new JDOFatalUserException();
      }
    }
);
    fail("Should have thrown JdoUsageException");
  }
 catch (  JdoUsageException ex) {
  }
  try {
    createTemplate().execute(new JdoCallback(){
      @Override public Object doInJdo(      PersistenceManager pm){
        throw new JDOException();
      }
    }
);
    fail("Should have thrown JdoSystemException");
  }
 catch (  JdoSystemException ex) {
  }
}
