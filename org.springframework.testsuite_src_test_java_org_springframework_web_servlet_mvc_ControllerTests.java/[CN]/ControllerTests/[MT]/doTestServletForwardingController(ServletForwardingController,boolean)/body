{
  MockControl requestControl=MockControl.createControl(HttpServletRequest.class);
  HttpServletRequest request=(HttpServletRequest)requestControl.getMock();
  MockControl responseControl=MockControl.createControl(HttpServletResponse.class);
  HttpServletResponse response=(HttpServletResponse)responseControl.getMock();
  MockControl contextControl=MockControl.createControl(ServletContext.class);
  ServletContext context=(ServletContext)contextControl.getMock();
  MockControl dispatcherControl=MockControl.createControl(RequestDispatcher.class);
  RequestDispatcher dispatcher=(RequestDispatcher)dispatcherControl.getMock();
  request.getMethod();
  requestControl.setReturnValue("GET",1);
  context.getNamedDispatcher("action");
  contextControl.setReturnValue(dispatcher,1);
  if (include) {
    request.getAttribute(WebUtils.INCLUDE_REQUEST_URI_ATTRIBUTE);
    requestControl.setReturnValue("somePath",1);
    dispatcher.include(request,response);
    dispatcherControl.setVoidCallable(1);
  }
 else {
    request.getAttribute(WebUtils.INCLUDE_REQUEST_URI_ATTRIBUTE);
    requestControl.setReturnValue(null,1);
    dispatcher.forward(request,response);
    dispatcherControl.setVoidCallable(1);
  }
  requestControl.replay();
  contextControl.replay();
  dispatcherControl.replay();
  StaticWebApplicationContext sac=new StaticWebApplicationContext();
  sac.setServletContext(context);
  sfc.setApplicationContext(sac);
  assertNull(sfc.handleRequest(request,response));
  requestControl.verify();
  contextControl.verify();
  dispatcherControl.verify();
}
