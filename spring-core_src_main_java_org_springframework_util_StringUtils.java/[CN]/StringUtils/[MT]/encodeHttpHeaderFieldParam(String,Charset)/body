{
  Assert.notNull(charset,"charset should not be null");
  if (StandardCharsets.US_ASCII.equals(charset)) {
    return input;
  }
  Assert.isTrue(StandardCharsets.UTF_8.equals(charset) || StandardCharsets.ISO_8859_1.equals(charset),"charset should be UTF-8 or ISO-8859-1");
  final byte[] source=input.getBytes(charset);
  final int len=source.length;
  final StringBuilder sb=new StringBuilder(len << 1);
  sb.append(charset.name());
  sb.append("''");
  for (  byte b : source) {
    if (isRFC5987AttrChar(b)) {
      sb.append((char)b);
    }
 else {
      sb.append('%');
      char hex1=Character.toUpperCase(Character.forDigit((b >> 4) & 0xF,16));
      char hex2=Character.toUpperCase(Character.forDigit(b & 0xF,16));
      sb.append(hex1);
      sb.append(hex2);
    }
  }
  return sb.toString();
}
