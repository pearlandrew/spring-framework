{
  String servletName=this.getServletName();
  Assert.hasLength(servletName,"getServletName() may not return empty or null");
  WebApplicationContext servletAppContext=this.createServletApplicationContext();
  Assert.notNull(servletAppContext,"createServletApplicationContext() did not return an application " + "context for servlet [" + servletName + "]");
  DispatcherServlet dispatcherServlet=new DispatcherServlet(servletAppContext);
  ServletRegistration.Dynamic registration=servletContext.addServlet(servletName,dispatcherServlet);
  Assert.notNull(registration,"Failed to register servlet with name '" + servletName + "'."+ "Check if there is another servlet registered under the same name.");
  registration.setLoadOnStartup(1);
  registration.addMapping(getServletMappings());
  registration.setAsyncSupported(isAsyncSupported());
  Filter[] filters=getServletFilters();
  if (!ObjectUtils.isEmpty(filters)) {
    for (    Filter filter : filters) {
      registerServletFilter(servletContext,filter);
    }
  }
  this.customizeRegistration(registration);
}
