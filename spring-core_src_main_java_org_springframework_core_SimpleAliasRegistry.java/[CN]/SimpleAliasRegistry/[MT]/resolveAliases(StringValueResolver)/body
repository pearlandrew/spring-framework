{
  Assert.notNull(valueResolver,"StringValueResolver must not be null");
synchronized (this.aliasMap) {
    Map<String,String> aliasCopy=new HashMap<String,String>(this.aliasMap);
    for (    String alias : aliasCopy.keySet()) {
      String registeredName=aliasCopy.get(alias);
      String resolvedAlias=valueResolver.resolveStringValue(alias);
      String resolvedName=valueResolver.resolveStringValue(registeredName);
      if (resolvedAlias == null || resolvedName == null || resolvedAlias.equals(resolvedName)) {
        this.aliasMap.remove(alias);
      }
 else       if (!resolvedAlias.equals(alias)) {
        String existingName=this.aliasMap.get(resolvedAlias);
        if (existingName != null && !existingName.equals(resolvedName)) {
          throw new IllegalStateException("Cannot register resolved alias '" + resolvedAlias + "' (original: '"+ alias+ "') for name '"+ resolvedName+ "': It is already registered for name '"+ registeredName+ "'.");
        }
        checkForAliasCircle(resolvedName,resolvedAlias);
        this.aliasMap.remove(alias);
        this.aliasMap.put(resolvedAlias,resolvedName);
      }
 else       if (!registeredName.equals(resolvedName)) {
        this.aliasMap.put(alias,resolvedName);
      }
    }
  }
}
