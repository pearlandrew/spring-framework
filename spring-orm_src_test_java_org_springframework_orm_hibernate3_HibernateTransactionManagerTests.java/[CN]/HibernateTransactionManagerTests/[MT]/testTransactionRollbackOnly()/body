{
  MockControl conControl=MockControl.createControl(Connection.class);
  Connection con=(Connection)conControl.getMock();
  MockControl sfControl=MockControl.createControl(SessionFactory.class);
  final SessionFactory sf=(SessionFactory)sfControl.getMock();
  MockControl sessionControl=MockControl.createControl(Session.class);
  Session session=(Session)sessionControl.getMock();
  MockControl txControl=MockControl.createControl(Transaction.class);
  Transaction tx=(Transaction)txControl.getMock();
  sf.openSession();
  sfControl.setReturnValue(session,1);
  session.beginTransaction();
  sessionControl.setReturnValue(tx,1);
  session.isOpen();
  sessionControl.setReturnValue(true,1);
  session.getFlushMode();
  sessionControl.setReturnValue(FlushMode.AUTO,1);
  session.flush();
  sessionControl.setVoidCallable(1);
  session.close();
  sessionControl.setReturnValue(null,1);
  tx.rollback();
  txControl.setVoidCallable(1);
  session.isConnected();
  sessionControl.setReturnValue(true,1);
  session.connection();
  sessionControl.setReturnValue(con,2);
  con.isReadOnly();
  conControl.setReturnValue(false,1);
  sfControl.replay();
  sessionControl.replay();
  txControl.replay();
  PlatformTransactionManager tm=new HibernateTransactionManager(sf);
  TransactionTemplate tt=new TransactionTemplate(tm);
  assertTrue("Hasn't thread session",!TransactionSynchronizationManager.hasResource(sf));
  tt.execute(new TransactionCallback(){
    @Override public Object doInTransaction(    TransactionStatus status){
      assertTrue("Has thread session",TransactionSynchronizationManager.hasResource(sf));
      HibernateTemplate ht=new HibernateTemplate(sf);
      ht.setFlushMode(HibernateTemplate.FLUSH_EAGER);
      ht.execute(new HibernateCallback(){
        @Override public Object doInHibernate(        org.hibernate.Session session){
          return null;
        }
      }
);
      status.setRollbackOnly();
      return null;
    }
  }
);
  assertTrue("Hasn't thread session",!TransactionSynchronizationManager.hasResource(sf));
  sfControl.verify();
  sessionControl.verify();
  txControl.verify();
}
