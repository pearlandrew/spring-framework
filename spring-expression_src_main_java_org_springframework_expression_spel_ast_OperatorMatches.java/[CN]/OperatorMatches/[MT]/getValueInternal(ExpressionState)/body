{
  SpelNodeImpl leftOp=getLeftOperand();
  SpelNodeImpl rightOp=getRightOperand();
  Object left=leftOp.getValue(state,String.class);
  Object right=getRightOperand().getValueInternal(state).getValue();
  if (!(left instanceof String)) {
    throw new SpelEvaluationException(leftOp.getStartPosition(),SpelMessage.INVALID_FIRST_OPERAND_FOR_MATCHES_OPERATOR,left);
  }
  if (!(right instanceof String)) {
    throw new SpelEvaluationException(rightOp.getStartPosition(),SpelMessage.INVALID_SECOND_OPERAND_FOR_MATCHES_OPERATOR,right);
  }
  try {
    Pattern pattern=Pattern.compile((String)right);
    Matcher matcher=pattern.matcher((String)left);
    return BooleanTypedValue.forValue(matcher.matches());
  }
 catch (  PatternSyntaxException ex) {
    throw new SpelEvaluationException(rightOp.getStartPosition(),ex,SpelMessage.INVALID_PATTERN,right);
  }
}
