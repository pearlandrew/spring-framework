{
  expression=parse("3.0d != 4.0d");
  assertCanCompile(expression);
  assertTrue((Boolean)expression.getValue());
  expression=parse("3446.0d != 3446.0d");
  assertCanCompile(expression);
  assertFalse((Boolean)expression.getValue());
  expression=parse("3 != 1");
  assertCanCompile(expression);
  assertTrue((Boolean)expression.getValue());
  expression=parse("3 != 3");
  assertCanCompile(expression);
  assertFalse((Boolean)expression.getValue());
  expression=parse("3.0f != 1.0f");
  assertCanCompile(expression);
  assertTrue((Boolean)expression.getValue());
  expression=parse("2.0f != 2.0f");
  assertCanCompile(expression);
  assertFalse((Boolean)expression.getValue());
  expression=parse("30L != 30L");
  assertCanCompile(expression);
  assertFalse((Boolean)expression.getValue());
  expression=parse("15L != 20L");
  assertCanCompile(expression);
  assertTrue((Boolean)expression.getValue());
  expression=parse("1 != 3.0d");
  assertCantCompile(expression);
  expression=parse("T(Integer).valueOf(3) != 4");
  assertTrue((Boolean)expression.getValue());
  assertCanCompile(expression);
  assertTrue((Boolean)expression.getValue());
  expression=parse("T(Integer).valueOf(3) != T(Integer).valueOf(3)");
  assertFalse((Boolean)expression.getValue());
  assertCanCompile(expression);
  assertFalse((Boolean)expression.getValue());
  expression=parse("5 != T(Integer).valueOf(3)");
  assertTrue((Boolean)expression.getValue());
  assertCanCompile(expression);
  assertTrue((Boolean)expression.getValue());
  expression=parse("T(Float).valueOf(3.0f) != 4.0f");
  assertTrue((Boolean)expression.getValue());
  assertCanCompile(expression);
  assertTrue((Boolean)expression.getValue());
  expression=parse("T(Float).valueOf(3.0f) != T(Float).valueOf(3.0f)");
  assertFalse((Boolean)expression.getValue());
  assertCanCompile(expression);
  assertFalse((Boolean)expression.getValue());
  expression=parse("5.0f != T(Float).valueOf(3.0f)");
  assertTrue((Boolean)expression.getValue());
  assertCanCompile(expression);
  assertTrue((Boolean)expression.getValue());
  expression=parse("T(Long).valueOf(3L) != 4L");
  assertTrue((Boolean)expression.getValue());
  assertCanCompile(expression);
  assertTrue((Boolean)expression.getValue());
  expression=parse("T(Long).valueOf(3L) != T(Long).valueOf(3L)");
  assertFalse((Boolean)expression.getValue());
  assertCanCompile(expression);
  assertFalse((Boolean)expression.getValue());
  expression=parse("5L != T(Long).valueOf(3L)");
  assertTrue((Boolean)expression.getValue());
  assertCanCompile(expression);
  assertTrue((Boolean)expression.getValue());
  expression=parse("T(Double).valueOf(3.0d) == 4.0d");
  assertFalse((Boolean)expression.getValue());
  assertCanCompile(expression);
  assertFalse((Boolean)expression.getValue());
  expression=parse("T(Double).valueOf(3.0d) == T(Double).valueOf(3.0d)");
  assertTrue((Boolean)expression.getValue());
  assertCanCompile(expression);
  assertTrue((Boolean)expression.getValue());
  expression=parse("5.0d == T(Double).valueOf(3.0d)");
  assertFalse((Boolean)expression.getValue());
  assertCanCompile(expression);
  assertFalse((Boolean)expression.getValue());
  expression=parse("false == true");
  assertFalse((Boolean)expression.getValue());
  assertCanCompile(expression);
  assertFalse((Boolean)expression.getValue());
  expression=parse("T(Boolean).valueOf('true') == T(Boolean).valueOf('true')");
  assertTrue((Boolean)expression.getValue());
  assertCanCompile(expression);
  assertTrue((Boolean)expression.getValue());
  expression=parse("T(Boolean).valueOf('true') == true");
  assertTrue((Boolean)expression.getValue());
  assertCanCompile(expression);
  assertTrue((Boolean)expression.getValue());
  expression=parse("false == T(Boolean).valueOf('false')");
  assertTrue((Boolean)expression.getValue());
  assertCanCompile(expression);
  assertTrue((Boolean)expression.getValue());
}
