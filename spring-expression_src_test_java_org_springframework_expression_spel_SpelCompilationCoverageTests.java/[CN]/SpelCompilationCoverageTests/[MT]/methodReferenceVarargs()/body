{
  TestClass5 tc=new TestClass5();
  expression=parser.parseExpression("eleven()");
  assertCantCompile(expression);
  expression.getValue(tc);
  assertEquals("",tc.s);
  assertCanCompile(expression);
  tc.reset();
  expression.getValue(tc);
  assertEquals("",tc.s);
  tc.reset();
  expression=parser.parseExpression("eleven(stringArray)");
  assertCantCompile(expression);
  expression.getValue(tc);
  assertEquals("aaabbbccc",tc.s);
  assertCanCompile(expression);
  tc.reset();
  expression.getValue(tc);
  assertEquals("aaabbbccc",tc.s);
  tc.reset();
  expression=parser.parseExpression("eleven('aaa','bbb','ccc')");
  assertCantCompile(expression);
  expression.getValue(tc);
  assertEquals("aaabbbccc",tc.s);
  assertCanCompile(expression);
  tc.reset();
  expression.getValue(tc);
  assertEquals("aaabbbccc",tc.s);
  tc.reset();
  expression=parser.parseExpression("twelve(1,2,3)");
  assertCantCompile(expression);
  expression.getValue(tc);
  assertEquals(6,tc.i);
  assertCanCompile(expression);
  tc.reset();
  expression.getValue(tc);
  assertEquals(6,tc.i);
  tc.reset();
  expression=parser.parseExpression("thirteen('aaa','bbb','ccc')");
  assertCantCompile(expression);
  expression.getValue(tc);
  assertEquals("aaa::bbbccc",tc.s);
  assertCanCompile(expression);
  tc.reset();
  expression.getValue(tc);
  assertEquals("aaa::bbbccc",tc.s);
  tc.reset();
  expression=parser.parseExpression("thirteen('aaa')");
  assertCantCompile(expression);
  expression.getValue(tc);
  assertEquals("aaa::",tc.s);
  assertCanCompile(expression);
  tc.reset();
  expression.getValue(tc);
  assertEquals("aaa::",tc.s);
  tc.reset();
  expression=parser.parseExpression("fourteen('aaa',stringArray,stringArray)");
  assertCantCompile(expression);
  expression.getValue(tc);
  assertEquals("aaa::{aaabbbccc}{aaabbbccc}",tc.s);
  assertCanCompile(expression);
  tc.reset();
  expression.getValue(tc);
  assertEquals("aaa::{aaabbbccc}{aaabbbccc}",tc.s);
  tc.reset();
  expression=parser.parseExpression("fifteen('aaa',intArray,intArray)");
  assertCantCompile(expression);
  expression.getValue(tc);
  assertEquals("aaa::{112233}{112233}",tc.s);
  assertCanCompile(expression);
  tc.reset();
  expression.getValue(tc);
  assertEquals("aaa::{112233}{112233}",tc.s);
  tc.reset();
  expression=parser.parseExpression("arrayz(true,true,false)");
  assertCantCompile(expression);
  expression.getValue(tc);
  assertEquals("truetruefalse",tc.s);
  assertCanCompile(expression);
  tc.reset();
  expression.getValue(tc);
  assertEquals("truetruefalse",tc.s);
  tc.reset();
  expression=parser.parseExpression("arrays(s1,s2,s3)");
  assertCantCompile(expression);
  expression.getValue(tc);
  assertEquals("123",tc.s);
  assertCanCompile(expression);
  tc.reset();
  expression.getValue(tc);
  assertEquals("123",tc.s);
  tc.reset();
  expression=parser.parseExpression("arrayd(1.0d,2.0d,3.0d)");
  assertCantCompile(expression);
  expression.getValue(tc);
  assertEquals("1.02.03.0",tc.s);
  assertCanCompile(expression);
  tc.reset();
  expression.getValue(tc);
  assertEquals("1.02.03.0",tc.s);
  tc.reset();
  expression=parser.parseExpression("arrayj(l1,l2,l3)");
  assertCantCompile(expression);
  expression.getValue(tc);
  assertEquals("123",tc.s);
  assertCanCompile(expression);
  tc.reset();
  expression.getValue(tc);
  assertEquals("123",tc.s);
  tc.reset();
  expression=parser.parseExpression("arrayc(c1,c2,c3)");
  assertCantCompile(expression);
  expression.getValue(tc);
  assertEquals("abc",tc.s);
  assertCanCompile(expression);
  tc.reset();
  expression.getValue(tc);
  assertEquals("abc",tc.s);
  tc.reset();
  expression=parser.parseExpression("arrayb(b1,b2,b3)");
  assertCantCompile(expression);
  expression.getValue(tc);
  assertEquals("656667",tc.s);
  assertCanCompile(expression);
  tc.reset();
  expression.getValue(tc);
  assertEquals("656667",tc.s);
  tc.reset();
  expression=parser.parseExpression("arrayf(f1,f2,f3)");
  assertCantCompile(expression);
  expression.getValue(tc);
  assertEquals("1.02.03.0",tc.s);
  assertCanCompile(expression);
  tc.reset();
  expression.getValue(tc);
  assertEquals("1.02.03.0",tc.s);
  tc.reset();
}
