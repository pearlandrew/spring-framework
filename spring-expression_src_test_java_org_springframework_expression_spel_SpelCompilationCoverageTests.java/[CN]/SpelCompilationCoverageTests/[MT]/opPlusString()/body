{
  expression=parse("'hello' + 'world'");
  assertEquals("helloworld",expression.getValue());
  assertCanCompile(expression);
  assertEquals("helloworld",expression.getValue());
  expression=parse("'hello' + getWorld()");
  assertEquals("helloworld",expression.getValue(new Greeter()));
  assertCanCompile(expression);
  assertEquals("helloworld",expression.getValue(new Greeter()));
  expression=parse("getWorld() + 'hello'");
  assertEquals("worldhello",expression.getValue(new Greeter()));
  assertCanCompile(expression);
  assertEquals("worldhello",expression.getValue(new Greeter()));
  expression=parse("'hello' + getWorld() + ' spring'");
  assertEquals("helloworld spring",expression.getValue(new Greeter()));
  assertCanCompile(expression);
  assertEquals("helloworld spring",expression.getValue(new Greeter()));
  expression=parse("'hello' + 3 + ' spring'");
  assertEquals("hello3 spring",expression.getValue(new Greeter()));
  assertCantCompile(expression);
  expression=parse("object + 'a'");
  assertEquals("objecta",expression.getValue(new Greeter()));
  assertCanCompile(expression);
  assertEquals("objecta",expression.getValue(new Greeter()));
  expression=parse("'a'+object");
  assertEquals("aobject",expression.getValue(new Greeter()));
  assertCanCompile(expression);
  assertEquals("aobject",expression.getValue(new Greeter()));
  expression=parse("'a'+object+'a'");
  assertEquals("aobjecta",expression.getValue(new Greeter()));
  assertCanCompile(expression);
  assertEquals("aobjecta",expression.getValue(new Greeter()));
  expression=parse("object+'a'+object");
  assertEquals("objectaobject",expression.getValue(new Greeter()));
  assertCanCompile(expression);
  assertEquals("objectaobject",expression.getValue(new Greeter()));
  expression=parse("object+object");
  assertEquals("objectobject",expression.getValue(new Greeter()));
  assertCanCompile(expression);
  assertEquals("objectobject",expression.getValue(new Greeter()));
}
