{
  TestClass10 tc=new TestClass10();
  expression=parser.parseExpression("concat('test')");
  assertCantCompile(expression);
  expression.getValue(tc);
  assertEquals("::test",tc.s);
  assertCanCompile(expression);
  tc.reset();
  expression.getValue(tc);
  assertEquals("::test",tc.s);
  tc.reset();
  expression=parser.parseExpression("concat()");
  assertCantCompile(expression);
  expression.getValue(tc);
  assertEquals("",tc.s);
  assertCanCompile(expression);
  tc.reset();
  expression.getValue(tc);
  assertEquals("",tc.s);
  tc.reset();
  expression=parser.parseExpression("concat2('test')");
  assertCantCompile(expression);
  expression.getValue(tc);
  assertEquals("::test",tc.s);
  assertCanCompile(expression);
  tc.reset();
  expression.getValue(tc);
  assertEquals("::test",tc.s);
  tc.reset();
  expression=parser.parseExpression("concat2()");
  assertCantCompile(expression);
  expression.getValue(tc);
  assertEquals("",tc.s);
  assertCanCompile(expression);
  tc.reset();
  expression.getValue(tc);
  assertEquals("",tc.s);
  tc.reset();
}
