{
  try {
    if (databaseMetaData.supportsGetGeneratedKeys()) {
      logger.debug("GetGeneratedKeys is supported");
      setGetGeneratedKeysSupported(true);
    }
 else {
      logger.debug("GetGeneratedKeys is not supported");
      setGetGeneratedKeysSupported(false);
    }
  }
 catch (  SQLException ex) {
    logger.warn("Error retrieving 'DatabaseMetaData.getGeneratedKeys' - " + ex.getMessage());
  }
  try {
    String databaseProductName=databaseMetaData.getDatabaseProductName();
    if (this.productsNotSupportingGeneratedKeysColumnNameArray.contains(databaseProductName)) {
      logger.debug("GeneratedKeysColumnNameArray is not supported for " + databaseProductName);
      setGeneratedKeysColumnNameArraySupported(false);
    }
 else {
      if (isGetGeneratedKeysSupported()) {
        logger.debug("GeneratedKeysColumnNameArray is supported for " + databaseProductName);
        setGeneratedKeysColumnNameArraySupported(true);
      }
 else {
        setGeneratedKeysColumnNameArraySupported(false);
      }
    }
  }
 catch (  SQLException ex) {
    logger.warn("Error retrieving 'DatabaseMetaData.getDatabaseProductName' - " + ex.getMessage());
  }
  try {
    this.databaseVersion=databaseMetaData.getDatabaseProductVersion();
  }
 catch (  SQLException ex) {
    logger.warn("Error retrieving 'DatabaseMetaData.getDatabaseProductVersion' - " + ex.getMessage());
  }
  try {
    setStoresUpperCaseIdentifiers(databaseMetaData.storesUpperCaseIdentifiers());
  }
 catch (  SQLException ex) {
    logger.warn("Error retrieving 'DatabaseMetaData.storesUpperCaseIdentifiers' - " + ex.getMessage());
  }
  try {
    setStoresLowerCaseIdentifiers(databaseMetaData.storesLowerCaseIdentifiers());
  }
 catch (  SQLException ex) {
    logger.warn("Error retrieving 'DatabaseMetaData.storesLowerCaseIdentifiers' - " + ex.getMessage());
  }
}
