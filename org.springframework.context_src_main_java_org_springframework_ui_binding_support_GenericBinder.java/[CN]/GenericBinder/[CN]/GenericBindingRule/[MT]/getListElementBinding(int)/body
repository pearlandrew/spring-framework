{
  if (listElementBindings == null) {
    listElementBindings=new HashMap<Integer,Binding>();
  }
  growListIfNecessary(index);
  Binding binding=listElementBindings.get(index);
  if (binding == null) {
    BindingContext listContext=new BindingContext(){
      public MessageSource getMessageSource(){
        return GenericBindingRule.this.getMessageSource();
      }
      public TypeConverter getTypeConverter(){
        return GenericBindingRule.this.getTypeConverter();
      }
      public Binding getBinding(      String property){
        Object model=((List)GenericBindingRule.this.binding.getValue()).get(index);
        return GenericBindingRule.this.getBindingRule(property,getElementType()).getBinding(model);
      }
      public Formatter getFormatter(){
        return GenericBindingRule.this.getElementFormatter();
      }
      public Formatter getElementFormatter(){
        return null;
      }
      public Formatter getKeyFormatter(){
        return null;
      }
      public Condition getEditableCondition(){
        return GenericBindingRule.this.getEditableCondition();
      }
      public Condition getEnabledCondition(){
        return GenericBindingRule.this.getEnabledCondition();
      }
      public Condition getVisibleCondition(){
        return GenericBindingRule.this.getVisibleCondition();
      }
      public Binding getListElementBinding(      int index){
        throw new IllegalArgumentException("Not yet supported");
      }
      public Binding getMapValueBinding(      Object key){
        throw new IllegalArgumentException("Not yet supported");
      }
      public String getLabel(){
        return GenericBindingRule.this.getLabel() + "[" + index+ "]";
      }
    }
;
    binding=new ListElementBinding(index,getElementType(),(List)this.binding.getValue(),listContext);
    listElementBindings.put(index,binding);
  }
  return binding;
}
