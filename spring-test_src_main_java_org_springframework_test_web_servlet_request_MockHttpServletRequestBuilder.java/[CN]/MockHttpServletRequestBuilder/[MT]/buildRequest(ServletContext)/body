{
  MockHttpServletRequest request=createServletRequest(servletContext);
  String requestUri=this.url.getRawPath();
  request.setRequestURI(requestUri);
  updatePathRequestProperties(request,requestUri);
  if (this.url.getScheme() != null) {
    request.setScheme(this.url.getScheme());
  }
  if (this.url.getHost() != null) {
    request.setServerName(this.url.getHost());
  }
  if (this.url.getPort() != -1) {
    request.setServerPort(this.url.getPort());
  }
  request.setMethod(this.method);
  for (  String name : this.headers.keySet()) {
    for (    Object value : this.headers.get(name)) {
      request.addHeader(name,value);
    }
  }
  if (this.url.getRawQuery() != null) {
    request.setQueryString(this.url.getRawQuery());
  }
  addRequestParams(request,UriComponentsBuilder.fromUri(this.url).build().getQueryParams());
  for (  String name : this.parameters.keySet()) {
    for (    String value : this.parameters.get(name)) {
      request.addParameter(name,value);
    }
  }
  request.setContentType(this.contentType);
  request.setContent(this.content);
  request.setCharacterEncoding(this.characterEncoding);
  if (this.content != null && this.contentType != null) {
    MediaType mediaType=MediaType.parseMediaType(this.contentType);
    if (MediaType.APPLICATION_FORM_URLENCODED.includes(mediaType)) {
      addRequestParams(request,parseFormData(mediaType));
    }
  }
  if (!ObjectUtils.isEmpty(this.cookies)) {
    request.setCookies(this.cookies.toArray(new Cookie[this.cookies.size()]));
  }
  if (this.locale != null) {
    request.addPreferredLocale(this.locale);
  }
  if (this.secure != null) {
    request.setSecure(this.secure);
  }
  request.setUserPrincipal(this.principal);
  for (  String name : this.attributes.keySet()) {
    request.setAttribute(name,this.attributes.get(name));
  }
  if (this.session != null) {
    request.setSession(this.session);
  }
  for (  String name : this.sessionAttributes.keySet()) {
    request.getSession().setAttribute(name,this.sessionAttributes.get(name));
  }
  FlashMap flashMap=new FlashMap();
  flashMap.putAll(this.flashAttributes);
  FlashMapManager flashMapManager=getFlashMapManager(request);
  flashMapManager.saveOutputFlashMap(flashMap,request,new MockHttpServletResponse());
  request.setAsyncSupported(true);
  return request;
}
