{
  Session session=getSession();
  SessionHolder sessionHolder=(SessionHolder)TransactionSynchronizationManager.getResource(getSessionFactory());
  boolean existingTransaction=(sessionHolder != null && sessionHolder.containsSession(session));
  if (existingTransaction) {
    logger.debug("Found thread-bound Session for HibernateInterceptor");
  }
 else {
    if (sessionHolder != null) {
      sessionHolder.addSession(session);
    }
 else {
      TransactionSynchronizationManager.bindResource(getSessionFactory(),new SessionHolder(session));
    }
  }
  FlushMode previousFlushMode=null;
  try {
    previousFlushMode=applyFlushMode(session,existingTransaction);
    enableFilters(session);
    Object retVal=methodInvocation.proceed();
    flushIfNecessary(session,existingTransaction);
    return retVal;
  }
 catch (  HibernateException ex) {
    if (this.exceptionConversionEnabled) {
      throw convertHibernateAccessException(ex);
    }
 else {
      throw ex;
    }
  }
 finally {
    if (existingTransaction) {
      logger.debug("Not closing pre-bound Hibernate Session after HibernateInterceptor");
      disableFilters(session);
      if (previousFlushMode != null) {
        session.setFlushMode(previousFlushMode);
      }
    }
 else {
      SessionFactoryUtils.closeSessionOrRegisterDeferredClose(session,getSessionFactory());
      if (sessionHolder == null || sessionHolder.doesNotHoldNonDefaultSession()) {
        TransactionSynchronizationManager.unbindResource(getSessionFactory());
      }
    }
  }
}
