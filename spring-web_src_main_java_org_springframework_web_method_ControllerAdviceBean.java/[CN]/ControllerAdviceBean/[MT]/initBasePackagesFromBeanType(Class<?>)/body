{
  List<Package> basePackages=new ArrayList<Package>();
  ControllerAdvice annotation=AnnotationUtils.findAnnotation(beanType,ControllerAdvice.class);
  Assert.notNull(annotation,"BeanType [" + beanType.getName() + "] is not annotated @ControllerAdvice");
  for (  String pkgName : (String[])AnnotationUtils.getValue(annotation)) {
    if (StringUtils.hasText(pkgName)) {
      Package pack=Package.getPackage(pkgName);
      if (pack != null) {
        basePackages.add(pack);
      }
 else {
        logger.warn("Package [" + pkgName + "] was not found, see ["+ beanType.getName()+ "]");
      }
    }
  }
  for (  String pkgName : (String[])AnnotationUtils.getValue(annotation,"basePackages")) {
    if (StringUtils.hasText(pkgName)) {
      Package pack=Package.getPackage(pkgName);
      if (pack != null) {
        basePackages.add(pack);
      }
 else {
        logger.warn("Package [" + pkgName + "] was not found, see ["+ beanType.getName()+ "]");
      }
    }
  }
  for (  Class<?> markerClass : (Class<?>[])AnnotationUtils.getValue(annotation,"basePackageClasses")) {
    Package pack=markerClass.getPackage();
    if (pack != null) {
      basePackages.add(pack);
    }
 else {
      logger.warn("Package was not found for class [" + markerClass.getName() + "], see ["+ beanType.getName()+ "]");
    }
  }
  return basePackages;
}
