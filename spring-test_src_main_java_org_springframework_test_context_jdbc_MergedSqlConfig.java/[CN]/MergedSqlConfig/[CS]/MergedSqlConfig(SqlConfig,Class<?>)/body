{
  Assert.notNull(localSqlConfig,"Local @SqlConfig must not be null");
  Assert.notNull(testClass,"testClass must not be null");
  AnnotationAttributes attributes=AnnotatedElementUtils.getAnnotationAttributes(testClass,SqlConfig.class.getName());
  if (attributes != null) {
    for (    String key : attributes.keySet()) {
      Object value=AnnotationUtils.getValue(localSqlConfig,key);
      if (value != null) {
        if (!value.equals("") && (value != TransactionMode.DEFAULT) && (value != ErrorMode.DEFAULT)) {
          attributes.put(key,value);
        }
      }
    }
  }
 else {
    attributes=AnnotationUtils.getAnnotationAttributes(localSqlConfig,false,false);
  }
  this.dataSource=attributes.getString("dataSource");
  this.transactionManager=attributes.getString("transactionManager");
  this.transactionMode=retrieveTransactionMode(attributes);
  this.encoding=attributes.getString("encoding");
  this.separator=retrieveSeparator(attributes);
  this.commentPrefix=retrieveCommentPrefix(attributes);
  this.blockCommentStartDelimiter=retrieveBlockCommentStartDelimiter(attributes);
  this.blockCommentEndDelimiter=retrieveBlockCommentEndDelimiter(attributes);
  this.errorMode=retrieveErrorMode(attributes);
}
