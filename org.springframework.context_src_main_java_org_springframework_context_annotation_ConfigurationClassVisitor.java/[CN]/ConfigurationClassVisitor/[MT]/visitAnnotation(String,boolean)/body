{
  String annoTypeName=convertAsmTypeDescriptorToClassName(annoTypeDesc);
  Class<? extends Annotation> annoClass=loadToolingSafeClass(annoTypeName,classLoader);
  if (annoClass == null)   return super.visitAnnotation(annoTypeDesc,visible);
  if (Import.class.equals(annoClass)) {
    ImportStack importStack=ImportStackHolder.getImportStack();
    if (!importStack.contains(configClass)) {
      importStack.push(configClass);
      return new ImportAnnotationVisitor(model,problemReporter,classLoader);
    }
    problemReporter.error(new CircularImportProblem(configClass,importStack));
  }
  Annotation mutableAnnotation=createMutableAnnotation(annoClass,classLoader);
  configClass.addAnnotation(mutableAnnotation);
  return new MutableAnnotationVisitor(mutableAnnotation,classLoader);
}
