{
  Object[] actualArgs=args;
  if (this.aspectJAdviceMethod.getParameterTypes().length == 0) {
    actualArgs=null;
  }
  try {
    ReflectionUtils.makeAccessible(this.aspectJAdviceMethod);
    return this.aspectJAdviceMethod.invoke(this.aspectInstanceFactory.getAspectInstance(),actualArgs);
  }
 catch (  IllegalArgumentException ex) {
    throw new AopInvocationException("Mismatch on arguments to advice method [" + this.aspectJAdviceMethod + "]; pointcut expression ["+ this.pointcut.getPointcutExpression()+ "]",ex);
  }
catch (  InvocationTargetException ex) {
    throw ex.getTargetException();
  }
}
