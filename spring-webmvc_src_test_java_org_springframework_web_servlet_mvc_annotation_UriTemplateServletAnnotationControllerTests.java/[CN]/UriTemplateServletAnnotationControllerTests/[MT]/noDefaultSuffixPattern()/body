{
  servlet=new DispatcherServlet(){
    @Override protected WebApplicationContext createWebApplicationContext(    WebApplicationContext parent) throws BeansException {
      GenericWebApplicationContext wac=new GenericWebApplicationContext();
      wac.registerBeanDefinition("controller",new RootBeanDefinition(ImplicitSubPathController.class));
      RootBeanDefinition mappingDef=new RootBeanDefinition(DefaultAnnotationHandlerMapping.class);
      mappingDef.getPropertyValues().add("useDefaultSuffixPattern",false);
      wac.registerBeanDefinition("handlerMapping",mappingDef);
      wac.refresh();
      return wac;
    }
  }
;
  servlet.init(new MockServletConfig());
  MockHttpServletRequest request=new MockHttpServletRequest("GET","/hotels/hotel.with.dot");
  MockHttpServletResponse response=new MockHttpServletResponse();
  servlet.service(request,response);
  assertEquals("test-hotel.with.dot",response.getContentAsString());
}
