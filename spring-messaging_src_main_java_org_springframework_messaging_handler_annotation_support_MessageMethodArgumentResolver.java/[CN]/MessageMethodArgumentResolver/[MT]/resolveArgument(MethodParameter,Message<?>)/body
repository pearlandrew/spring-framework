{
  Class<?> targetMessageType=parameter.getParameterType();
  Class<?> targetPayloadType=getPayloadType(parameter);
  if (!targetMessageType.isAssignableFrom(message.getClass())) {
    String actual=ClassUtils.getQualifiedName(message.getClass());
    String expected=ClassUtils.getQualifiedName(targetMessageType);
    throw new MethodArgumentTypeMismatchException(message,parameter,"The actual message type " + "[" + actual + "] does not match the expected type ["+ expected+ "]");
  }
  Object payload=message.getPayload();
  if (payload == null || targetPayloadType.isInstance(payload)) {
    return message;
  }
  if (isEmptyPayload(payload)) {
    String actual=ClassUtils.getQualifiedName(payload.getClass());
    String expected=ClassUtils.getQualifiedName(targetPayloadType);
    throw new MessageConversionException(message,"Cannot convert from the " + "expected payload type [" + expected + "] to the "+ "actual payload type ["+ actual+ "] when the payload is empty.");
  }
  payload=convertPayload(message,parameter,targetPayloadType);
  return MessageBuilder.createMessage(payload,message.getHeaders());
}
