{
  Class<?> paramType=parameter.getParameterType();
  if (!paramType.isAssignableFrom(message.getClass())) {
    String actual=ClassUtils.getQualifiedName(message.getClass());
    String expected=ClassUtils.getQualifiedName(paramType);
    throw new MethodArgumentTypeMismatchException(message,parameter,"The actual message type " + "[" + actual + "] does not match the expected type ["+ expected+ "]");
  }
  Class<?> targetPayloadType=getPayloadType(parameter);
  Object payload=message.getPayload();
  if (payload != null && !targetPayloadType.isInstance(payload)) {
    throw new MethodArgumentTypeMismatchException(message,parameter,"The expected Message<?> payload type [" + ClassUtils.getQualifiedName(targetPayloadType) + "] does not match the actual payload type ["+ ClassUtils.getQualifiedName(payload.getClass())+ "]");
  }
  return message;
}
