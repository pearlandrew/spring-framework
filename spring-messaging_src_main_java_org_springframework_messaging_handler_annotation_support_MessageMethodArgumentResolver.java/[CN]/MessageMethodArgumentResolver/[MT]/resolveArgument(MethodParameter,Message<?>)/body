{
  Class<?> paramType=parameter.getParameterType();
  if (!paramType.isAssignableFrom(message.getClass())) {
    throw new MethodArgumentTypeMismatchException(message,parameter,"The actual message type [" + message.getClass().getName() + "] "+ "does not match the expected type ["+ paramType.getName()+ "]");
  }
  Class<?> expectedPayloadType=getPayloadType(parameter);
  Object payload=message.getPayload();
  if (expectedPayloadType != null && !expectedPayloadType.isInstance(payload)) {
    throw new MethodArgumentTypeMismatchException(message,parameter,"The expected Message<?> payload type [" + expectedPayloadType.getClass().getName() + "] does not match the actual payload type ["+ payload.getClass().getName()+ "]");
  }
  return message;
}
