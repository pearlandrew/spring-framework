{
  String key=strategyInterface.getName();
  List strategies=null;
  String value=defaultStrategies.getProperty(key);
  if (value != null) {
    String[] classNames=StringUtils.commaDelimitedListToStringArray(value);
    strategies=new ArrayList(classNames.length);
    for (int i=0; i < classNames.length; i++) {
      String className=classNames[i];
      if (JdkVersion.getMajorJavaVersion() < JdkVersion.JAVA_15 && className.indexOf("Annotation") != -1) {
        continue;
      }
      try {
        Class clazz=ClassUtils.forName(className,DispatcherPortlet.class.getClassLoader());
        Object strategy=createDefaultStrategy(context,clazz);
        strategies.add(strategy);
      }
 catch (      ClassNotFoundException ex) {
        throw new BeanInitializationException("Could not find DispatcherPortlet's default strategy class [" + className + "] for interface ["+ key+ "]",ex);
      }
catch (      LinkageError err) {
        throw new BeanInitializationException("Error loading DispatcherPortlet's default strategy class [" + className + "] for interface ["+ key+ "]: problem with class file or dependent class",err);
      }
    }
  }
 else {
    strategies=Collections.EMPTY_LIST;
  }
  return strategies;
}
