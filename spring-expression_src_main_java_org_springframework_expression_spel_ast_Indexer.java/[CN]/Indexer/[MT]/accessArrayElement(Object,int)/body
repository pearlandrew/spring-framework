{
  Class<?> arrayComponentType=ctx.getClass().getComponentType();
  if (arrayComponentType == Double.TYPE) {
    double[] array=(double[])ctx;
    checkAccess(array.length,idx);
    this.exitTypeDescriptor="D";
    return array[idx];
  }
 else   if (arrayComponentType == Float.TYPE) {
    float[] array=(float[])ctx;
    checkAccess(array.length,idx);
    this.exitTypeDescriptor="F";
    return array[idx];
  }
 else   if (arrayComponentType == Long.TYPE) {
    long[] array=(long[])ctx;
    checkAccess(array.length,idx);
    this.exitTypeDescriptor="J";
    return array[idx];
  }
 else   if (arrayComponentType == Integer.TYPE) {
    int[] array=(int[])ctx;
    checkAccess(array.length,idx);
    this.exitTypeDescriptor="I";
    return array[idx];
  }
 else   if (arrayComponentType == Short.TYPE) {
    short[] array=(short[])ctx;
    checkAccess(array.length,idx);
    this.exitTypeDescriptor="S";
    return array[idx];
  }
 else   if (arrayComponentType == Byte.TYPE) {
    byte[] array=(byte[])ctx;
    checkAccess(array.length,idx);
    this.exitTypeDescriptor="B";
    return array[idx];
  }
 else   if (arrayComponentType == Character.TYPE) {
    char[] array=(char[])ctx;
    checkAccess(array.length,idx);
    this.exitTypeDescriptor="C";
    return array[idx];
  }
 else   if (arrayComponentType == Boolean.TYPE) {
    boolean[] array=(boolean[])ctx;
    checkAccess(array.length,idx);
    this.exitTypeDescriptor="Z";
    return array[idx];
  }
 else {
    Object[] array=(Object[])ctx;
    checkAccess(array.length,idx);
    Object retValue=array[idx];
    this.exitTypeDescriptor=CodeFlow.toDescriptor(arrayComponentType);
    return retValue;
  }
}
