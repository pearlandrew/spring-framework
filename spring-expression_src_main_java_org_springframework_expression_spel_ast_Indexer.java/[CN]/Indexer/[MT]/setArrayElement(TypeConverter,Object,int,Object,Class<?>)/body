{
  if (arrayComponentType == Integer.TYPE) {
    int[] array=(int[])ctx;
    checkAccess(array.length,idx);
    array[idx]=(Integer)converter.convertValue(newValue,TypeDescriptor.forObject(newValue),TypeDescriptor.valueOf(Integer.class));
  }
 else   if (arrayComponentType == Boolean.TYPE) {
    boolean[] array=(boolean[])ctx;
    checkAccess(array.length,idx);
    array[idx]=(Boolean)converter.convertValue(newValue,TypeDescriptor.forObject(newValue),TypeDescriptor.valueOf(Boolean.class));
  }
 else   if (arrayComponentType == Character.TYPE) {
    char[] array=(char[])ctx;
    checkAccess(array.length,idx);
    array[idx]=(Character)converter.convertValue(newValue,TypeDescriptor.forObject(newValue),TypeDescriptor.valueOf(Character.class));
  }
 else   if (arrayComponentType == Long.TYPE) {
    long[] array=(long[])ctx;
    checkAccess(array.length,idx);
    array[idx]=(Long)converter.convertValue(newValue,TypeDescriptor.forObject(newValue),TypeDescriptor.valueOf(Long.class));
  }
 else   if (arrayComponentType == Short.TYPE) {
    short[] array=(short[])ctx;
    checkAccess(array.length,idx);
    array[idx]=(Short)converter.convertValue(newValue,TypeDescriptor.forObject(newValue),TypeDescriptor.valueOf(Short.class));
  }
 else   if (arrayComponentType == Double.TYPE) {
    double[] array=(double[])ctx;
    checkAccess(array.length,idx);
    array[idx]=(Double)converter.convertValue(newValue,TypeDescriptor.forObject(newValue),TypeDescriptor.valueOf(Double.class));
  }
 else   if (arrayComponentType == Float.TYPE) {
    float[] array=(float[])ctx;
    checkAccess(array.length,idx);
    array[idx]=(Float)converter.convertValue(newValue,TypeDescriptor.forObject(newValue),TypeDescriptor.valueOf(Float.class));
  }
 else   if (arrayComponentType == Byte.TYPE) {
    byte[] array=(byte[])ctx;
    checkAccess(array.length,idx);
    array[idx]=(Byte)converter.convertValue(newValue,TypeDescriptor.forObject(newValue),TypeDescriptor.valueOf(Byte.class));
  }
 else {
    Object[] array=(Object[])ctx;
    checkAccess(array.length,idx);
    array[idx]=converter.convertValue(newValue,TypeDescriptor.forObject(newValue),TypeDescriptor.valueOf(arrayComponentType));
  }
}
