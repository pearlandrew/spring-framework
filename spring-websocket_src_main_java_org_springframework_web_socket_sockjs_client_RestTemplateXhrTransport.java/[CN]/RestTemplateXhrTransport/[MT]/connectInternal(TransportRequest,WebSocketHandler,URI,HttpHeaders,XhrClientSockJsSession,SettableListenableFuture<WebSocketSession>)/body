{
  getTaskExecutor().execute(new Runnable(){
    @Override public void run(){
      XhrRequestCallback requestCallback=new XhrRequestCallback(handshakeHeaders);
      XhrRequestCallback requestCallbackAfterHandshake=new XhrRequestCallback(getRequestHeaders());
      XhrReceiveExtractor responseExtractor=new XhrReceiveExtractor(session);
      while (true) {
        if (session.isDisconnected()) {
          session.afterTransportClosed(null);
          break;
        }
        try {
          if (logger.isTraceEnabled()) {
            logger.trace("Starting XHR receive request, url=" + receiveUrl);
          }
          getRestTemplate().execute(receiveUrl,HttpMethod.POST,requestCallback,responseExtractor);
          requestCallback=requestCallbackAfterHandshake;
        }
 catch (        Throwable ex) {
          if (!connectFuture.isDone()) {
            connectFuture.setException(ex);
          }
 else {
            session.handleTransportError(ex);
            session.afterTransportClosed(new CloseStatus(1006,ex.getMessage()));
          }
          break;
        }
      }
    }
  }
);
}
