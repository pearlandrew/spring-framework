{
  try {
    Expression expr=parser.parseExpression(expression);
    if (expr == null) {
      fail("Parser returned null for expression");
    }
    if (expectedReturnType != null) {
      expr.getValue(eContext,expectedReturnType);
    }
 else {
      expr.getValue(eContext);
    }
    fail("Should have failed with message " + expectedMessage);
  }
 catch (  EvaluationException ee) {
    SpelEvaluationException ex=(SpelEvaluationException)ee;
    if (ex.getMessageCode() != expectedMessage) {
      assertEquals("Failed to get expected message",expectedMessage,ex.getMessageCode());
    }
    if (otherProperties != null && otherProperties.length != 0) {
      int pos=((Integer)otherProperties[0]).intValue();
      assertEquals("Did not get correct position reported in error ",pos,ex.getPosition());
      if (otherProperties.length > 1) {
        Object[] inserts=ex.getInserts();
        if (inserts == null) {
          inserts=new Object[0];
        }
        if (inserts.length < otherProperties.length - 1) {
          fail("Cannot check " + (otherProperties.length - 1) + " properties of the exception, it only has "+ inserts.length+ " inserts");
        }
        for (int i=1; i < otherProperties.length; i++) {
          if (otherProperties[i] == null) {
            if (inserts[i - 1] != null) {
              fail("Insert does not match, expected 'null' but insert value was '" + inserts[i - 1] + "'");
            }
          }
 else           if (inserts[i - 1] == null) {
            if (otherProperties[i] != null) {
              fail("Insert does not match, expected '" + otherProperties[i] + "' but insert value was 'null'");
            }
          }
 else           if (!inserts[i - 1].equals(otherProperties[i])) {
            fail("Insert does not match, expected '" + otherProperties[i] + "' but insert value was '"+ inserts[i - 1]+ "'");
          }
        }
      }
    }
  }
}
