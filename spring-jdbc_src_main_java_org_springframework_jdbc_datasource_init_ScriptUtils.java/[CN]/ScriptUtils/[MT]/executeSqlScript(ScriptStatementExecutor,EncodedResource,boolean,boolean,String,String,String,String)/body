{
  if (logger.isInfoEnabled()) {
    logger.info("Executing SQL script from " + resource);
  }
  long startTime=System.currentTimeMillis();
  List<String> statements=new LinkedList<String>();
  String script;
  try {
    script=readScript(resource,commentPrefix,separator);
  }
 catch (  IOException ex) {
    throw new CannotReadScriptException(resource,ex);
  }
  if (separator == null) {
    separator=DEFAULT_STATEMENT_SEPARATOR;
    if (!containsSqlScriptDelimiters(script,separator)) {
      separator="\n";
    }
  }
  splitSqlScript(script,separator,commentPrefix,blockCommentStartDelim,blockCommentEndDelim,statements);
  int lineNumber=0;
  for (  String statement : statements) {
    lineNumber++;
    try {
      int rowsAffected=executor.executeScriptStatement(statement);
      if (logger.isDebugEnabled()) {
        logger.debug(rowsAffected + " returned as updateCount for SQL: " + statement);
      }
    }
 catch (    DataAccessException ex) {
      boolean dropStatement=StringUtils.startsWithIgnoreCase(statement.trim(),"drop");
      if (continueOnError || (dropStatement && ignoreFailedDrops)) {
        if (logger.isDebugEnabled()) {
          logger.debug("Failed to execute SQL script statement at line " + lineNumber + " of resource "+ resource+ ": "+ statement,ex);
        }
      }
 else {
        throw new ScriptStatementFailedException(statement,lineNumber,resource,ex);
      }
    }
  }
  long elapsedTime=System.currentTimeMillis() - startTime;
  if (logger.isInfoEnabled()) {
    logger.info("Done executing SQL script from " + resource + " in "+ elapsedTime+ " ms.");
  }
}
