{
  try {
    if (logger.isInfoEnabled()) {
      logger.info("Executing SQL script from " + resource);
    }
    long startTime=System.currentTimeMillis();
    String script;
    try {
      script=readScript(resource,commentPrefix,separator);
    }
 catch (    IOException ex) {
      throw new CannotReadScriptException(resource,ex);
    }
    if (separator == null) {
      separator=DEFAULT_STATEMENT_SEPARATOR;
    }
    if (!EOF_STATEMENT_SEPARATOR.equals(separator) && !containsSqlScriptDelimiters(script,separator)) {
      separator=FALLBACK_STATEMENT_SEPARATOR;
    }
    List<String> statements=new LinkedList<String>();
    splitSqlScript(resource,script,separator,commentPrefix,blockCommentStartDelimiter,blockCommentEndDelimiter,statements);
    int stmtNumber=0;
    Statement stmt=connection.createStatement();
    try {
      for (      String statement : statements) {
        stmtNumber++;
        try {
          stmt.execute(statement);
          int rowsAffected=stmt.getUpdateCount();
          if (logger.isDebugEnabled()) {
            logger.debug(rowsAffected + " returned as updateCount for SQL: " + statement);
          }
        }
 catch (        SQLException ex) {
          boolean dropStatement=StringUtils.startsWithIgnoreCase(statement.trim(),"drop");
          if (continueOnError || (dropStatement && ignoreFailedDrops)) {
            if (logger.isDebugEnabled()) {
              logger.debug("Failed to execute SQL script statement #" + stmtNumber + " of resource "+ resource+ ": "+ statement,ex);
            }
          }
 else {
            throw new ScriptStatementFailedException(statement,stmtNumber,resource,ex);
          }
        }
      }
    }
  finally {
      try {
        stmt.close();
      }
 catch (      Throwable ex) {
        logger.debug("Could not close JDBC Statement",ex);
      }
    }
    long elapsedTime=System.currentTimeMillis() - startTime;
    if (logger.isInfoEnabled()) {
      logger.info("Executed SQL script from " + resource + " in "+ elapsedTime+ " ms.");
    }
  }
 catch (  Exception ex) {
    if (ex instanceof ScriptException) {
      throw (ScriptException)ex;
    }
    throw new UncategorizedScriptException("Failed to execute database script from resource [" + resource + "]",ex);
  }
}
