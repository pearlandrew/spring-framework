{
  try {
    Class<?> relevantClass=(targetObject instanceof Class ? (Class<?>)targetObject : targetObject.getClass());
    DiscoveredMethod dMethod=ReflectionUtils.findMethod(context.getTypeUtils().getTypeConverter(),name,argumentTypes,relevantClass,allowMatchesRequiringArgumentConversion);
    if (dMethod == null) {
      return null;
    }
    return new ReflectionMethodExecutor(dMethod.theMethod,dMethod.argumentsRequiringConversion);
  }
 catch (  EvaluationException e) {
    throw new AccessException(null,e);
  }
}
