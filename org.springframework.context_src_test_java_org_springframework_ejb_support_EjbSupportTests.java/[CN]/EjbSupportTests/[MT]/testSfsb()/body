{
  SessionContext sc=createMock(SessionContext.class);
  replay(sc);
  final BeanFactory bf=new StaticListableBeanFactory();
  BeanFactoryLocator bfl=new BeanFactoryLocator(){
    public BeanFactoryReference useBeanFactory(    String factoryKey) throws FatalBeanException {
      return new BeanFactoryReference(){
        public BeanFactory getFactory(){
          return bf;
        }
        public void release() throws FatalBeanException {
        }
      }
;
    }
  }
;
@SuppressWarnings("serial") class MySfsb extends AbstractStatefulSessionBean {
    public void ejbCreate() throws CreateException {
      loadBeanFactory();
      assertTrue(getBeanFactory() == bf);
    }
    public void ejbActivate() throws EJBException, RemoteException {
      throw new UnsupportedOperationException("ejbActivate");
    }
    public void ejbPassivate() throws EJBException, RemoteException {
      throw new UnsupportedOperationException("ejbPassivate");
    }
  }
  MySfsb sfsb=new MySfsb();
  sfsb.setBeanFactoryLocator(bfl);
  sfsb.setSessionContext(sc);
  sfsb.ejbCreate();
  assertTrue(sc == sfsb.getSessionContext());
}
