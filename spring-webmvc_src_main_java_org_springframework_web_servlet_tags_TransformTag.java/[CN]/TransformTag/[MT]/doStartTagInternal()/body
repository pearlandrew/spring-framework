{
  Object resolvedValue=this.value;
  if (this.value instanceof String) {
    String strValue=(String)this.value;
    resolvedValue=ExpressionEvaluationUtils.evaluate("value",strValue,pageContext);
  }
  if (resolvedValue != null) {
    EditorAwareTag tag=(EditorAwareTag)TagSupport.findAncestorWithClass(this,EditorAwareTag.class);
    if (tag == null) {
      throw new JspException("TransformTag can only be used within EditorAwareTag (e.g. BindTag)");
    }
    String result=null;
    PropertyEditor editor=tag.getEditor();
    if (editor != null) {
      editor.setValue(resolvedValue);
      result=editor.getAsText();
    }
 else {
      result=resolvedValue.toString();
    }
    result=isHtmlEscape() ? HtmlUtils.htmlEscape(result) : result;
    String resolvedVar=ExpressionEvaluationUtils.evaluateString("var",this.var,pageContext);
    if (resolvedVar != null) {
      String resolvedScope=ExpressionEvaluationUtils.evaluateString("scope",this.scope,pageContext);
      pageContext.setAttribute(resolvedVar,result,TagUtils.getScope(resolvedScope));
    }
 else {
      try {
        pageContext.getOut().print(result);
      }
 catch (      IOException ex) {
        throw new JspException(ex);
      }
    }
  }
  return SKIP_BODY;
}
