{
  for (  String memberClassName : metadata.getMemberClassNames()) {
    MetadataReader reader=this.metadataReaderFactory.getMetadataReader(memberClassName);
    AnnotationMetadata memberClassMetadata=reader.getAnnotationMetadata();
    if (ConfigurationClassUtils.isConfigurationCandidate(memberClassMetadata)) {
      processConfigurationClass(new ConfigurationClass(reader,true));
    }
  }
  Map<String,Object> propertySourceAttributes=metadata.getAnnotationAttributes(org.springframework.context.annotation.PropertySource.class.getName());
  if (propertySourceAttributes != null) {
    String name=(String)propertySourceAttributes.get("name");
    String[] locations=(String[])propertySourceAttributes.get("value");
    ClassLoader classLoader=this.resourceLoader.getClassLoader();
    for (    String location : locations) {
      location=this.environment.resolveRequiredPlaceholders(location);
      ResourcePropertySource ps=StringUtils.hasText(name) ? new ResourcePropertySource(name,location,classLoader) : new ResourcePropertySource(location,classLoader);
      this.propertySources.push(ps);
    }
  }
  AnnotationAttributes componentScan=MetadataUtils.attributesFor(metadata,ComponentScan.class);
  if (componentScan != null) {
    Set<BeanDefinitionHolder> scannedBeanDefinitions=this.componentScanParser.parse(componentScan);
    for (    BeanDefinitionHolder holder : scannedBeanDefinitions) {
      if (ConfigurationClassUtils.checkConfigurationClassCandidate(holder.getBeanDefinition(),metadataReaderFactory)) {
        this.parse(holder.getBeanDefinition().getBeanClassName(),holder.getBeanName());
      }
    }
  }
  List<Map<String,Object>> allImportAttribs=findAllAnnotationAttributes(Import.class,metadata.getClassName(),true);
  for (  Map<String,Object> importAttribs : allImportAttribs) {
    processImport(configClass,(String[])importAttribs.get("value"),true);
  }
  if (metadata.isAnnotated(ImportResource.class.getName())) {
    String[] resources=(String[])metadata.getAnnotationAttributes(ImportResource.class.getName()).get("value");
    Class<?> readerClass=(Class<?>)metadata.getAnnotationAttributes(ImportResource.class.getName()).get("reader");
    if (readerClass == null) {
      throw new IllegalStateException("No reader class associated with imported resources: " + StringUtils.arrayToCommaDelimitedString(resources));
    }
    for (    String resource : resources) {
      configClass.addImportedResource(resource,readerClass);
    }
  }
  Set<MethodMetadata> beanMethods=metadata.getAnnotatedMethods(Bean.class.getName());
  for (  MethodMetadata methodMetadata : beanMethods) {
    configClass.addBeanMethod(new BeanMethod(methodMetadata,configClass));
  }
}
