{
  boolean hasEligibleProfile=false;
  if (this.environment == null) {
    hasEligibleProfile=true;
  }
 else {
    if (!configClass.getMetadata().hasAnnotation(Profile.class.getName())) {
      hasEligibleProfile=true;
    }
 else {
      for (      String profile : (String[])configClass.getMetadata().getAnnotationAttributes(Profile.class.getName()).get(Profile.CANDIDATE_PROFILES_ATTRIB_NAME)) {
        if (this.environment.getActiveProfiles().contains(profile)) {
          hasEligibleProfile=true;
          break;
        }
      }
    }
  }
  if (!hasEligibleProfile) {
    return;
  }
  AnnotationMetadata metadata=configClass.getMetadata();
  while (metadata != null) {
    doProcessConfigurationClass(configClass,metadata);
    String superClassName=metadata.getSuperClassName();
    if (superClassName != null && !Object.class.getName().equals(superClassName)) {
      if (metadata instanceof StandardAnnotationMetadata) {
        Class<?> clazz=((StandardAnnotationMetadata)metadata).getIntrospectedClass();
        metadata=new StandardAnnotationMetadata(clazz.getSuperclass());
      }
 else {
        MetadataReader reader=this.metadataReaderFactory.getMetadataReader(superClassName);
        metadata=reader.getAnnotationMetadata();
      }
    }
 else {
      metadata=null;
    }
  }
  if (this.configurationClasses.contains(configClass) && configClass.getBeanName() != null) {
    this.configurationClasses.remove(configClass);
  }
  this.configurationClasses.add(configClass);
}
