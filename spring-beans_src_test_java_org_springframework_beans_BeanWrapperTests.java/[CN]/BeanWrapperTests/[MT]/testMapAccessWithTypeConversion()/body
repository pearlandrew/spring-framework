{
  IndexedTestBean bean=new IndexedTestBean();
  BeanWrapper bw=new BeanWrapperImpl(bean);
  bw.registerCustomEditor(TestBean.class,new PropertyEditorSupport(){
    public void setAsText(    String text) throws IllegalArgumentException {
      if (!StringUtils.hasLength(text)) {
        throw new IllegalArgumentException();
      }
      setValue(new TestBean(text));
    }
  }
);
  MutablePropertyValues pvs=new MutablePropertyValues();
  pvs.add("map[key1]","rod");
  pvs.add("map[key2]","rob");
  bw.setPropertyValues(pvs);
  assertEquals("rod",((TestBean)bean.getMap().get("key1")).getName());
  assertEquals("rob",((TestBean)bean.getMap().get("key2")).getName());
  pvs=new MutablePropertyValues();
  pvs.add("map[key1]","rod");
  pvs.add("map[key2]","");
  try {
    bw.setPropertyValues(pvs);
    fail("Should have thrown TypeMismatchException");
  }
 catch (  PropertyBatchUpdateException ex) {
    PropertyAccessException pae=ex.getPropertyAccessException("map[key2]");
    assertTrue(pae instanceof TypeMismatchException);
  }
}
