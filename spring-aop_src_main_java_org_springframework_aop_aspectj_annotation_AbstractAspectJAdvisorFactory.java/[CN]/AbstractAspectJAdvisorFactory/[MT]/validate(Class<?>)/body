{
  if (aspectClass.getSuperclass().getAnnotation(Aspect.class) != null && !Modifier.isAbstract(aspectClass.getSuperclass().getModifiers())) {
    throw new AopConfigException("[" + aspectClass.getName() + "] cannot extend concrete aspect ["+ aspectClass.getSuperclass().getName()+ "]");
  }
  AjType<?> ajType=AjTypeSystem.getAjType(aspectClass);
  if (!ajType.isAspect()) {
    throw new NotAnAtAspectException(aspectClass);
  }
  if (ajType.getPerClause().getKind() == PerClauseKind.PERCFLOW) {
    throw new AopConfigException(aspectClass.getName() + " uses percflow instantiation model: " + "This is not supported in Spring AOP.");
  }
  if (ajType.getPerClause().getKind() == PerClauseKind.PERCFLOWBELOW) {
    throw new AopConfigException(aspectClass.getName() + " uses percflowbelow instantiation model: " + "This is not supported in Spring AOP.");
  }
}
