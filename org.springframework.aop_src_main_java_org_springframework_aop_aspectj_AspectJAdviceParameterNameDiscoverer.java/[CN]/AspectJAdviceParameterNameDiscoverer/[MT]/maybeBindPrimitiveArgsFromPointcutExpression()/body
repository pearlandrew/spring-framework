{
  int numUnboundPrimitives=countNumberOfUnboundPrimitiveArguments();
  if (numUnboundPrimitives > 1) {
    throw new AmbiguousBindingException("Found '" + numUnboundPrimitives + "' unbound primitive arguments with no way to distinguish between them.");
  }
  if (numUnboundPrimitives == 1) {
    List<String> varNames=new ArrayList<String>();
    String[] tokens=StringUtils.tokenizeToStringArray(this.pointcutExpression," ");
    for (int i=0; i < tokens.length; i++) {
      if (tokens[i].equals("args") || tokens[i].startsWith("args(")) {
        PointcutBody body=getPointcutBody(tokens,i);
        i+=body.numTokensConsumed;
        maybeExtractVariableNamesFromArgs(body.text,varNames);
      }
    }
    if (varNames.size() > 1) {
      throw new AmbiguousBindingException("Found " + varNames.size() + " candidate variable names but only one candidate binding slot when matching primitive args");
    }
 else     if (varNames.size() == 1) {
      for (int i=0; i < this.argumentTypes.length; i++) {
        if (isUnbound(i) && this.argumentTypes[i].isPrimitive()) {
          bindParameterName(i,(String)varNames.get(0));
          break;
        }
      }
    }
  }
}
