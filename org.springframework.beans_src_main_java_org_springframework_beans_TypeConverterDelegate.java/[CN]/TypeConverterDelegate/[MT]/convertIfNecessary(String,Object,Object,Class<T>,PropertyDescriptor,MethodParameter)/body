{
  Object convertedValue=newValue;
  PropertyEditor editor=this.propertyEditorRegistry.findCustomEditor(requiredType,propertyName);
  if (editor != null || (requiredType != null && !ClassUtils.isAssignableValue(requiredType,convertedValue))) {
    if (editor == null) {
      editor=findDefaultEditor(requiredType,descriptor);
    }
    convertedValue=doConvertValue(oldValue,convertedValue,requiredType,editor);
  }
  if (requiredType != null) {
    if (convertedValue != null) {
      if (String.class.equals(requiredType) && ClassUtils.isPrimitiveOrWrapper(convertedValue.getClass())) {
        return (T)convertedValue.toString();
      }
 else       if (requiredType.isArray()) {
        return (T)convertToTypedArray(convertedValue,propertyName,requiredType.getComponentType());
      }
 else       if (convertedValue instanceof Collection && CollectionFactory.isApproximableCollectionType(requiredType)) {
        convertedValue=convertToTypedCollection((Collection)convertedValue,propertyName,methodParam);
      }
 else       if (convertedValue instanceof Map && CollectionFactory.isApproximableMapType(requiredType)) {
        convertedValue=convertToTypedMap((Map)convertedValue,propertyName,methodParam);
      }
 else       if (convertedValue instanceof String && !requiredType.isInstance(convertedValue)) {
        String strValue=((String)convertedValue).trim();
        if (requiredType.isEnum() && "".equals(strValue)) {
          return null;
        }
        try {
          Field enumField=requiredType.getField(strValue);
          convertedValue=enumField.get(null);
        }
 catch (        Throwable ex) {
          if (logger.isTraceEnabled()) {
            logger.trace("Field [" + convertedValue + "] isn't an enum value",ex);
          }
        }
      }
    }
    if (!ClassUtils.isAssignableValue(requiredType,convertedValue)) {
      StringBuilder msg=new StringBuilder();
      msg.append("Cannot convert value of type [").append(ClassUtils.getDescriptiveType(newValue));
      msg.append("] to required type [").append(ClassUtils.getQualifiedName(requiredType)).append("]");
      if (propertyName != null) {
        msg.append(" for property '").append(propertyName).append("'");
      }
      if (editor != null) {
        msg.append(": PropertyEditor [").append(editor.getClass().getName()).append("] returned inappropriate value");
        throw new IllegalArgumentException(msg.toString());
      }
 else {
        msg.append(": no matching editors or conversion strategy found");
        throw new IllegalStateException(msg.toString());
      }
    }
  }
  return (T)convertedValue;
}
