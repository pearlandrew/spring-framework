{
  MockServletContext sc=new MockServletContext("");
  XmlWebApplicationContext wac=new XmlWebApplicationContext();
  wac.setServletContext(sc);
  wac.setConfigLocations(new String[]{"/org/springframework/web/servlet/handler/map2.xml"});
  wac.refresh();
  Object bean=wac.getBean("mainController");
  Object otherBean=wac.getBean("otherController");
  Object defaultBean=wac.getBean("starController");
  HandlerMapping hm=(HandlerMapping)wac.getBean(beanName);
  MockHttpServletRequest req=new MockHttpServletRequest("GET","/welcome.html");
  HandlerExecutionChain hec=getHandler(hm,req);
  assertTrue("Handler is correct bean",hec != null && hec.getHandler() == bean);
  assertEquals("/welcome.html",req.getAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE));
  req=new MockHttpServletRequest("GET","/welcome.x");
  hec=getHandler(hm,req);
  assertTrue("Handler is correct bean",hec != null && hec.getHandler() == otherBean);
  assertEquals("welcome.x",req.getAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE));
  req=new MockHttpServletRequest("GET","/welcome/");
  hec=getHandler(hm,req);
  assertTrue("Handler is correct bean",hec != null && hec.getHandler() == otherBean);
  assertEquals("welcome",req.getAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE));
  req=new MockHttpServletRequest("GET","/");
  req.setServletPath("/welcome.html");
  hec=getHandler(hm,req);
  assertTrue("Handler is correct bean",hec != null && hec.getHandler() == bean);
  req=new MockHttpServletRequest("GET","/welcome.html");
  req.setContextPath("/app");
  hec=getHandler(hm,req);
  assertTrue("Handler is correct bean",hec != null && hec.getHandler() == bean);
  req=new MockHttpServletRequest("GET","/show.html");
  hec=getHandler(hm,req);
  assertTrue("Handler is correct bean",hec != null && hec.getHandler() == bean);
  req=new MockHttpServletRequest("GET","/bookseats.html");
  hec=getHandler(hm,req);
  assertTrue("Handler is correct bean",hec != null && hec.getHandler() == bean);
  req=new MockHttpServletRequest("GET","/original-welcome.html");
  req.setAttribute(WebUtils.INCLUDE_REQUEST_URI_ATTRIBUTE,"/welcome.html");
  hec=getHandler(hm,req);
  assertTrue("Handler is correct bean",hec != null && hec.getHandler() == bean);
  req=new MockHttpServletRequest("GET","/original-show.html");
  req.setAttribute(WebUtils.INCLUDE_REQUEST_URI_ATTRIBUTE,"/show.html");
  hec=getHandler(hm,req);
  assertTrue("Handler is correct bean",hec != null && hec.getHandler() == bean);
  req=new MockHttpServletRequest("GET","/original-bookseats.html");
  req.setAttribute(WebUtils.INCLUDE_REQUEST_URI_ATTRIBUTE,"/bookseats.html");
  hec=getHandler(hm,req);
  assertTrue("Handler is correct bean",hec != null && hec.getHandler() == bean);
  req=new MockHttpServletRequest("GET","/");
  hec=getHandler(hm,req);
  assertTrue("Handler is correct bean",hec != null && hec.getHandler() == bean);
  assertEquals("/",req.getAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE));
  req=new MockHttpServletRequest("GET","/somePath");
  hec=getHandler(hm,req);
  assertTrue("Handler is correct bean",hec != null && hec.getHandler() == defaultBean);
  assertEquals("/somePath",req.getAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE));
}
