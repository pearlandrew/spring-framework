{
  MethodParameter[] parameters=getMethodParameters();
  Object[] args=new Object[parameters.length];
  for (int i=0; i < parameters.length; i++) {
    MethodParameter parameter=parameters[i];
    parameter.initParameterNameDiscovery(this.parameterNameDiscoverer);
    GenericTypeResolver.resolveParameterType(parameter,getBean().getClass());
    args[i]=resolveProvidedArgument(parameter,providedArgs);
    if (args[i] != null) {
      continue;
    }
    for (    HandlerMethodArgumentResolver resolver : this.argumentResolvers) {
      if (resolver.supportsParameter(parameter)) {
        try {
          args[i]=resolver.resolveArgument(parameter,request);
          break;
        }
 catch (        Exception ex) {
          if (logger.isDebugEnabled()) {
            logger.debug(getArgumentResolutionErrorMessage("Error resolving argument",i),ex);
          }
          throw ex;
        }
      }
    }
    if (args[i] == null) {
      String msg=getArgumentResolutionErrorMessage("No suitable resolver for argument",i);
      throw new IllegalStateException(msg);
    }
  }
  return args;
}
