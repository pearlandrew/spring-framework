{
  MethodParameter[] parameters=getMethodParameters();
  List<Publisher<Object>> valuePublishers=new ArrayList<>(parameters.length);
  for (int i=0; i < parameters.length; i++) {
    MethodParameter parameter=parameters[i];
    parameter.initParameterNameDiscovery(this.parameterNameDiscoverer);
    GenericTypeResolver.resolveParameterType(parameter,getBean().getClass());
    Object value=resolveProvidedArgument(parameter,providedArgs);
    if (value != null) {
      valuePublishers.add(Publishers.just(value));
      continue;
    }
    boolean resolved=false;
    for (    HandlerMethodArgumentResolver resolver : this.argumentResolvers) {
      if (resolver.supportsParameter(parameter)) {
        try {
          valuePublishers.add(resolver.resolveArgument(parameter,request));
          resolved=true;
          break;
        }
 catch (        Exception ex) {
          String msg=buildArgErrorMessage("Error resolving argument",i);
          valuePublishers.add(Publishers.error(new IllegalStateException(msg,ex)));
          break;
        }
      }
    }
    if (!resolved) {
      String msg=buildArgErrorMessage("No suitable resolver for argument",i);
      valuePublishers.add(Publishers.error(new IllegalStateException(msg)));
      break;
    }
  }
  return valuePublishers;
}
