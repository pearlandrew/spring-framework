{
  String requestOrigin=request.getHeaders().getOrigin();
  String allowOrigin=checkOrigin(config,requestOrigin);
  HttpMethod requestMethod=getMethodToUse(request,isPreFlight);
  List<HttpMethod> allowMethods=checkMethods(config,requestMethod);
  List<String> requestHeaders=getHeadersToUse(request,isPreFlight);
  List<String> allowHeaders=checkHeaders(config,requestHeaders);
  if (allowOrigin == null || allowMethods == null || (isPreFlight && allowHeaders == null)) {
    handleInvalidCorsRequest(response);
    return false;
  }
  HttpHeaders responseHeaders=response.getHeaders();
  responseHeaders.setAccessControlAllowOrigin(allowOrigin);
  responseHeaders.add(HttpHeaders.VARY,HttpHeaders.ORIGIN);
  if (isPreFlight) {
    responseHeaders.setAccessControlAllowMethods(allowMethods);
  }
  if (isPreFlight && !allowHeaders.isEmpty()) {
    responseHeaders.setAccessControlAllowHeaders(allowHeaders);
  }
  if (!CollectionUtils.isEmpty(config.getExposedHeaders())) {
    responseHeaders.setAccessControlExposeHeaders(config.getExposedHeaders());
  }
  if (Boolean.TRUE.equals(config.getAllowCredentials())) {
    responseHeaders.setAccessControlAllowCredentials(true);
  }
  if (isPreFlight && config.getMaxAge() != null) {
    responseHeaders.setAccessControlMaxAge(config.getMaxAge());
  }
  return true;
}
