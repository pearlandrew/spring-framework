{
  NumberPropertyBean bean=new NumberPropertyBean();
  BeanWrapper bw=new BeanWrapperImpl(bean);
  String byteValue=" " + Byte.MAX_VALUE + " ";
  String shortValue=" " + Short.MAX_VALUE + " ";
  String intValue=" " + Integer.MAX_VALUE + " ";
  String longValue=" " + Long.MAX_VALUE + " ";
  String floatValue=" " + Float.MAX_VALUE + " ";
  String doubleValue=" " + Double.MAX_VALUE + " ";
  bw.setPropertyValue("myPrimitiveByte",byteValue);
  bw.setPropertyValue("myByte",byteValue);
  bw.setPropertyValue("myPrimitiveShort",shortValue);
  bw.setPropertyValue("myShort",shortValue);
  bw.setPropertyValue("myPrimitiveInt",intValue);
  bw.setPropertyValue("myInteger",intValue);
  bw.setPropertyValue("myPrimitiveLong",longValue);
  bw.setPropertyValue("myLong",longValue);
  bw.setPropertyValue("myPrimitiveFloat",floatValue);
  bw.setPropertyValue("myFloat",floatValue);
  bw.setPropertyValue("myPrimitiveDouble",doubleValue);
  bw.setPropertyValue("myDouble",doubleValue);
  assertEquals(Byte.MAX_VALUE,bean.getMyPrimitiveByte());
  assertEquals(Byte.MAX_VALUE,bean.getMyByte().byteValue());
  assertEquals(Short.MAX_VALUE,bean.getMyPrimitiveShort());
  assertEquals(Short.MAX_VALUE,bean.getMyShort().shortValue());
  assertEquals(Integer.MAX_VALUE,bean.getMyPrimitiveInt());
  assertEquals(Integer.MAX_VALUE,bean.getMyInteger().intValue());
  assertEquals(Long.MAX_VALUE,bean.getMyPrimitiveLong());
  assertEquals(Long.MAX_VALUE,bean.getMyLong().longValue());
  assertEquals(Float.MAX_VALUE,bean.getMyPrimitiveFloat(),0.001);
  assertEquals(Float.MAX_VALUE,bean.getMyFloat().floatValue(),0.001);
  assertEquals(Double.MAX_VALUE,bean.getMyPrimitiveDouble(),0.001);
  assertEquals(Double.MAX_VALUE,bean.getMyDouble().doubleValue(),0.001);
}
