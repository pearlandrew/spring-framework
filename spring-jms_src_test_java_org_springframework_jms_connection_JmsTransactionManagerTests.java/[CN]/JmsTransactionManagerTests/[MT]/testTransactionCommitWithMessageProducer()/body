{
  Destination dest=new StubQueue();
  MockControl cfControl=MockControl.createControl(ConnectionFactory.class);
  ConnectionFactory cf=(ConnectionFactory)cfControl.getMock();
  MockControl conControl=MockControl.createControl(Connection.class);
  Connection con=(Connection)conControl.getMock();
  MockControl sessionControl=MockControl.createControl(Session.class);
  Session session=(Session)sessionControl.getMock();
  MockControl producerControl=MockControl.createControl(MessageProducer.class);
  MessageProducer producer=(MessageProducer)producerControl.getMock();
  MockControl messageControl=MockControl.createControl(Message.class);
  final Message message=(Message)messageControl.getMock();
  cf.createConnection();
  cfControl.setReturnValue(con,1);
  con.createSession(true,Session.AUTO_ACKNOWLEDGE);
  conControl.setReturnValue(session,1);
  session.createProducer(dest);
  sessionControl.setReturnValue(producer,1);
  producer.send(message);
  producerControl.setVoidCallable(1);
  session.getTransacted();
  sessionControl.setReturnValue(true,1);
  session.commit();
  sessionControl.setVoidCallable(1);
  producer.close();
  producerControl.setVoidCallable(1);
  session.close();
  sessionControl.setVoidCallable(1);
  con.close();
  conControl.setVoidCallable(1);
  producerControl.replay();
  sessionControl.replay();
  conControl.replay();
  cfControl.replay();
  JmsTransactionManager tm=new JmsTransactionManager(cf);
  TransactionStatus ts=tm.getTransaction(new DefaultTransactionDefinition());
  JmsTemplate jt=new JmsTemplate(cf);
  jt.send(dest,new MessageCreator(){
    @Override public Message createMessage(    Session session) throws JMSException {
      return message;
    }
  }
);
  tm.commit(ts);
  producerControl.verify();
  sessionControl.verify();
  conControl.verify();
  cfControl.verify();
}
