{
  MockControl cfControl=MockControl.createControl(ConnectionFactory.class);
  ConnectionFactory cf=(ConnectionFactory)cfControl.getMock();
  MockControl conControl=MockControl.createControl(Connection.class);
  Connection con=(Connection)conControl.getMock();
  MockControl sessionControl=MockControl.createControl(Session.class);
  final Session session=(Session)sessionControl.getMock();
  cf.createConnection();
  cfControl.setReturnValue(con,1);
  con.createSession(true,Session.AUTO_ACKNOWLEDGE);
  conControl.setReturnValue(session,1);
  session.commit();
  sessionControl.setVoidCallable(1);
  session.close();
  sessionControl.setVoidCallable(1);
  con.close();
  conControl.setVoidCallable(1);
  sessionControl.replay();
  conControl.replay();
  cfControl.replay();
  JmsTransactionManager tm=new JmsTransactionManager(cf);
  TransactionStatus ts=tm.getTransaction(new DefaultTransactionDefinition());
  JmsTemplate jt=new JmsTemplate(cf);
  jt.execute(new SessionCallback(){
    @Override public Object doInJms(    Session sess){
      assertTrue(sess == session);
      return null;
    }
  }
);
  tm.commit(ts);
  sessionControl.verify();
  conControl.verify();
  cfControl.verify();
}
