{
  Assert.notNull(uri,"'uri' must not be null");
  Matcher m=URI_PATTERN.matcher(uri);
  if (m.matches()) {
    Map<UriComponents.Type,String> result=new EnumMap<UriComponents.Type,String>(UriComponents.Type.class);
    result.put(UriComponents.Type.SCHEME,m.group(2));
    result.put(UriComponents.Type.AUTHORITY,m.group(3));
    result.put(UriComponents.Type.USER_INFO,m.group(5));
    result.put(UriComponents.Type.HOST,m.group(6));
    result.put(UriComponents.Type.PORT,m.group(8));
    result.put(UriComponents.Type.PATH,m.group(9));
    result.put(UriComponents.Type.QUERY,m.group(11));
    result.put(UriComponents.Type.FRAGMENT,m.group(13));
    return result;
  }
 else {
    throw new IllegalArgumentException("[" + uri + "] is not a valid URI");
  }
}
