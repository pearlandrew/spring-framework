{
  SpelNodeImpl leftOp=getLeftOperand();
  SpelNodeImpl rightOp=getRightOperand();
  if (rightOp == null) {
    Object operandOne=leftOp.getValueInternal(state).getValue();
    if (operandOne instanceof Number) {
      if (operandOne instanceof Double || operandOne instanceof Long) {
        return new TypedValue(operandOne);
      }
      if (operandOne instanceof Float) {
        return new TypedValue(((Number)operandOne).floatValue());
      }
      return new TypedValue(((Number)operandOne).intValue());
    }
    return state.operate(Operation.ADD,operandOne,null);
  }
  final TypedValue operandOneValue=leftOp.getValueInternal(state);
  final Object operandOne=operandOneValue.getValue();
  final TypedValue operandTwoValue=rightOp.getValueInternal(state);
  final Object operandTwo=operandTwoValue.getValue();
  if (operandOne instanceof Number && operandTwo instanceof Number) {
    Number op1=(Number)operandOne;
    Number op2=(Number)operandTwo;
    if (op1 instanceof Double || op2 instanceof Double) {
      return new TypedValue(op1.doubleValue() + op2.doubleValue());
    }
    if (op1 instanceof Float || op2 instanceof Float) {
      return new TypedValue(op1.floatValue() + op2.floatValue());
    }
    if (op1 instanceof Long || op2 instanceof Long) {
      return new TypedValue(op1.longValue() + op2.longValue());
    }
    return new TypedValue(op1.intValue() + op2.intValue());
  }
  if (operandOne instanceof String && operandTwo instanceof String) {
    return new TypedValue(new StringBuilder((String)operandOne).append((String)operandTwo).toString());
  }
  if (operandOne instanceof String) {
    StringBuilder result=new StringBuilder((String)operandOne);
    result.append((operandTwo == null ? "null" : convertTypedValueToString(operandTwoValue,state)));
    return new TypedValue(result.toString());
  }
  if (operandTwo instanceof String) {
    StringBuilder result=new StringBuilder((operandOne == null ? "null" : convertTypedValueToString(operandOneValue,state)));
    result.append((String)operandTwo);
    return new TypedValue(result.toString());
  }
  return state.operate(Operation.ADD,operandOne,operandTwo);
}
