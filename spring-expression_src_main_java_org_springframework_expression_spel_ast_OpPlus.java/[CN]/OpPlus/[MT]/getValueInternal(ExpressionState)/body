{
  SpelNodeImpl leftOp=getLeftOperand();
  SpelNodeImpl rightOp=getRightOperand();
  if (rightOp == null) {
    Object operandOne=leftOp.getValueInternal(state).getValue();
    if (operandOne instanceof Number) {
      if (operandOne instanceof Double) {
        return new TypedValue(((Double)operandOne).doubleValue());
      }
 else       if (operandOne instanceof Long) {
        return new TypedValue(((Long)operandOne).longValue());
      }
 else {
        return new TypedValue(((Integer)operandOne).intValue());
      }
    }
    return state.operate(Operation.ADD,operandOne,null);
  }
 else {
    Object operandOne=leftOp.getValueInternal(state).getValue();
    Object operandTwo=rightOp.getValueInternal(state).getValue();
    if (operandOne instanceof Number && operandTwo instanceof Number) {
      Number op1=(Number)operandOne;
      Number op2=(Number)operandTwo;
      if (op1 instanceof Double || op2 instanceof Double) {
        return new TypedValue(op1.doubleValue() + op2.doubleValue());
      }
 else       if (op1 instanceof Long || op2 instanceof Long) {
        return new TypedValue(op1.longValue() + op2.longValue());
      }
 else {
        return new TypedValue(op1.intValue() + op2.intValue());
      }
    }
 else     if (operandOne instanceof String && operandTwo instanceof String) {
      return new TypedValue(new StringBuilder((String)operandOne).append((String)operandTwo).toString());
    }
 else     if (operandOne instanceof String) {
      StringBuilder result=new StringBuilder((String)operandOne);
      result.append((operandTwo == null ? "null" : operandTwo.toString()));
      return new TypedValue(result.toString());
    }
 else     if (operandTwo instanceof String) {
      StringBuilder result=new StringBuilder((operandOne == null ? "null" : operandOne.toString()));
      result.append((String)operandTwo);
      return new TypedValue(result.toString());
    }
    return state.operate(Operation.ADD,operandOne,operandTwo);
  }
}
