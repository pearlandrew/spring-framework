{
  String candidateDisplayString=ValueFormatter.getDisplayString(candidate,editor,false);
  if (boundValue instanceof LabeledEnum) {
    LabeledEnum labeledEnum=(LabeledEnum)boundValue;
    String enumCodeAsString=ObjectUtils.getDisplayString(labeledEnum.getCode());
    if (enumCodeAsString.equals(candidateDisplayString)) {
      return true;
    }
    String enumLabelAsString=ObjectUtils.getDisplayString(labeledEnum.getLabel());
    if (enumLabelAsString.equals(candidateDisplayString)) {
      return true;
    }
  }
 else   if (boundValue.getClass().isEnum()) {
    Enum boundEnum=(Enum)boundValue;
    String enumCodeAsString=ObjectUtils.getDisplayString(boundEnum.name());
    if (enumCodeAsString.equals(candidateDisplayString)) {
      return true;
    }
    String enumLabelAsString=ObjectUtils.getDisplayString(boundEnum.toString());
    if (enumLabelAsString.equals(candidateDisplayString)) {
      return true;
    }
  }
 else   if (ObjectUtils.getDisplayString(boundValue).equals(candidateDisplayString)) {
    return true;
  }
 else   if (editor != null && candidate instanceof String) {
    String candidateAsString=(String)candidate;
    Object candidateAsValue;
    if (convertedValueCache != null && convertedValueCache.containsKey(editor)) {
      candidateAsValue=convertedValueCache.get(editor);
    }
 else {
      editor.setAsText(candidateAsString);
      candidateAsValue=editor.getValue();
      if (convertedValueCache != null) {
        convertedValueCache.put(editor,candidateAsValue);
      }
    }
    if (ObjectUtils.nullSafeEquals(boundValue,candidateAsValue)) {
      return true;
    }
  }
  return false;
}
