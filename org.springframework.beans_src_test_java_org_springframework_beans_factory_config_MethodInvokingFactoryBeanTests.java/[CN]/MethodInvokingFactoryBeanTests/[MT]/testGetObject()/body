{
  TestClass1 tc1=new TestClass1();
  MethodInvokingFactoryBean mcfb=new MethodInvokingFactoryBean();
  mcfb.setTargetObject(tc1);
  mcfb.setTargetMethod("method1");
  mcfb.afterPropertiesSet();
  Integer i=(Integer)mcfb.getObject();
  assertEquals(1,i.intValue());
  i=(Integer)mcfb.getObject();
  assertEquals(1,i.intValue());
  tc1=new TestClass1();
  mcfb=new MethodInvokingFactoryBean();
  mcfb.setTargetObject(tc1);
  mcfb.setTargetMethod("method1");
  mcfb.setSingleton(false);
  mcfb.afterPropertiesSet();
  i=(Integer)mcfb.getObject();
  assertEquals(1,i.intValue());
  i=(Integer)mcfb.getObject();
  assertEquals(2,i.intValue());
  TestClass1._staticField1=0;
  mcfb=new MethodInvokingFactoryBean();
  mcfb.setTargetClass(TestClass1.class);
  mcfb.setTargetMethod("staticMethod1");
  mcfb.afterPropertiesSet();
  i=(Integer)mcfb.getObject();
  assertEquals(1,i.intValue());
  i=(Integer)mcfb.getObject();
  assertEquals(1,i.intValue());
  TestClass1._staticField1=0;
  mcfb=new MethodInvokingFactoryBean();
  mcfb.setStaticMethod("org.springframework.beans.factory.config.MethodInvokingFactoryBeanTests$TestClass1.staticMethod1");
  mcfb.setSingleton(false);
  mcfb.afterPropertiesSet();
  i=(Integer)mcfb.getObject();
  assertEquals(1,i.intValue());
  i=(Integer)mcfb.getObject();
  assertEquals(2,i.intValue());
  mcfb=new MethodInvokingFactoryBean();
  mcfb.setTargetClass(TestClass1.class);
  mcfb.setTargetMethod("voidRetvalMethod");
  mcfb.afterPropertiesSet();
  assertNull(mcfb.getObject());
  mcfb=new MethodInvokingFactoryBean();
  mcfb.setTargetClass(TestClass1.class);
  mcfb.setTargetMethod("supertypes");
  mcfb.setArguments(new Object[]{new ArrayList<Object>(),new ArrayList<Object>(),"hello"});
  mcfb.afterPropertiesSet();
}
