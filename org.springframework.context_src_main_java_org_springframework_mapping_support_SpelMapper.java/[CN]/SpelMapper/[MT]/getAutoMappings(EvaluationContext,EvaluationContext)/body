{
  if (this.autoMappingEnabled) {
    Set<FieldToFieldMapping> autoMappings=new LinkedHashSet<FieldToFieldMapping>();
    Set<String> sourceFields=getMappableFields(sourceContext.getRootObject().getValue());
    for (    String field : sourceFields) {
      if (!explicitlyMapped(field)) {
        Expression sourceExpression;
        Expression targetExpression;
        try {
          sourceExpression=sourceExpressionParser.parseExpression(field);
        }
 catch (        ParseException e) {
          throw new IllegalArgumentException("The mapping source '" + field + "' is not a parseable value expression",e);
        }
        try {
          targetExpression=targetExpressionParser.parseExpression(field);
        }
 catch (        ParseException e) {
          throw new IllegalArgumentException("The mapping target '" + field + "' is not a parseable value expression",e);
        }
        try {
          if (targetExpression.isWritable(targetContext)) {
            autoMappings.add(new FieldToFieldMapping(sourceExpression,targetExpression,null));
          }
        }
 catch (        EvaluationException e) {
        }
      }
    }
    return autoMappings;
  }
 else {
    return Collections.emptySet();
  }
}
