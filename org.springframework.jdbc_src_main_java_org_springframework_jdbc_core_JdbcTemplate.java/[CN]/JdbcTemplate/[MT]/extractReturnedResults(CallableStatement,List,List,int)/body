{
  Map returnedResults=new HashMap();
  int rsIndex=0;
  int updateIndex=0;
  boolean moreResults;
  if (!skipResultsProcessing) {
    do {
      if (updateCount == -1) {
        if (resultSetParameters != null && resultSetParameters.size() > rsIndex) {
          SqlReturnResultSet declaredRsParam=(SqlReturnResultSet)resultSetParameters.get(rsIndex);
          returnedResults.putAll(processResultSet(cs.getResultSet(),declaredRsParam));
          rsIndex++;
        }
 else {
          if (!skipUndeclaredResults) {
            String rsName=RETURN_RESULT_SET_PREFIX + (rsIndex + 1);
            SqlReturnResultSet undeclaredRsParam=new SqlReturnResultSet(rsName,new ColumnMapRowMapper());
            logger.info("Added default SqlReturnResultSet parameter named " + rsName);
            returnedResults.putAll(processResultSet(cs.getResultSet(),undeclaredRsParam));
            rsIndex++;
          }
        }
      }
 else {
        if (updateCountParameters != null && updateCountParameters.size() > updateIndex) {
          SqlReturnUpdateCount ucParam=(SqlReturnUpdateCount)updateCountParameters.get(updateIndex);
          String declaredUcName=ucParam.getName();
          returnedResults.put(declaredUcName,new Integer(updateCount));
          updateIndex++;
        }
 else {
          if (!skipUndeclaredResults) {
            String undeclaredUcName=RETURN_UPDATE_COUNT_PREFIX + (updateIndex + 1);
            logger.info("Added default SqlReturnUpdateCount parameter named " + undeclaredUcName);
            returnedResults.put(undeclaredUcName,new Integer(updateCount));
            updateIndex++;
          }
        }
      }
      moreResults=cs.getMoreResults();
      updateCount=cs.getUpdateCount();
      if (logger.isDebugEnabled()) {
        logger.debug("CallableStatement.getUpdateCount() returned " + updateCount);
      }
    }
 while (moreResults || updateCount != -1);
  }
  return returnedResults;
}
