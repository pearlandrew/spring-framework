{
  Assert.notNull(csc,"CallableStatementCreator must not be null");
  Assert.notNull(action,"Callback object must not be null");
  if (logger.isDebugEnabled()) {
    String sql=getSql(csc);
    logger.debug("Calling stored procedure" + (sql != null ? " [" + sql + "]" : ""));
  }
  Connection con=DataSourceUtils.getConnection(getDataSource());
  CallableStatement cs=null;
  try {
    Connection conToUse=con;
    if (this.nativeJdbcExtractor != null) {
      conToUse=this.nativeJdbcExtractor.getNativeConnection(con);
    }
    cs=csc.createCallableStatement(conToUse);
    applyStatementSettings(cs);
    CallableStatement csToUse=cs;
    if (this.nativeJdbcExtractor != null) {
      csToUse=this.nativeJdbcExtractor.getNativeCallableStatement(cs);
    }
    Object result=action.doInCallableStatement(csToUse);
    handleWarnings(cs);
    return result;
  }
 catch (  SQLException ex) {
    if (csc instanceof ParameterDisposer) {
      ((ParameterDisposer)csc).cleanupParameters();
    }
    String sql=getSql(csc);
    csc=null;
    JdbcUtils.closeStatement(cs);
    cs=null;
    DataSourceUtils.releaseConnection(con,getDataSource());
    con=null;
    throw getExceptionTranslator().translate("CallableStatementCallback",sql,ex);
  }
 finally {
    if (csc instanceof ParameterDisposer) {
      ((ParameterDisposer)csc).cleanupParameters();
    }
    JdbcUtils.closeStatement(cs);
    DataSourceUtils.releaseConnection(con,getDataSource());
  }
}
