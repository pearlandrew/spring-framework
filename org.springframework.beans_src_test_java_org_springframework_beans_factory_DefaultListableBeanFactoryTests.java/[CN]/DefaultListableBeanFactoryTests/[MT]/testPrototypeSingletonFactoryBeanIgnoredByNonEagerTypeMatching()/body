{
  DefaultListableBeanFactory lbf=new DefaultListableBeanFactory();
  Properties p=new Properties();
  p.setProperty("x1.(class)",DummyFactory.class.getName());
  DummyFactory.reset();
  p.setProperty("x1.(singleton)","false");
  p.setProperty("x1.singleton","true");
  (new PropertiesBeanDefinitionReader(lbf)).registerBeanDefinitions(p);
  assertTrue("prototype not instantiated",!DummyFactory.wasPrototypeCreated());
  String[] beanNames=lbf.getBeanNamesForType(TestBean.class,true,false);
  assertEquals(0,beanNames.length);
  assertFalse(lbf.containsSingleton("x1"));
  assertTrue(lbf.containsBean("x1"));
  assertTrue(lbf.containsBean("&x1"));
  assertFalse(lbf.isSingleton("x1"));
  assertFalse(lbf.isSingleton("&x1"));
  assertTrue(lbf.isPrototype("x1"));
  assertTrue(lbf.isPrototype("&x1"));
  assertTrue(lbf.isTypeMatch("x1",TestBean.class));
  assertFalse(lbf.isTypeMatch("&x1",TestBean.class));
  assertTrue(lbf.isTypeMatch("&x1",DummyFactory.class));
  assertEquals(TestBean.class,lbf.getType("x1"));
  assertEquals(DummyFactory.class,lbf.getType("&x1"));
  assertTrue("prototype not instantiated",!DummyFactory.wasPrototypeCreated());
}
