{
  JsonEncoding encoding=getJsonEncoding(outputMessage.getHeaders().getContentType());
  @SuppressWarnings("deprecation") JsonGenerator jsonGenerator=this.objectMapper.getJsonFactory().createJsonGenerator(outputMessage.getBody(),encoding);
  if (this.objectMapper.isEnabled(SerializationFeature.INDENT_OUTPUT)) {
    jsonGenerator.useDefaultPrettyPrinter();
  }
  try {
    if (this.jsonPrefix != null) {
      jsonGenerator.writeRaw(this.jsonPrefix);
    }
    Class<?> serializationView=null;
    String jsonpFunction=null;
    if (object instanceof MappingJacksonValue) {
      MappingJacksonValue container=(MappingJacksonValue)object;
      object=container.getValue();
      serializationView=container.getSerializationView();
      jsonpFunction=container.getJsonpFunction();
    }
    if (jsonpFunction != null) {
      jsonGenerator.writeRaw(jsonpFunction + "(");
    }
    if (serializationView != null) {
      this.objectMapper.writerWithView(serializationView).writeValue(jsonGenerator,object);
    }
 else {
      this.objectMapper.writeValue(jsonGenerator,object);
    }
    if (jsonpFunction != null) {
      jsonGenerator.writeRaw(");");
      jsonGenerator.flush();
    }
  }
 catch (  JsonProcessingException ex) {
    throw new HttpMessageNotWritableException("Could not write JSON: " + ex.getMessage(),ex);
  }
}
