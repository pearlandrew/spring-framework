{
  List<DefaultTransportRequest> requests=new ArrayList<DefaultTransportRequest>(this.transports.size());
  for (  Transport transport : this.transports) {
    for (    TransportType type : transport.getTransportTypes()) {
      if (serverInfo.isWebSocketEnabled() || !TransportType.WEBSOCKET.equals(type)) {
        requests.add(new DefaultTransportRequest(urlInfo,headers,getHttpRequestHeaders(headers),transport,type,getMessageCodec()));
      }
    }
  }
  if (CollectionUtils.isEmpty(requests)) {
    throw new IllegalStateException("No transports: " + urlInfo + ", webSocketEnabled="+ serverInfo.isWebSocketEnabled());
  }
  for (int i=0; i < requests.size() - 1; i++) {
    DefaultTransportRequest request=requests.get(i);
    request.setUser(getUser());
    if (this.connectTimeoutScheduler != null) {
      request.setTimeoutValue(serverInfo.getRetransmissionTimeout());
      request.setTimeoutScheduler(this.connectTimeoutScheduler);
    }
    request.setFallbackRequest(requests.get(i + 1));
  }
  return requests.get(0);
}
