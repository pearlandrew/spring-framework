{
  Assert.notNull(handler,"'webSocketHandler' is required");
  Assert.notNull(url,"'url' is required");
  String scheme=url.getScheme();
  Assert.isTrue(scheme != null && ("ws".equals(scheme) || "wss".equals(scheme) || "http".equals(scheme)|| "https".equals(scheme)),"Invalid scheme: " + scheme);
  SettableListenableFuture<WebSocketSession> connectFuture=new SettableListenableFuture<WebSocketSession>();
  try {
    SockJsUrlInfo sockJsUrlInfo=new SockJsUrlInfo(url);
    ServerInfo serverInfo=getServerInfo(sockJsUrlInfo);
    createRequest(sockJsUrlInfo,headers,serverInfo).connect(handler,connectFuture);
  }
 catch (  Throwable exception) {
    if (logger.isErrorEnabled()) {
      logger.error("Initial SockJS \"Info\" request to server failed, url=" + url,exception);
    }
    connectFuture.setException(exception);
  }
  return connectFuture;
}
