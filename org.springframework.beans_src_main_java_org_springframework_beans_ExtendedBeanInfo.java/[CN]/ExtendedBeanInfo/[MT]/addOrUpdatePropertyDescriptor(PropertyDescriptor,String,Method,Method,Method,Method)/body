{
  Assert.notNull(propertyName,"propertyName may not be null");
  propertyName=pd == null ? propertyName : pd.getName();
  for (  PropertyDescriptor existingPD : this.propertyDescriptors) {
    if (existingPD.getName().equals(propertyName)) {
      if (existingPD.getReadMethod() != null) {
        if (readMethod != null && existingPD.getReadMethod().getReturnType() != readMethod.getReturnType() || writeMethod != null && existingPD.getReadMethod().getReturnType() != writeMethod.getParameterTypes()[0]) {
          break;
        }
      }
      if (readMethod != null) {
        try {
          existingPD.setReadMethod(readMethod);
        }
 catch (        IntrospectionException ex) {
          existingPD.setWriteMethod(null);
          existingPD.setReadMethod(readMethod);
        }
      }
      if (existingPD.getWriteMethod() != null) {
        if (readMethod != null && existingPD.getWriteMethod().getParameterTypes()[0] != readMethod.getReturnType() || writeMethod != null && existingPD.getWriteMethod().getParameterTypes()[0] != writeMethod.getParameterTypes()[0]) {
          break;
        }
      }
      if (writeMethod != null && !(existingPD instanceof IndexedPropertyDescriptor && !writeMethod.getParameterTypes()[0].isArray())) {
        existingPD.setWriteMethod(writeMethod);
      }
      if (existingPD instanceof IndexedPropertyDescriptor) {
        IndexedPropertyDescriptor existingIPD=(IndexedPropertyDescriptor)existingPD;
        if (existingIPD.getIndexedReadMethod() != null) {
          if (indexedReadMethod != null && existingIPD.getIndexedReadMethod().getReturnType() != indexedReadMethod.getReturnType() || indexedWriteMethod != null && existingIPD.getIndexedReadMethod().getReturnType() != indexedWriteMethod.getParameterTypes()[1]) {
            break;
          }
        }
        try {
          if (indexedReadMethod != null) {
            existingIPD.setIndexedReadMethod(indexedReadMethod);
          }
        }
 catch (        IntrospectionException ex) {
          existingIPD.setIndexedWriteMethod(null);
          existingIPD.setIndexedReadMethod(indexedReadMethod);
        }
        if (existingIPD.getIndexedWriteMethod() != null) {
          if (indexedReadMethod != null && existingIPD.getIndexedWriteMethod().getParameterTypes()[1] != indexedReadMethod.getReturnType() || indexedWriteMethod != null && existingIPD.getIndexedWriteMethod().getParameterTypes()[1] != indexedWriteMethod.getParameterTypes()[1]) {
            break;
          }
        }
        if (indexedWriteMethod != null) {
          existingIPD.setIndexedWriteMethod(indexedWriteMethod);
        }
      }
      return;
    }
  }
  if (pd == null) {
    try {
      if (indexedReadMethod == null && indexedWriteMethod == null) {
        pd=new PropertyDescriptor(propertyName,readMethod,writeMethod);
      }
 else {
        pd=new IndexedPropertyDescriptor(propertyName,readMethod,writeMethod,indexedReadMethod,indexedWriteMethod);
      }
      this.propertyDescriptors.add(pd);
    }
 catch (    IntrospectionException ex) {
      logger.debug(format("Could not create new PropertyDescriptor for readMethod [%s] writeMethod [%s] " + "indexedReadMethod [%s] indexedWriteMethod [%s] for property [%s]. Reason: %s",readMethod,writeMethod,indexedReadMethod,indexedWriteMethod,propertyName,ex.getMessage()));
    }
  }
 else {
    pd.setReadMethod(readMethod);
    try {
      pd.setWriteMethod(writeMethod);
    }
 catch (    IntrospectionException ex) {
      logger.debug(format("Could not add write method [%s] for property [%s]. Reason: %s",writeMethod,propertyName,ex.getMessage()));
    }
    this.propertyDescriptors.add(pd);
  }
}
