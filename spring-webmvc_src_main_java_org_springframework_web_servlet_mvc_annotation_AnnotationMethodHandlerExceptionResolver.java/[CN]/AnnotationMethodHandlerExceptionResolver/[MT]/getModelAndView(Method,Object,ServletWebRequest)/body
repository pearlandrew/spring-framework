{
  ResponseStatus responseStatus=AnnotatedElementUtils.findMergedAnnotation(handlerMethod,ResponseStatus.class);
  if (responseStatus != null) {
    HttpStatus statusCode=responseStatus.code();
    String reason=responseStatus.reason();
    if (!StringUtils.hasText(reason)) {
      webRequest.getResponse().setStatus(statusCode.value());
    }
 else {
      webRequest.getResponse().sendError(statusCode.value(),reason);
    }
  }
  if (returnValue != null && AnnotationUtils.findAnnotation(handlerMethod,ResponseBody.class) != null) {
    return handleResponseBody(returnValue,webRequest);
  }
  if (returnValue instanceof ModelAndView) {
    return (ModelAndView)returnValue;
  }
 else   if (returnValue instanceof Model) {
    return new ModelAndView().addAllObjects(((Model)returnValue).asMap());
  }
 else   if (returnValue instanceof Map) {
    return new ModelAndView().addAllObjects((Map<String,Object>)returnValue);
  }
 else   if (returnValue instanceof View) {
    return new ModelAndView((View)returnValue);
  }
 else   if (returnValue instanceof String) {
    return new ModelAndView((String)returnValue);
  }
 else   if (returnValue == null) {
    return new ModelAndView();
  }
 else {
    throw new IllegalArgumentException("Invalid handler method return value: " + returnValue);
  }
}
