{
  final String NO_SUCH_TABLE="x";
  final String USER="me";
  MockControl ctrlResultSet=MockControl.createControl(ResultSet.class);
  ResultSet mockResultSet=(ResultSet)ctrlResultSet.getMock();
  mockResultSet.next();
  ctrlResultSet.setReturnValue(false);
  mockResultSet.close();
  ctrlResultSet.setVoidCallable();
  mockDatabaseMetaData.getDatabaseProductName();
  ctrlDatabaseMetaData.setReturnValue("MyDB");
  mockDatabaseMetaData.supportsGetGeneratedKeys();
  ctrlDatabaseMetaData.setReturnValue(false);
  mockDatabaseMetaData.getDatabaseProductName();
  ctrlDatabaseMetaData.setReturnValue("MyDB");
  mockDatabaseMetaData.getDatabaseProductVersion();
  ctrlDatabaseMetaData.setReturnValue("1.0");
  mockDatabaseMetaData.getUserName();
  ctrlDatabaseMetaData.setReturnValue(USER);
  mockDatabaseMetaData.storesUpperCaseIdentifiers();
  ctrlDatabaseMetaData.setReturnValue(false);
  mockDatabaseMetaData.storesLowerCaseIdentifiers();
  ctrlDatabaseMetaData.setReturnValue(true);
  mockDatabaseMetaData.getTables(null,null,NO_SUCH_TABLE,null);
  ctrlDatabaseMetaData.setReturnValue(mockResultSet);
  ctrlResultSet.replay();
  replay();
  SimpleJdbcInsert insert=new SimpleJdbcInsert(mockDataSource).withTableName(NO_SUCH_TABLE);
  try {
    insert.execute(new HashMap());
    fail("Shouldn't succeed in inserting into table which doesn't exist");
  }
 catch (  InvalidDataAccessApiUsageException ex) {
  }
}
