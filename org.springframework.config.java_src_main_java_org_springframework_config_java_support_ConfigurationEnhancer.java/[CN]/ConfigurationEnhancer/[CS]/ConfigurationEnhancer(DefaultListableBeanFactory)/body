{
  notNull(beanFactory,"beanFactory must be non-null");
  registrars.add(new BeanRegistrar());
  BeanMethodInterceptor beanMethodInterceptor=new BeanMethodInterceptor();
  beanMethodInterceptor.setBeanFactory(beanFactory);
  callbackInstances.add(beanMethodInterceptor);
  registrars.add(new BeanDefinitionRegistrar(){
    public boolean accepts(    Method method){
      return true;
    }
    public void register(    BeanMethod method,    BeanDefinitionRegistry registry){
    }
  }
);
  callbackInstances.add(new MethodInterceptor(){
    public Object intercept(    Object obj,    Method method,    Object[] args,    MethodProxy proxy) throws Throwable {
      return null;
    }
  }
);
  for (  Callback callback : callbackInstances)   callbackTypes.add(callback.getClass());
}
