{
  TypedValue contextObject=state.getActiveContextObject();
  Object targetObject=contextObject.getValue();
  TypeDescriptor targetObjectTypeDescriptor=contextObject.getTypeDescriptor();
  TypedValue index=children[0].getValueInternal(state);
  if (targetObject == null) {
    throw new SpelEvaluationException(SpelMessages.CANNOT_INDEX_INTO_NULL_VALUE);
  }
  if (targetObjectTypeDescriptor.isMap()) {
    Map map=(Map)targetObject;
    Object possiblyConvertedKey=state.convertValue(index.getValue(),TypeDescriptor.valueOf(targetObjectTypeDescriptor.getMapKeyType()));
    Object possiblyConvertedValue=state.convertValue(newValue,TypeDescriptor.valueOf(targetObjectTypeDescriptor.getMapValueType()));
    map.put(possiblyConvertedKey,possiblyConvertedValue);
    return;
  }
  if (targetObjectTypeDescriptor.isArray()) {
    int idx=(Integer)state.convertValue(index,INTEGER_TYPE_DESCRIPTOR);
    setArrayElement(state,contextObject.getValue(),idx,newValue,targetObjectTypeDescriptor.getElementType());
  }
 else   if (targetObjectTypeDescriptor.isCollection()) {
    int idx=(Integer)state.convertValue(index,INTEGER_TYPE_DESCRIPTOR);
    Collection c=(Collection)targetObject;
    if (idx >= c.size()) {
      throw new SpelEvaluationException(getStartPosition(),SpelMessages.COLLECTION_INDEX_OUT_OF_BOUNDS,c.size(),idx);
    }
    if (targetObject instanceof List) {
      List list=(List)targetObject;
      Object possiblyConvertedValue=state.convertValue(newValue,TypeDescriptor.valueOf(targetObjectTypeDescriptor.getElementType()));
      list.set(idx,possiblyConvertedValue);
    }
 else {
      throw new SpelEvaluationException(getStartPosition(),SpelMessages.INDEXING_NOT_SUPPORTED_FOR_TYPE,contextObject.getClass().getName());
    }
  }
 else {
    throw new SpelEvaluationException(getStartPosition(),SpelMessages.INDEXING_NOT_SUPPORTED_FOR_TYPE,contextObject.getClass().getName());
  }
}
