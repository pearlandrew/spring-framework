{
  TypedValue context=state.getActiveContextObject();
  Object targetObject=context.getValue();
  TypeDescriptor targetObjectTypeDescriptor=context.getTypeDescriptor();
  TypedValue indexValue=children[0].getValueInternal(state);
  Object index=indexValue.getValue();
  if (targetObject instanceof Map) {
    Object possiblyConvertedKey=state.convertValue(indexValue,TypeDescriptor.valueOf(targetObjectTypeDescriptor.getMapKeyType()));
    Object o=((Map<?,?>)targetObject).get(possiblyConvertedKey);
    return new TypedValue(o,TypeDescriptor.valueOf(targetObjectTypeDescriptor.getMapValueType()));
  }
  int idx=(Integer)state.convertValue(index,INTEGER_TYPE_DESCRIPTOR);
  if (targetObject == null) {
    throw new SpelEvaluationException(getStartPosition(),SpelMessages.CANNOT_INDEX_INTO_NULL_VALUE);
  }
  if (targetObject.getClass().isArray()) {
    return new TypedValue(accessArrayElement(targetObject,idx),TypeDescriptor.valueOf(targetObjectTypeDescriptor.getElementType()));
  }
 else   if (targetObject instanceof Collection) {
    Collection<?> c=(Collection<?>)targetObject;
    if (idx >= c.size()) {
      throw new SpelEvaluationException(getStartPosition(),SpelMessages.COLLECTION_INDEX_OUT_OF_BOUNDS,c.size(),idx);
    }
    int pos=0;
    for (    Object o : c) {
      if (pos == idx) {
        return new TypedValue(o,TypeDescriptor.valueOf(targetObjectTypeDescriptor.getElementType()));
      }
      pos++;
    }
  }
 else   if (targetObject instanceof String) {
    String ctxString=(String)targetObject;
    if (idx >= ctxString.length()) {
      throw new SpelEvaluationException(getStartPosition(),SpelMessages.STRING_INDEX_OUT_OF_BOUNDS,ctxString.length(),idx);
    }
    return new TypedValue(String.valueOf(ctxString.charAt(idx)),STRING_TYPE_DESCRIPTOR);
  }
  throw new SpelEvaluationException(getStartPosition(),SpelMessages.INDEXING_NOT_SUPPORTED_FOR_TYPE,targetObjectTypeDescriptor.asString());
}
