{
  MultiValueMap<HttpRequestHandler,String> mappings=new LinkedMultiValueMap<HttpRequestHandler,String>();
  if (this.sockJsServiceRegistration == null) {
    HandshakeHandler handshakeHandler=getOrCreateHandshakeHandler();
    for (    WebSocketHandler handler : this.handlerMap.keySet()) {
      for (      String path : this.handlerMap.get(handler)) {
        WebSocketHttpRequestHandler httpHandler=new WebSocketHttpRequestHandler(handler,handshakeHandler);
        httpHandler.setHandshakeInterceptors(this.interceptors);
        mappings.add(httpHandler,path);
      }
    }
  }
 else {
    SockJsService sockJsService=this.sockJsServiceRegistration.getSockJsService(getAllPrefixes());
    for (    WebSocketHandler handler : this.handlerMap.keySet()) {
      for (      String path : this.handlerMap.get(handler)) {
        SockJsHttpRequestHandler httpHandler=new SockJsHttpRequestHandler(sockJsService,handler);
        mappings.add(httpHandler,path.endsWith("/") ? path + "**" : path + "/**");
      }
    }
  }
  return mappings;
}
