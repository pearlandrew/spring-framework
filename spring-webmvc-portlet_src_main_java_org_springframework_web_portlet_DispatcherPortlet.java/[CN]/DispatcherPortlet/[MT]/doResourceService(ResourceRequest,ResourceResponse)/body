{
  if (logger.isDebugEnabled()) {
    logger.debug("DispatcherPortlet with name '" + getPortletName() + "' received resource request");
  }
  HandlerExecutionChain mappedHandler=null;
  int interceptorIndex=-1;
  try {
    ModelAndView mv;
    try {
      mappedHandler=getHandler(request);
      if (mappedHandler == null || mappedHandler.getHandler() == null) {
        noHandlerFound(request,response);
        return;
      }
      HandlerInterceptor[] interceptors=mappedHandler.getInterceptors();
      if (interceptors != null) {
        for (int i=0; i < interceptors.length; i++) {
          HandlerInterceptor interceptor=interceptors[i];
          if (!interceptor.preHandleResource(request,response,mappedHandler.getHandler())) {
            triggerAfterResourceCompletion(mappedHandler,interceptorIndex,request,response,null);
            return;
          }
          interceptorIndex=i;
        }
      }
      HandlerAdapter ha=getHandlerAdapter(mappedHandler.getHandler());
      mv=ha.handleResource(request,response,mappedHandler.getHandler());
      if (interceptors != null) {
        for (int i=interceptors.length - 1; i >= 0; i--) {
          HandlerInterceptor interceptor=interceptors[i];
          interceptor.postHandleResource(request,response,mappedHandler.getHandler(),mv);
        }
      }
    }
 catch (    ModelAndViewDefiningException ex) {
      logger.debug("ModelAndViewDefiningException encountered",ex);
      mv=ex.getModelAndView();
    }
catch (    Exception ex) {
      Object handler=(mappedHandler != null ? mappedHandler.getHandler() : null);
      mv=processHandlerException(request,response,handler,ex);
    }
    if (mv != null && !mv.isEmpty()) {
      render(mv,request,response);
    }
 else {
      if (logger.isDebugEnabled()) {
        logger.debug("Null ModelAndView returned to DispatcherPortlet with name '" + getPortletName() + "': assuming HandlerAdapter completed request handling");
      }
    }
    triggerAfterResourceCompletion(mappedHandler,interceptorIndex,request,response,null);
  }
 catch (  Exception ex) {
    triggerAfterResourceCompletion(mappedHandler,interceptorIndex,request,response,ex);
    throw ex;
  }
catch (  Error err) {
    PortletException ex=new PortletException("Error occured during request processing: " + err.getMessage(),err);
    triggerAfterResourceCompletion(mappedHandler,interceptorIndex,request,response,ex);
    throw ex;
  }
}
