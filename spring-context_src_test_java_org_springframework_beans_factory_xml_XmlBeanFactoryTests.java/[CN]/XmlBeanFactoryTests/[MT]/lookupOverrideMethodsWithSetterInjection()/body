{
  DefaultListableBeanFactory xbf=new DefaultListableBeanFactory();
  XmlBeanDefinitionReader reader=new XmlBeanDefinitionReader(xbf);
  reader.loadBeanDefinitions(OVERRIDES_CONTEXT);
  lookupOverrideMethodsWithSetterInjection(xbf,"overrideOneMethod",true);
  lookupOverrideMethodsWithSetterInjection(xbf,"overrideInheritedMethod",true);
  int howMany=100;
  StopWatch sw=new StopWatch();
  sw.start("Look up " + howMany + " prototype bean instances with method overrides");
  for (int i=0; i < howMany; i++) {
    lookupOverrideMethodsWithSetterInjection(xbf,"overrideOnPrototype",false);
  }
  sw.stop();
  if (!LogFactory.getLog(DefaultListableBeanFactory.class).isDebugEnabled()) {
    assertTrue(sw.getTotalTimeMillis() < 2000);
  }
  OverrideOneMethod swappedOom=(OverrideOneMethod)xbf.getBean("overrideOneMethodSwappedReturnValues");
  TestBean tb=swappedOom.getPrototypeDependency();
  assertEquals("David",tb.getName());
  tb=swappedOom.protectedOverrideSingleton();
  assertEquals("Jenny",tb.getName());
}
