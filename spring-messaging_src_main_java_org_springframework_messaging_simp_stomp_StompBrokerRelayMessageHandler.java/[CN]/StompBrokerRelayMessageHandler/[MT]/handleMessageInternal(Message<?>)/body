{
  StompHeaderAccessor headers=StompHeaderAccessor.wrap(message);
  String sessionId=headers.getSessionId();
  String destination=headers.getDestination();
  StompCommand command=headers.getCommand();
  SimpMessageType messageType=headers.getMessageType();
  if (SimpMessageType.MESSAGE.equals(messageType)) {
    sessionId=(sessionId == null) ? SystemStompRelaySession.ID : sessionId;
    headers.setSessionId(sessionId);
    headers.updateStompCommandAsClientMessage();
    message=MessageBuilder.withPayload(message.getPayload()).setHeaders(headers).build();
  }
  if (sessionId == null) {
    logger.error("No sessionId, ignoring message: " + message);
    return;
  }
  if (command != null && command.requiresDestination() && !checkDestinationPrefix(destination)) {
    return;
  }
  if (SimpMessageType.CONNECT.equals(messageType)) {
    if (getVirtualHost() != null) {
      headers.setHost(getVirtualHost());
      message=MessageBuilder.withPayload(message.getPayload()).setHeaders(headers).build();
    }
    StompRelaySession session=new StompRelaySession(sessionId);
    this.relaySessions.put(sessionId,session);
    session.connect(message);
  }
 else   if (SimpMessageType.DISCONNECT.equals(messageType)) {
    StompRelaySession session=this.relaySessions.remove(sessionId);
    if (session == null) {
      if (logger.isTraceEnabled()) {
        logger.trace("Session already removed, sessionId=" + sessionId);
      }
      return;
    }
    session.forward(message);
  }
 else {
    StompRelaySession session=this.relaySessions.get(sessionId);
    if (session == null) {
      logger.warn("Session id=" + sessionId + " not found. Ignoring message: "+ message);
      return;
    }
    session.forward(message);
  }
}
