{
  StompHeaderAccessor headers=StompHeaderAccessor.wrap(message);
  String sessionId=headers.getSessionId();
  if (!isBrokerAvailable()) {
    if (sessionId == null || sessionId == SystemStompConnectionHandler.SESSION_ID) {
      throw new MessageDeliveryException("Message broker is not active.");
    }
    if (logger.isTraceEnabled()) {
      logger.trace("Message broker is not active. Ignoring message id=" + message.getHeaders().getId());
    }
    return;
  }
  String destination=headers.getDestination();
  StompCommand command=headers.getCommand();
  SimpMessageType messageType=headers.getMessageType();
  if (SimpMessageType.MESSAGE.equals(messageType)) {
    sessionId=(sessionId == null) ? SystemStompConnectionHandler.SESSION_ID : sessionId;
    headers.setSessionId(sessionId);
    command=headers.updateStompCommandAsClientMessage();
    message=MessageBuilder.withPayload(message.getPayload()).setHeaders(headers).build();
  }
  if (sessionId == null) {
    if (logger.isWarnEnabled()) {
      logger.warn("No sessionId, ignoring message: " + message);
    }
    return;
  }
  if ((command != null) && command.requiresDestination() && !checkDestinationPrefix(destination)) {
    if (logger.isTraceEnabled()) {
      logger.trace("Ignoring message to destination=" + destination);
    }
    return;
  }
  if (logger.isTraceEnabled()) {
    logger.trace("Processing message=" + message);
  }
  if (SimpMessageType.CONNECT.equals(messageType)) {
    if (logger.isDebugEnabled()) {
      logger.debug("Processing CONNECT (total connected=" + this.connectionHandlers.size() + ")");
    }
    headers.setLogin(this.clientLogin);
    headers.setPasscode(this.clientPasscode);
    if (getVirtualHost() != null) {
      headers.setHost(getVirtualHost());
    }
    StompConnectionHandler handler=new StompConnectionHandler(sessionId,headers);
    this.connectionHandlers.put(sessionId,handler);
    this.tcpClient.connect(handler);
  }
 else   if (SimpMessageType.DISCONNECT.equals(messageType)) {
    StompConnectionHandler handler=this.connectionHandlers.get(sessionId);
    if (handler == null) {
      if (logger.isTraceEnabled()) {
        logger.trace("Connection already removed for sessionId '" + sessionId + "'");
      }
      return;
    }
    handler.forward(message);
  }
 else {
    StompConnectionHandler handler=this.connectionHandlers.get(sessionId);
    if (handler == null) {
      if (logger.isWarnEnabled()) {
        logger.warn("Connection for sessionId '" + sessionId + "' not found. Ignoring message");
      }
      return;
    }
    handler.forward(message);
  }
}
