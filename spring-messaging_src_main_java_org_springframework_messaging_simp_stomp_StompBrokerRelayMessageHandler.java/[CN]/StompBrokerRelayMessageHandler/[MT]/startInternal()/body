{
  this.clientInboundChannel.subscribe(this);
  this.brokerChannel.subscribe(this);
  if (this.tcpClient == null) {
    StompDecoder decoder=new StompDecoder();
    decoder.setHeaderInitializer(getHeaderInitializer());
    Reactor11StompCodec codec=new Reactor11StompCodec(new StompEncoder(),decoder);
    this.tcpClient=new StompTcpClientFactory().create(this.relayHost,this.relayPort,codec);
  }
  if (logger.isInfoEnabled()) {
    logger.info("Connecting \"system\" session to " + this.relayHost + ":"+ this.relayPort);
  }
  StompHeaderAccessor headers=StompHeaderAccessor.create(StompCommand.CONNECT);
  headers.setAcceptVersion("1.1,1.2");
  headers.setLogin(this.systemLogin);
  headers.setPasscode(this.systemPasscode);
  headers.setHeartbeat(this.systemHeartbeatSendInterval,this.systemHeartbeatReceiveInterval);
  headers.setHost(getVirtualHost());
  SystemStompConnectionHandler handler=new SystemStompConnectionHandler(headers);
  this.connectionHandlers.put(handler.getSessionId(),handler);
  this.stats.incrementConnectCount();
  this.tcpClient.connect(handler,new FixedIntervalReconnectStrategy(5000));
}
