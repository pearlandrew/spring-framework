{
  RelaySession session=new RelaySession(STOMP_RELAY_SYSTEM_SESSION_ID){
    @Override protected void sendMessageToClient(    Message<?> message){
    }
    @Override protected Composable<TcpConnection<String,String>> openConnection(){
      return tcpClient.open(new Reconnect(){
        @Override public Tuple2<InetSocketAddress,Long> reconnect(        InetSocketAddress currentAddress,        int attempt){
          return Tuple.of(currentAddress,5000L);
        }
      }
);
    }
  }
;
  this.relaySessions.put(STOMP_RELAY_SYSTEM_SESSION_ID,session);
  StompHeaderAccessor headers=StompHeaderAccessor.create(StompCommand.CONNECT);
  headers.setAcceptVersion("1.1,1.2");
  headers.setLogin(this.systemLogin);
  headers.setPasscode(this.systemPasscode);
  headers.setHeartbeat(0,0);
  if (logger.isDebugEnabled()) {
    logger.debug("Sending STOMP CONNECT frame to initialize \"system\" TCP connection");
  }
  Message<?> message=MessageBuilder.withPayloadAndHeaders(new byte[0],headers).build();
  session.open(message);
}
