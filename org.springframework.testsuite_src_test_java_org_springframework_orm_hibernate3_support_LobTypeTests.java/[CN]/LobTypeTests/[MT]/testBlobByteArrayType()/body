{
  byte[] content="content".getBytes();
  lobHandler.getBlobAsBytes(rs,"column");
  lobHandlerControl.setReturnValue(content);
  lobCreator.setBlobAsBytes(ps,1,content);
  lobCreatorControl.setVoidCallable(1);
  lobHandlerControl.replay();
  lobCreatorControl.replay();
  BlobByteArrayType type=new BlobByteArrayType(lobHandler,null);
  assertEquals(1,type.sqlTypes().length);
  assertEquals(Types.BLOB,type.sqlTypes()[0]);
  assertEquals(byte[].class,type.returnedClass());
  assertTrue(type.equals(new byte[]{(byte)255},new byte[]{(byte)255}));
  assertTrue(Arrays.equals(new byte[]{(byte)255},(byte[])type.deepCopy(new byte[]{(byte)255})));
  assertTrue(type.isMutable());
  assertEquals(content,type.nullSafeGet(rs,new String[]{"column"},null));
  TransactionSynchronizationManager.initSynchronization();
  try {
    type.nullSafeSet(ps,content,1);
    List synchs=TransactionSynchronizationManager.getSynchronizations();
    assertEquals(1,synchs.size());
    ((TransactionSynchronization)synchs.get(0)).beforeCompletion();
    ((TransactionSynchronization)synchs.get(0)).afterCompletion(TransactionSynchronization.STATUS_COMMITTED);
  }
  finally {
    TransactionSynchronizationManager.clearSynchronization();
  }
}
