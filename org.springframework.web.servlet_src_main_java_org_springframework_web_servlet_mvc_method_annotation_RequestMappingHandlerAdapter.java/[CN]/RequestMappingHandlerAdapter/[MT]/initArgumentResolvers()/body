{
  if (argumentResolvers != null) {
    return;
  }
  argumentResolvers=new HandlerMethodArgumentResolverComposite();
  argumentResolvers.addResolver(new RequestParamMethodArgumentResolver(beanFactory,false));
  argumentResolvers.addResolver(new RequestParamMapMethodArgumentResolver());
  argumentResolvers.addResolver(new PathVariableMethodArgumentResolver());
  argumentResolvers.addResolver(new ServletModelAttributeMethodProcessor(false));
  argumentResolvers.addResolver(new RequestResponseBodyMethodProcessor(messageConverters));
  argumentResolvers.addResolver(new RequestPartMethodArgumentResolver(messageConverters));
  argumentResolvers.addResolver(new RequestHeaderMethodArgumentResolver(beanFactory));
  argumentResolvers.addResolver(new RequestHeaderMapMethodArgumentResolver());
  argumentResolvers.addResolver(new ServletCookieValueMethodArgumentResolver(beanFactory));
  argumentResolvers.addResolver(new ExpressionValueMethodArgumentResolver(beanFactory));
  argumentResolvers.addResolvers(customArgumentResolvers);
  argumentResolvers.addResolver(new ServletRequestMethodArgumentResolver());
  argumentResolvers.addResolver(new ServletResponseMethodArgumentResolver());
  argumentResolvers.addResolver(new HttpEntityMethodProcessor(messageConverters));
  argumentResolvers.addResolver(new RedirectModelMethodArgumentResolver());
  argumentResolvers.addResolver(new ModelMethodProcessor());
  argumentResolvers.addResolver(new ErrorsMethodArgumentResolver());
  argumentResolvers.addResolver(new RequestParamMethodArgumentResolver(beanFactory,true));
  argumentResolvers.addResolver(new ServletModelAttributeMethodProcessor(true));
}
