{
  requestMethodArgResolvers.registerArgumentResolver(new RequestParamMethodArgumentResolver(beanFactory,false));
  requestMethodArgResolvers.registerArgumentResolver(new RequestParamMapMethodArgumentResolver());
  requestMethodArgResolvers.registerArgumentResolver(new PathVariableMethodArgumentResolver(beanFactory));
  requestMethodArgResolvers.registerArgumentResolver(new ServletModelAttributeMethodProcessor(false));
  requestMethodArgResolvers.registerArgumentResolver(new RequestResponseBodyMethodProcessor(messageConverters));
  requestMethodArgResolvers.registerArgumentResolver(new RequestHeaderMethodArgumentResolver(beanFactory));
  requestMethodArgResolvers.registerArgumentResolver(new RequestHeaderMapMethodArgumentResolver());
  requestMethodArgResolvers.registerArgumentResolver(new ServletCookieValueMethodArgumentResolver(beanFactory));
  requestMethodArgResolvers.registerArgumentResolver(new ExpressionValueMethodArgumentResolver(beanFactory));
  if (customArgumentResolvers != null) {
    for (    WebArgumentResolver customResolver : customArgumentResolvers) {
      requestMethodArgResolvers.registerArgumentResolver(new WebArgumentResolverAdapter(customResolver));
    }
  }
  requestMethodArgResolvers.registerArgumentResolver(new ServletRequestMethodArgumentResolver());
  requestMethodArgResolvers.registerArgumentResolver(new ServletResponseMethodArgumentResolver());
  requestMethodArgResolvers.registerArgumentResolver(new HttpEntityMethodProcessor(messageConverters));
  requestMethodArgResolvers.registerArgumentResolver(new ModelMethodProcessor());
  requestMethodArgResolvers.registerArgumentResolver(new ErrorsMethodArgumentResolver());
  requestMethodArgResolvers.registerArgumentResolver(new RequestParamMethodArgumentResolver(beanFactory,true));
  requestMethodArgResolvers.registerArgumentResolver(new ServletModelAttributeMethodProcessor(true));
}
