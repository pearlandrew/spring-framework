{
  ServletWebRequest webRequest=new ServletWebRequest(request,response);
  ServletInvocableHandlerMethod requestMappingMethod=createRequestMappingMethod(handlerMethod);
  ModelFactory modelFactory=getModelFactory(handlerMethod);
  FlashMap previousFlashMap=(FlashMap)request.getAttribute(FlashMapManager.PREVIOUS_FLASH_MAP_ATTRIBUTE);
  ModelAndViewContainer mavContainer=new ModelAndViewContainer();
  mavContainer.addAllAttributes(previousFlashMap);
  modelFactory.initModel(webRequest,mavContainer,requestMappingMethod);
  SessionStatus sessionStatus=new SimpleSessionStatus();
  requestMappingMethod.invokeAndHandle(webRequest,mavContainer,sessionStatus);
  modelFactory.updateModel(webRequest,mavContainer,sessionStatus);
  if (!mavContainer.isResolveView()) {
    return null;
  }
 else {
    ModelMap model=mavContainer.getModel();
    ModelAndView mav=new ModelAndView().addAllObjects(model);
    mav.setViewName(mavContainer.getViewName());
    if (!mavContainer.isViewReference()) {
      mav.setView((View)mavContainer.getView());
    }
    if (model instanceof RedirectModel) {
      RedirectModel redirectModel=(RedirectModel)model;
      FlashMap currentFlashMap=RequestContextUtils.getFlashMap(request);
      currentFlashMap.putAll(redirectModel.getFlashAttributes());
    }
    return mav;
  }
}
