{
  super();
  _nsURI="http://samples.springframework.org/flight";
  _xmlName="flightType";
  _elementDefinition=false;
  setCompositorAsSequence();
  org.exolab.castor.xml.util.XMLFieldDescriptorImpl desc=null;
  org.exolab.castor.mapping.FieldHandler handler=null;
  org.exolab.castor.xml.FieldValidator fieldValidator=null;
  desc=new org.exolab.castor.xml.util.XMLFieldDescriptorImpl(java.lang.Long.TYPE,"_number","number",org.exolab.castor.xml.NodeType.Element);
  handler=new org.exolab.castor.xml.XMLFieldHandler(){
    public java.lang.Object getValue(    java.lang.Object object) throws IllegalStateException {
      FlightType target=(FlightType)object;
      if (!target.hasNumber()) {
        return null;
      }
      return new java.lang.Long(target.getNumber());
    }
    public void setValue(    java.lang.Object object,    java.lang.Object value) throws IllegalStateException, IllegalArgumentException {
      try {
        FlightType target=(FlightType)object;
        if (value == null) {
          return;
        }
        target.setNumber(((java.lang.Long)value).longValue());
      }
 catch (      java.lang.Exception ex) {
        throw new IllegalStateException(ex.toString());
      }
    }
    public java.lang.Object newInstance(    java.lang.Object parent){
      return null;
    }
  }
;
  desc.setHandler(handler);
  desc.setNameSpaceURI("http://samples.springframework.org/flight");
  desc.setRequired(true);
  desc.setMultivalued(false);
  addFieldDescriptor(desc);
  fieldValidator=new org.exolab.castor.xml.FieldValidator();
  fieldValidator.setMinOccurs(1);
{
    org.exolab.castor.xml.validators.LongValidator typeValidator;
    typeValidator=new org.exolab.castor.xml.validators.LongValidator();
    fieldValidator.setValidator(typeValidator);
    typeValidator.setMinInclusive(-9223372036854775808L);
    typeValidator.setMaxInclusive(9223372036854775807L);
  }
  desc.setValidator(fieldValidator);
}
