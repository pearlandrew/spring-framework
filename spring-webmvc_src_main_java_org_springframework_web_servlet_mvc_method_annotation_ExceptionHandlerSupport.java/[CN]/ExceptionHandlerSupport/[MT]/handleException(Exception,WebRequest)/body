{
  HttpHeaders headers=new HttpHeaders();
  HttpStatus status;
  Object body;
  if (ex instanceof NoSuchRequestHandlingMethodException) {
    status=HttpStatus.NOT_FOUND;
    body=handleNoSuchRequestHandlingMethod((NoSuchRequestHandlingMethodException)ex,headers,status,request);
  }
 else   if (ex instanceof HttpRequestMethodNotSupportedException) {
    status=HttpStatus.METHOD_NOT_ALLOWED;
    body=handleHttpRequestMethodNotSupported((HttpRequestMethodNotSupportedException)ex,headers,status,request);
  }
 else   if (ex instanceof HttpMediaTypeNotSupportedException) {
    status=HttpStatus.UNSUPPORTED_MEDIA_TYPE;
    body=handleHttpMediaTypeNotSupported((HttpMediaTypeNotSupportedException)ex,headers,status,request);
  }
 else   if (ex instanceof HttpMediaTypeNotAcceptableException) {
    status=HttpStatus.NOT_ACCEPTABLE;
    body=handleHttpMediaTypeNotAcceptable((HttpMediaTypeNotAcceptableException)ex,headers,status,request);
  }
 else   if (ex instanceof MissingServletRequestParameterException) {
    status=HttpStatus.BAD_REQUEST;
    body=handleMissingServletRequestParameter((MissingServletRequestParameterException)ex,headers,status,request);
  }
 else   if (ex instanceof ServletRequestBindingException) {
    status=HttpStatus.BAD_REQUEST;
    body=handleServletRequestBindingException((ServletRequestBindingException)ex,headers,status,request);
  }
 else   if (ex instanceof ConversionNotSupportedException) {
    status=HttpStatus.INTERNAL_SERVER_ERROR;
    body=handleConversionNotSupported((ConversionNotSupportedException)ex,headers,status,request);
  }
 else   if (ex instanceof TypeMismatchException) {
    status=HttpStatus.BAD_REQUEST;
    body=handleTypeMismatch((TypeMismatchException)ex,headers,status,request);
  }
 else   if (ex instanceof HttpMessageNotReadableException) {
    status=HttpStatus.BAD_REQUEST;
    body=handleHttpMessageNotReadable((HttpMessageNotReadableException)ex,headers,status,request);
  }
 else   if (ex instanceof HttpMessageNotWritableException) {
    status=HttpStatus.INTERNAL_SERVER_ERROR;
    body=handleHttpMessageNotWritable((HttpMessageNotWritableException)ex,headers,status,request);
  }
 else   if (ex instanceof MethodArgumentNotValidException) {
    status=HttpStatus.BAD_REQUEST;
    body=handleMethodArgumentNotValid((MethodArgumentNotValidException)ex,headers,status,request);
  }
 else   if (ex instanceof MissingServletRequestPartException) {
    status=HttpStatus.BAD_REQUEST;
    body=handleMissingServletRequestPart((MissingServletRequestPartException)ex,headers,status,request);
  }
 else   if (ex instanceof BindException) {
    status=HttpStatus.BAD_REQUEST;
    body=handleBindException((BindException)ex,headers,status,request);
  }
 else {
    logger.warn("Unknown exception type: " + ex.getClass().getName());
    status=HttpStatus.INTERNAL_SERVER_ERROR;
    body=handleExceptionInternal(ex,headers,status,request);
  }
  return new ResponseEntity<Object>(body,headers,status);
}
