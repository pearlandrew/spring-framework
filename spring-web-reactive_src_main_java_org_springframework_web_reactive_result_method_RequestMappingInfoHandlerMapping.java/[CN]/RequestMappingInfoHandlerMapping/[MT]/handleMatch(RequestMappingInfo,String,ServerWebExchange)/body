{
  super.handleMatch(info,lookupPath,exchange);
  String bestPattern;
  Map<String,String> uriVariables;
  Map<String,String> decodedUriVariables;
  Set<String> patterns=info.getPatternsCondition().getPatterns();
  if (patterns.isEmpty()) {
    bestPattern=lookupPath;
    uriVariables=Collections.emptyMap();
    decodedUriVariables=Collections.emptyMap();
  }
 else {
    bestPattern=patterns.iterator().next();
    uriVariables=getPathMatcher().extractUriTemplateVariables(bestPattern,lookupPath);
    decodedUriVariables=getPathHelper().decodePathVariables(exchange,uriVariables);
  }
  exchange.getAttributes().put(BEST_MATCHING_PATTERN_ATTRIBUTE,bestPattern);
  exchange.getAttributes().put(URI_TEMPLATE_VARIABLES_ATTRIBUTE,decodedUriVariables);
  Map<String,MultiValueMap<String,String>> matrixVars=extractMatrixVariables(exchange,uriVariables);
  exchange.getAttributes().put(MATRIX_VARIABLES_ATTRIBUTE,matrixVars);
  if (!info.getProducesCondition().getProducibleMediaTypes().isEmpty()) {
    Set<MediaType> mediaTypes=info.getProducesCondition().getProducibleMediaTypes();
    exchange.getAttributes().put(PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE,mediaTypes);
  }
}
