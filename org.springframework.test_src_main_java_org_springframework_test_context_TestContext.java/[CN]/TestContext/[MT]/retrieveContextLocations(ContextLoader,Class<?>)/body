{
  Assert.notNull(contextLoader,"ContextLoader must not be null");
  Assert.notNull(clazz,"Class must not be null");
  List<String> locationsList=new ArrayList<String>();
  Class<ContextConfiguration> annotationType=ContextConfiguration.class;
  Class<?> declaringClass=AnnotationUtils.findAnnotationDeclaringClass(annotationType,clazz);
  Assert.notNull(declaringClass,"Could not find an 'annotation declaring class' for annotation type [" + annotationType + "] and class ["+ clazz+ "]");
  while (declaringClass != null) {
    ContextConfiguration contextConfiguration=declaringClass.getAnnotation(annotationType);
    if (logger.isTraceEnabled()) {
      logger.trace("Retrieved @ContextConfiguration [" + contextConfiguration + "] for declaring class ["+ declaringClass+ "]");
    }
    String[] locations=contextLoader.processLocations(declaringClass,contextConfiguration.locations());
    locationsList.addAll(0,Arrays.<String>asList(locations));
    declaringClass=contextConfiguration.inheritLocations() ? AnnotationUtils.findAnnotationDeclaringClass(annotationType,declaringClass.getSuperclass()) : null;
  }
  return locationsList.toArray(new String[locationsList.size()]);
}
