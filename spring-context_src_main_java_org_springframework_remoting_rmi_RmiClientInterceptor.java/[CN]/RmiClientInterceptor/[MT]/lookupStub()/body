{
  try {
    Remote stub=null;
    if (this.registryClientSocketFactory != null) {
      URL url=new URL(null,getServiceUrl(),new DummyURLStreamHandler());
      String protocol=url.getProtocol();
      if (protocol != null && !"rmi".equals(protocol)) {
        throw new MalformedURLException("Invalid URL scheme '" + protocol + "'");
      }
      String host=url.getHost();
      int port=url.getPort();
      String name=url.getPath();
      if (name != null && name.startsWith("/")) {
        name=name.substring(1);
      }
      Registry registry=LocateRegistry.getRegistry(host,port,this.registryClientSocketFactory);
      stub=registry.lookup(name);
    }
 else {
      stub=Naming.lookup(getServiceUrl());
    }
    if (logger.isDebugEnabled()) {
      logger.debug("Located RMI stub with URL [" + getServiceUrl() + "]");
    }
    return stub;
  }
 catch (  MalformedURLException ex) {
    throw new RemoteLookupFailureException("Service URL [" + getServiceUrl() + "] is invalid",ex);
  }
catch (  NotBoundException ex) {
    throw new RemoteLookupFailureException("Could not find RMI service [" + getServiceUrl() + "] in RMI registry",ex);
  }
catch (  RemoteException ex) {
    throw new RemoteLookupFailureException("Lookup of RMI stub failed",ex);
  }
}
