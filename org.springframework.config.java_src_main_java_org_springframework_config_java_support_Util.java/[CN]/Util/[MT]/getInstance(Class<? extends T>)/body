{
  try {
    Constructor<? extends T> noArgCtor=clazz.getDeclaredConstructor();
    ReflectionUtils.makeAccessible(noArgCtor);
    return noArgCtor.newInstance();
  }
 catch (  Exception ex) {
    ReflectionUtils.handleReflectionException(ex);
    throw new IllegalStateException(format("Unexpected reflection exception - %s: %s",ex.getClass().getName(),ex.getMessage()));
  }
}
