{
  URI uri=URI.create("http://localhost/path");
  RequestPredicate predicate=RequestPredicates.GET("/p*");
  MockRequest request=MockRequest.builder().method(HttpMethod.GET).uri(uri).build();
  assertTrue(predicate.test(request));
  predicate=RequestPredicates.HEAD("/p*");
  request=MockRequest.builder().method(HttpMethod.HEAD).uri(uri).build();
  assertTrue(predicate.test(request));
  predicate=RequestPredicates.POST("/p*");
  request=MockRequest.builder().method(HttpMethod.POST).uri(uri).build();
  assertTrue(predicate.test(request));
  predicate=RequestPredicates.PUT("/p*");
  request=MockRequest.builder().method(HttpMethod.PUT).uri(uri).build();
  assertTrue(predicate.test(request));
  predicate=RequestPredicates.PATCH("/p*");
  request=MockRequest.builder().method(HttpMethod.PATCH).uri(uri).build();
  assertTrue(predicate.test(request));
  predicate=RequestPredicates.DELETE("/p*");
  request=MockRequest.builder().method(HttpMethod.DELETE).uri(uri).build();
  assertTrue(predicate.test(request));
  predicate=RequestPredicates.OPTIONS("/p*");
  request=MockRequest.builder().method(HttpMethod.OPTIONS).uri(uri).build();
  assertTrue(predicate.test(request));
}
