{
  if (ClassUtils.isPresent("java.nio.file.Path",this.moduleClassLoader)) {
    try {
      Class<? extends Module> jdk7Module=(Class<? extends Module>)ClassUtils.forName("com.fasterxml.jackson.datatype.jdk7.Jdk7Module",this.moduleClassLoader);
      objectMapper.registerModule(BeanUtils.instantiate(jdk7Module));
    }
 catch (    ClassNotFoundException ex) {
    }
  }
  if (ClassUtils.isPresent("java.util.Optional",this.moduleClassLoader)) {
    try {
      Class<? extends Module> jdk8Module=(Class<? extends Module>)ClassUtils.forName("com.fasterxml.jackson.datatype.jdk8.Jdk8Module",this.moduleClassLoader);
      objectMapper.registerModule(BeanUtils.instantiate(jdk8Module));
    }
 catch (    ClassNotFoundException ex) {
    }
  }
  if (ClassUtils.isPresent("java.time.LocalDate",this.moduleClassLoader)) {
    try {
      Class<? extends Module> javaTimeModule=(Class<? extends Module>)ClassUtils.forName("com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",this.moduleClassLoader);
      objectMapper.registerModule(BeanUtils.instantiate(javaTimeModule));
    }
 catch (    ClassNotFoundException ex) {
    }
  }
  if (ClassUtils.isPresent("org.joda.time.LocalDate",this.moduleClassLoader)) {
    try {
      Class<? extends Module> jodaModule=(Class<? extends Module>)ClassUtils.forName("com.fasterxml.jackson.datatype.joda.JodaModule",this.moduleClassLoader);
      objectMapper.registerModule(BeanUtils.instantiate(jodaModule));
    }
 catch (    ClassNotFoundException ex) {
    }
  }
  if (ClassUtils.isPresent("kotlin.Unit",this.moduleClassLoader)) {
    try {
      Class<? extends Module> kotlinModule=(Class<? extends Module>)ClassUtils.forName("com.fasterxml.jackson.module.kotlin.KotlinModule",this.moduleClassLoader);
      objectMapper.registerModule(BeanUtils.instantiate(kotlinModule));
    }
 catch (    ClassNotFoundException ex) {
    }
  }
}
