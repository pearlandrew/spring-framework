{
  final Method testMethod=testContext.getTestMethod();
  final Class<?> testClass=testContext.getTestClass();
  Assert.notNull(testMethod,"The test method of the supplied TestContext must not be null");
  TransactionContext txContext=TransactionContextHolder.removeCurrentTransactionContext();
  if (txContext != null) {
    throw new IllegalStateException("Cannot start a new transaction without ending the existing transaction.");
  }
  PlatformTransactionManager tm=null;
  TransactionAttribute transactionAttribute=this.attributeSource.getTransactionAttribute(testMethod,testClass);
  if (transactionAttribute != null) {
    transactionAttribute=TestContextTransactionUtils.createDelegatingTransactionAttribute(testContext,transactionAttribute);
    if (logger.isDebugEnabled()) {
      logger.debug("Explicit transaction definition [" + transactionAttribute + "] found for test context "+ testContext);
    }
    if (transactionAttribute.getPropagationBehavior() == TransactionDefinition.PROPAGATION_NOT_SUPPORTED) {
      return;
    }
    tm=getTransactionManager(testContext,transactionAttribute.getQualifier());
    if (tm == null) {
      throw new IllegalStateException(String.format("Failed to retrieve PlatformTransactionManager for @Transactional test for test context %s.",testContext));
    }
  }
  if (tm != null) {
    txContext=new TransactionContext(testContext,tm,transactionAttribute,isRollback(testContext));
    runBeforeTransactionMethods(testContext);
    txContext.startTransaction();
    TransactionContextHolder.setCurrentTransactionContext(txContext);
  }
}
