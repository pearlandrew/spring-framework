{
  final Method testMethod=testContext.getTestMethod();
  Assert.notNull(testMethod,"The test method of the supplied TestContext must not be null");
  if (this.transactionContextCache.remove(testMethod) != null) {
    throw new IllegalStateException("Cannot start new transaction without ending existing transaction: " + "Invoke endTransaction() before startNewTransaction().");
  }
  if (testMethod.isAnnotationPresent(NotTransactional.class)) {
    return;
  }
  PlatformTransactionManager tm=null;
  TransactionAttribute transactionAttribute=this.attributeSource.getTransactionAttribute(testMethod,testContext.getTestClass());
  if (transactionAttribute != null) {
    transactionAttribute=new DelegatingTransactionAttribute(transactionAttribute){
      public String getName(){
        return testMethod.getName();
      }
    }
;
    if (logger.isDebugEnabled()) {
      logger.debug("Explicit transaction definition [" + transactionAttribute + "] found for test context "+ testContext);
    }
    tm=getTransactionManager(testContext,transactionAttribute.getQualifier());
  }
  if (tm != null) {
    TransactionContext txContext=new TransactionContext(tm,transactionAttribute);
    runBeforeTransactionMethods(testContext);
    startNewTransaction(testContext,txContext);
    this.transactionContextCache.put(testMethod,txContext);
  }
}
