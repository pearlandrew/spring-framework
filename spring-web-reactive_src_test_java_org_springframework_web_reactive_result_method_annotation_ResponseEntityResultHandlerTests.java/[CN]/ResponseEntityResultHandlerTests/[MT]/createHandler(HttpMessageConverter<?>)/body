{
  List<HttpMessageConverter<?>> converterList;
  if (ObjectUtils.isEmpty(converters)) {
    converterList=new ArrayList<>();
    converterList.add(new CodecHttpMessageConverter<>(new ByteBufferEncoder()));
    converterList.add(new CodecHttpMessageConverter<>(new StringEncoder()));
    converterList.add(new ResourceHttpMessageConverter());
    converterList.add(new CodecHttpMessageConverter<>(new Jaxb2Encoder()));
    converterList.add(new CodecHttpMessageConverter<>(new JacksonJsonEncoder()));
  }
 else {
    converterList=Arrays.asList(converters);
  }
  GenericConversionService service=new GenericConversionService();
  service.addConverter(new MonoToCompletableFutureConverter());
  service.addConverter(new PublisherToFluxConverter());
  service.addConverter(new ReactorToRxJava1Converter());
  RequestedContentTypeResolver resolver=new RequestedContentTypeResolverBuilder().build();
  return new ResponseEntityResultHandler(converterList,service,resolver);
}
