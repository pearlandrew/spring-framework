{
  Set<String> allowedMethods=new HashSet<String>(6);
  Set<RequestMappingInfo> patternMatches=new HashSet<RequestMappingInfo>();
  Set<RequestMappingInfo> patternAndMethodMatches=new HashSet<RequestMappingInfo>();
  for (  RequestMappingInfo info : requestMappingInfos) {
    if (info.getPatternsCondition().getMatchingCondition(request) != null) {
      patternMatches.add(info);
      if (info.getMethodsCondition().getMatchingCondition(request) != null) {
        patternAndMethodMatches.add(info);
      }
 else {
        for (        RequestMethod method : info.getMethodsCondition().getMethods()) {
          allowedMethods.add(method.name());
        }
      }
    }
  }
  if (patternMatches.isEmpty()) {
    return null;
  }
 else   if (patternAndMethodMatches.isEmpty() && !allowedMethods.isEmpty()) {
    throw new HttpRequestMethodNotSupportedException(request.getMethod(),allowedMethods);
  }
  Set<MediaType> consumableMediaTypes;
  Set<MediaType> producibleMediaTypes;
  Set<String> paramConditions;
  if (patternAndMethodMatches.isEmpty()) {
    consumableMediaTypes=getConsumableMediaTypes(request,patternMatches);
    producibleMediaTypes=getProdicubleMediaTypes(request,patternMatches);
    paramConditions=getRequestParams(request,patternMatches);
  }
 else {
    consumableMediaTypes=getConsumableMediaTypes(request,patternAndMethodMatches);
    producibleMediaTypes=getProdicubleMediaTypes(request,patternAndMethodMatches);
    paramConditions=getRequestParams(request,patternAndMethodMatches);
  }
  if (!consumableMediaTypes.isEmpty()) {
    MediaType contentType=null;
    if (StringUtils.hasLength(request.getContentType())) {
      try {
        contentType=MediaType.parseMediaType(request.getContentType());
      }
 catch (      IllegalArgumentException ex) {
        throw new HttpMediaTypeNotSupportedException(ex.getMessage());
      }
    }
    throw new HttpMediaTypeNotSupportedException(contentType,new ArrayList<MediaType>(consumableMediaTypes));
  }
 else   if (!producibleMediaTypes.isEmpty()) {
    throw new HttpMediaTypeNotAcceptableException(new ArrayList<MediaType>(producibleMediaTypes));
  }
 else   if (!CollectionUtils.isEmpty(paramConditions)) {
    String[] params=paramConditions.toArray(new String[paramConditions.size()]);
    throw new UnsatisfiedServletRequestParameterException(params,request.getParameterMap());
  }
 else {
    return null;
  }
}
