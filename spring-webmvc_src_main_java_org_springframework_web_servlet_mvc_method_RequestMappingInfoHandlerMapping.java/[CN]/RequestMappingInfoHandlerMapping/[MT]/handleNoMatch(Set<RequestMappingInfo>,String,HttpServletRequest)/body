{
  PartialMatchHelper helper=new PartialMatchHelper(infos,request);
  if (helper.isEmpty()) {
    return null;
  }
  if (helper.hasMethodsMismatch()) {
    Set<String> methods=helper.getAllowedMethods();
    if (HttpMethod.OPTIONS.matches(request.getMethod())) {
      HttpOptionsHandler handler=new HttpOptionsHandler(methods);
      return new HandlerMethod(handler,HTTP_OPTIONS_HANDLE_METHOD);
    }
    throw new HttpRequestMethodNotSupportedException(request.getMethod(),methods);
  }
  if (helper.hasConsumesMismatch()) {
    Set<MediaType> mediaTypes=helper.getConsumableMediaTypes();
    MediaType contentType=null;
    if (StringUtils.hasLength(request.getContentType())) {
      try {
        contentType=MediaType.parseMediaType(request.getContentType());
      }
 catch (      InvalidMediaTypeException ex) {
        throw new HttpMediaTypeNotSupportedException(ex.getMessage());
      }
    }
    throw new HttpMediaTypeNotSupportedException(contentType,new ArrayList<MediaType>(mediaTypes));
  }
  if (helper.hasProducesMismatch()) {
    Set<MediaType> mediaTypes=helper.getProducibleMediaTypes();
    throw new HttpMediaTypeNotAcceptableException(new ArrayList<MediaType>(mediaTypes));
  }
  if (helper.hasParamsMismatch()) {
    List<String[]> conditions=helper.getParamConditions();
    throw new UnsatisfiedServletRequestParameterException(conditions,request.getParameterMap());
  }
  return null;
}
