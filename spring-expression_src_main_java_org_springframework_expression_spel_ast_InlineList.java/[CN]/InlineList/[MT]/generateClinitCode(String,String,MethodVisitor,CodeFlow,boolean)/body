{
  mv.visitTypeInsn(NEW,"java/util/ArrayList");
  mv.visitInsn(DUP);
  mv.visitMethodInsn(INVOKESPECIAL,"java/util/ArrayList","<init>","()V",false);
  if (!nested) {
    mv.visitFieldInsn(PUTSTATIC,clazzname,constantFieldName,"Ljava/util/List;");
  }
  int childcount=getChildCount();
  for (int c=0; c < childcount; c++) {
    if (!nested) {
      mv.visitFieldInsn(GETSTATIC,clazzname,constantFieldName,"Ljava/util/List;");
    }
 else {
      mv.visitInsn(DUP);
    }
    if (children[c] instanceof InlineList) {
      ((InlineList)children[c]).generateClinitCode(clazzname,constantFieldName,mv,codeflow,true);
    }
 else {
      children[c].generateCode(mv,codeflow);
      if (CodeFlow.isPrimitive(codeflow.lastDescriptor())) {
        CodeFlow.insertBoxIfNecessary(mv,codeflow.lastDescriptor().charAt(0));
      }
    }
    mv.visitMethodInsn(INVOKEINTERFACE,"java/util/List","add","(Ljava/lang/Object;)Z",true);
    mv.visitInsn(POP);
  }
}
