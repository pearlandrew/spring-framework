{
  String originalBeanName=definition.getBeanName();
  BeanDefinition targetDefinition=definition.getBeanDefinition();
  RootBeanDefinition proxyDefinition=new RootBeanDefinition(ScopedProxyFactoryBean.class);
  proxyDefinition.setOriginatingBeanDefinition(targetDefinition);
  proxyDefinition.setSource(definition.getSource());
  proxyDefinition.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);
  String targetBeanName=getTargetBeanName(originalBeanName);
  proxyDefinition.getPropertyValues().add("targetBeanName",targetBeanName);
  if (proxyTargetClass) {
    targetDefinition.setAttribute(AutoProxyUtils.PRESERVE_TARGET_CLASS_ATTRIBUTE,Boolean.TRUE);
  }
 else {
    proxyDefinition.getPropertyValues().add("proxyTargetClass",Boolean.FALSE);
  }
  proxyDefinition.setAutowireCandidate(targetDefinition.isAutowireCandidate());
  proxyDefinition.setPrimary(targetDefinition.isPrimary());
  if (targetDefinition instanceof AbstractBeanDefinition) {
    proxyDefinition.copyQualifiersFrom((AbstractBeanDefinition)targetDefinition);
  }
  targetDefinition.setAutowireCandidate(false);
  targetDefinition.setPrimary(false);
  registry.registerBeanDefinition(targetBeanName,targetDefinition);
  return new BeanDefinitionHolder(proxyDefinition,originalBeanName,definition.getAliases());
}
