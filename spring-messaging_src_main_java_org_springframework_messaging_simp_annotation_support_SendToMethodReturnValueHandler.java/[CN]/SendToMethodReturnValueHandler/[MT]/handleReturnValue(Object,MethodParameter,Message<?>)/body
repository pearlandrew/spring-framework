{
  if (returnValue == null) {
    return;
  }
  MessageHeaders headers=message.getHeaders();
  String sessionId=SimpMessageHeaderAccessor.getSessionId(headers);
  PlaceholderResolver varResolver=initVarResolver(headers);
  SendToUser sendToUser=getSendToUser(returnType);
  if (sendToUser != null) {
    boolean broadcast=sendToUser.broadcast();
    String user=getUserName(message,headers);
    if (user == null) {
      if (sessionId == null) {
        throw new MissingSessionUserException(message);
      }
      user=sessionId;
      broadcast=false;
    }
    String[] destinations=getTargetDestinations(sendToUser,message,this.defaultUserDestinationPrefix);
    for (    String destination : destinations) {
      destination=this.placeholderHelper.replacePlaceholders(destination,varResolver);
      if (broadcast) {
        this.messagingTemplate.convertAndSendToUser(user,destination,returnValue,createHeaders(null,returnType));
      }
 else {
        this.messagingTemplate.convertAndSendToUser(user,destination,returnValue,createHeaders(sessionId,returnType));
      }
    }
  }
 else {
    SendTo sendTo=getSendTo(returnType);
    String[] destinations=getTargetDestinations(sendTo,message,this.defaultDestinationPrefix);
    for (    String destination : destinations) {
      destination=this.placeholderHelper.replacePlaceholders(destination,varResolver);
      this.messagingTemplate.convertAndSend(destination,returnValue,createHeaders(sessionId,returnType));
    }
  }
}
