{
  if (returnValue == null) {
    return;
  }
  SimpMessageHeaderAccessor inputHeaders=SimpMessageHeaderAccessor.wrap(inputMessage);
  String sessionId=inputHeaders.getSessionId();
  MessagePostProcessor postProcessor=new SessionHeaderPostProcessor(sessionId);
  SendToUser sendToUser=returnType.getMethodAnnotation(SendToUser.class);
  if (sendToUser != null) {
    if (inputHeaders.getUser() == null) {
      throw new MissingSessionUserException(inputMessage);
    }
    String user=inputHeaders.getUser().getName();
    for (    String destination : getDestinations(sendToUser,inputHeaders.getDestination())) {
      this.messagingTemplate.convertAndSendToUser(user,destination,returnValue,postProcessor);
    }
    return;
  }
  SendTo sendTo=returnType.getMethodAnnotation(SendTo.class);
  if (sendTo != null) {
    for (    String destination : getDestinations(sendTo,inputHeaders.getDestination())) {
      this.messagingTemplate.convertAndSend(destination,returnValue,postProcessor);
    }
    return;
  }
  this.messagingTemplate.convertAndSend(inputHeaders.getDestination(),returnValue,postProcessor);
}
