{
  Constants c=new Constants(A.class);
  assertEquals(c.toCode(new Integer(0),""),"DOG");
  assertEquals(c.toCode(new Integer(0),"D"),"DOG");
  assertEquals(c.toCode(new Integer(0),"DO"),"DOG");
  assertEquals(c.toCode(new Integer(0),"DoG"),"DOG");
  assertEquals(c.toCode(new Integer(0),null),"DOG");
  assertEquals(c.toCode(new Integer(66),""),"CAT");
  assertEquals(c.toCode(new Integer(66),"C"),"CAT");
  assertEquals(c.toCode(new Integer(66),"ca"),"CAT");
  assertEquals(c.toCode(new Integer(66),"cAt"),"CAT");
  assertEquals(c.toCode(new Integer(66),null),"CAT");
  assertEquals(c.toCode("",""),"S1");
  assertEquals(c.toCode("","s"),"S1");
  assertEquals(c.toCode("","s1"),"S1");
  assertEquals(c.toCode("",null),"S1");
  try {
    c.toCode("bogus","bogus");
    fail("Should have thrown ConstantException");
  }
 catch (  ConstantException expected) {
  }
  try {
    c.toCode("bogus",null);
    fail("Should have thrown ConstantException");
  }
 catch (  ConstantException expected) {
  }
  assertEquals(c.toCodeForProperty(new Integer(1),"myProperty"),"MY_PROPERTY_NO");
  assertEquals(c.toCodeForProperty(new Integer(2),"myProperty"),"MY_PROPERTY_YES");
  try {
    c.toCodeForProperty("bogus","bogus");
    fail("Should have thrown ConstantException");
  }
 catch (  ConstantException expected) {
  }
  assertEquals(c.toCodeForSuffix(new Integer(0),""),"DOG");
  assertEquals(c.toCodeForSuffix(new Integer(0),"G"),"DOG");
  assertEquals(c.toCodeForSuffix(new Integer(0),"OG"),"DOG");
  assertEquals(c.toCodeForSuffix(new Integer(0),"DoG"),"DOG");
  assertEquals(c.toCodeForSuffix(new Integer(0),null),"DOG");
  assertEquals(c.toCodeForSuffix(new Integer(66),""),"CAT");
  assertEquals(c.toCodeForSuffix(new Integer(66),"T"),"CAT");
  assertEquals(c.toCodeForSuffix(new Integer(66),"at"),"CAT");
  assertEquals(c.toCodeForSuffix(new Integer(66),"cAt"),"CAT");
  assertEquals(c.toCodeForSuffix(new Integer(66),null),"CAT");
  assertEquals(c.toCodeForSuffix("",""),"S1");
  assertEquals(c.toCodeForSuffix("","1"),"S1");
  assertEquals(c.toCodeForSuffix("","s1"),"S1");
  assertEquals(c.toCodeForSuffix("",null),"S1");
  try {
    c.toCodeForSuffix("bogus","bogus");
    fail("Should have thrown ConstantException");
  }
 catch (  ConstantException expected) {
  }
  try {
    c.toCodeForSuffix("bogus",null);
    fail("Should have thrown ConstantException");
  }
 catch (  ConstantException expected) {
  }
}
