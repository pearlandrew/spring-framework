{
  if (source == null) {
    return null;
  }
  Class<?> sourceClass=sourceType.getType();
  Class<?> targetClass=targetType.getType();
  try {
    if (!String.class.equals(targetClass)) {
      Method method=getToMethod(targetClass,sourceClass);
      if (method != null) {
        ReflectionUtils.makeAccessible(method);
        return method.invoke(source);
      }
    }
    Method method=getFactoryMethod(targetClass,sourceClass);
    if (method != null) {
      ReflectionUtils.makeAccessible(method);
      return method.invoke(null,source);
    }
    Constructor<?> constructor=getFactoryConstructor(targetClass,sourceClass);
    if (constructor != null) {
      return constructor.newInstance(source);
    }
  }
 catch (  InvocationTargetException ex) {
    throw new ConversionFailedException(sourceType,targetType,source,ex.getTargetException());
  }
catch (  Throwable ex) {
    throw new ConversionFailedException(sourceType,targetType,source,ex);
  }
  String message=String.format("No to%3$s() method exists on %1$s, and no static valueOf/of/from(%1$s) method or %3$s(%1$s) constructor exists on %2$s.",sourceClass.getName(),targetClass.getName(),targetClass.getSimpleName());
  throw new IllegalStateException(message);
}
