{
  if (source == null) {
    return null;
  }
  Class<?> sourceClass=sourceType.getType();
  Class<?> targetClass=targetType.getType();
  Member member=getValidatedMember(targetClass,sourceClass);
  try {
    if (member instanceof Method) {
      Method method=(Method)member;
      ReflectionUtils.makeAccessible(method);
      if (!Modifier.isStatic(method.getModifiers())) {
        return method.invoke(source);
      }
 else {
        return method.invoke(null,source);
      }
    }
 else     if (member instanceof Constructor) {
      Constructor<?> ctor=(Constructor)member;
      return ctor.newInstance(source);
    }
  }
 catch (  InvocationTargetException ex) {
    throw new ConversionFailedException(sourceType,targetType,source,ex.getTargetException());
  }
catch (  Throwable ex) {
    throw new ConversionFailedException(sourceType,targetType,source,ex);
  }
  throw new IllegalStateException(String.format("No to%3$s() method exists on %1$s, " + "and no static valueOf/of/from(%1$s) method or %3$s(%1$s) constructor exists on %2$s.",sourceClass.getName(),targetClass.getName(),targetClass.getSimpleName()));
}
