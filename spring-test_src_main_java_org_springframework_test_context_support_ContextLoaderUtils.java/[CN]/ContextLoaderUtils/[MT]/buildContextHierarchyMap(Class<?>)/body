{
  final Map<String,List<ContextConfigurationAttributes>> map=new LinkedHashMap<String,List<ContextConfigurationAttributes>>();
  int hierarchyLevel=1;
  for (  List<ContextConfigurationAttributes> configAttributesList : resolveContextHierarchyAttributes(testClass)) {
    for (    ContextConfigurationAttributes configAttributes : configAttributesList) {
      String name=configAttributes.getName();
      if (!StringUtils.hasText(name)) {
        name=GENERATED_CONTEXT_HIERARCHY_LEVEL_PREFIX + hierarchyLevel;
      }
      if (!map.containsKey(name)) {
        hierarchyLevel++;
        map.put(name,new ArrayList<ContextConfigurationAttributes>());
      }
      map.get(name).add(configAttributes);
    }
  }
  Set<List<ContextConfigurationAttributes>> set=new HashSet<List<ContextConfigurationAttributes>>(map.values());
  if (set.size() != map.size()) {
    String msg=String.format("The @ContextConfiguration elements configured via " + "@ContextHierarchy in test class [%s] and its superclasses must " + "define unique contexts per hierarchy level.",testClass.getName());
    logger.error(msg);
    throw new IllegalStateException(msg);
  }
  return map;
}
