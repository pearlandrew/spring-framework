{
  try {
    if (this.argsRequiringConversion != null && arguments != null) {
      ReflectionHelper.convertArguments(context.getTypeConverter(),arguments,this.method,this.argsRequiringConversion,this.varargsPosition);
    }
    if (this.method.isVarArgs()) {
      arguments=ReflectionHelper.setupArgumentsForVarargsInvocation(this.method.getParameterTypes(),arguments);
    }
    ReflectionUtils.makeAccessible(this.method);
    return new TypedValue(this.method.invoke(target,arguments),new TypeDescriptor(new MethodParameter(this.method,-1)));
  }
 catch (  Exception ex) {
    throw new AccessException("Problem invoking method: " + this.method,ex);
  }
}
