{
  ShadowMatchImpl shadowMatchImplementation=(ShadowMatchImpl)shadowMatch;
  try {
    Field testField=shadowMatchImplementation.getClass().getDeclaredField("residualTest");
    ReflectionUtils.makeAccessible(testField);
    this.runtimeTest=(Test)testField.get(shadowMatch);
  }
 catch (  NoSuchFieldException noSuchFieldEx) {
    throw new IllegalStateException("The version of aspectjtools.jar / aspectjweaver.jar " + "on the classpath is incompatible with this version of Spring: Expected field " + "'runtimeTest' is not present on ShadowMatchImpl class.");
  }
catch (  IllegalAccessException illegalAccessEx) {
    throw new IllegalStateException("Unable to access ShadowMatchImpl.runtimeTest field.");
  }
}
