{
  if (handlerMethod != null) {
    ExceptionMethodMapping mapping=getExceptionMethodMapping(handlerMethod);
    Method method=mapping.getMethod(ex);
    if (method != null) {
      Object handler=handlerMethod.getBean();
      ServletInvocableHandlerMethod exceptionHandler=new ServletInvocableHandlerMethod(handler,method);
      exceptionHandler.setHandlerMethodArgumentResolvers(argumentResolvers);
      exceptionHandler.setHandlerMethodReturnValueHandlers(returnValueHandlers);
      ServletWebRequest webRequest=new ServletWebRequest(request,response);
      try {
        if (logger.isDebugEnabled()) {
          logger.debug("Invoking exception-handling method: " + exceptionHandler);
        }
        ModelAndViewContainer mavContainer=new ModelAndViewContainer();
        ResponseContext responseContext=new ResponseContext(webRequest,mavContainer);
        exceptionHandler.invokeAndHandle(webRequest,mavContainer,ex,responseContext);
        if (!mavContainer.isResolveView()) {
          return new ModelAndView();
        }
 else {
          ModelAndView mav=new ModelAndView().addAllObjects(mavContainer.getModel());
          mav.setViewName(mavContainer.getViewName());
          if (!mavContainer.isViewReference()) {
            mav.setView((View)mavContainer.getView());
          }
          return mav;
        }
      }
 catch (      Exception invocationEx) {
        logger.error("Invoking exception-handling method resulted in exception : " + exceptionHandler,invocationEx);
      }
    }
  }
  return null;
}
