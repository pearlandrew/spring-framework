{
  if (hasTypeLevelMapping() && (!ObjectUtils.isEmpty(getTypeLevelMapping().value()))) {
    String[] typeLevelPatterns=getTypeLevelMapping().value();
    for (    String typeLevelPattern : typeLevelPatterns) {
      if (!typeLevelPattern.startsWith("/")) {
        typeLevelPattern="/" + typeLevelPattern;
      }
      String combinedPattern=pathMatcher.combine(typeLevelPattern,methodLevelPattern);
      if (isPathMatchInternal(combinedPattern,lookupPath)) {
        return combinedPattern;
      }
    }
    return null;
  }
  String bestMatchingPattern=(String)request.getAttribute(HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE);
  if (StringUtils.hasText(bestMatchingPattern)) {
    String combinedPattern=pathMatcher.combine(bestMatchingPattern,methodLevelPattern);
    if (!combinedPattern.equals(bestMatchingPattern) && (isPathMatchInternal(combinedPattern,lookupPath))) {
      return combinedPattern;
    }
  }
  if (isPathMatchInternal(methodLevelPattern,lookupPath)) {
    return methodLevelPattern;
  }
  return null;
}
