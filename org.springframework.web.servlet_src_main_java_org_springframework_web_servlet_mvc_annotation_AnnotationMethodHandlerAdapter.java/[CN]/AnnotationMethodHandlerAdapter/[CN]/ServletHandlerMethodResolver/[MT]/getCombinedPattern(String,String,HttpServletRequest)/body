{
  if (useTypeLevelMapping(request)) {
    String[] typeLevelPatterns=getTypeLevelMapping().value();
    for (    String typeLevelPattern : typeLevelPatterns) {
      if (!typeLevelPattern.startsWith("/")) {
        typeLevelPattern="/" + typeLevelPattern;
      }
      String combinedPattern=pathMatcher.combine(typeLevelPattern,methodLevelPattern);
      String matchingPattern=getMatchingPattern(combinedPattern,lookupPath);
      if (matchingPattern != null) {
        return matchingPattern;
      }
    }
    return null;
  }
  String bestMatchingPattern=(String)request.getAttribute(HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE);
  if (StringUtils.hasText(bestMatchingPattern) && bestMatchingPattern.endsWith("*")) {
    String combinedPattern=pathMatcher.combine(bestMatchingPattern,methodLevelPattern);
    String matchingPattern=getMatchingPattern(combinedPattern,lookupPath);
    if ((matchingPattern != null) && !matchingPattern.equals(bestMatchingPattern)) {
      return matchingPattern;
    }
  }
  return getMatchingPattern(methodLevelPattern,lookupPath);
}
