{
  if (isEmpty()) {
    return this;
  }
  Set<ConsumeMediaTypeExpression> result=new LinkedHashSet<ConsumeMediaTypeExpression>(expressions);
  for (Iterator<ConsumeMediaTypeExpression> iterator=result.iterator(); iterator.hasNext(); ) {
    ConsumeMediaTypeExpression expression=iterator.next();
    if (!expression.match(request)) {
      iterator.remove();
    }
  }
  return (result.isEmpty()) ? null : new ConsumesRequestCondition(result);
}
