{
  final DateFormat df=DateFormat.getDateInstance(DateFormat.MEDIUM,Locale.GERMAN);
  TestController mc=new TestController(){
    @Override protected void initBinder(    HttpServletRequest request,    ServletRequestDataBinder binder){
      binder.registerCustomEditor(Date.class,new CustomDateEditor(df,false));
    }
  }
;
  MockHttpServletRequest request=new MockHttpServletRequest("GET","/welcome.html");
  request.addParameter("date","1.5.2003");
  MockHttpServletResponse response=new MockHttpServletResponse();
  ModelAndView mv=mc.handleRequest(request,response);
  TestBean tb=(TestBean)mv.getModel().get("command");
  Errors errors=(Errors)mv.getModel().get("errors");
  assertTrue("No field error",!errors.hasFieldErrors("date"));
  assertTrue("Correct date property",df.parse("1.5.2003").equals(tb.getDate()));
  assertTrue("Correct date value","01.05.2003".equals(errors.getFieldValue("date")));
  request=new MockHttpServletRequest("GET","/welcome.html");
  request.addParameter("date","");
  response=new MockHttpServletResponse();
  mv=mc.handleRequest(request,response);
  tb=(TestBean)mv.getModel().get("command");
  errors=(Errors)mv.getModel().get("errors");
  assertTrue("Has field error",errors.hasFieldErrors("date"));
  assertTrue("Correct date property",tb.getDate() != null);
  assertTrue("Correct date value",errors.getFieldValue("date") != null);
}
