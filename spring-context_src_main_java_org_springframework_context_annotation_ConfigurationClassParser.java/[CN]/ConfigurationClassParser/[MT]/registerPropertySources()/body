{
  if (!(this.environment instanceof ConfigurableEnvironment)) {
    return;
  }
  MutablePropertySources envPropertySources=((ConfigurableEnvironment)this.environment).getPropertySources();
  String lastName=null;
  for (  Map.Entry<Object,List<PropertySourceDescriptor>> entry : this.propertySources.entrySet()) {
    Object key=entry.getKey();
    String name=(key instanceof String ? (String)key : null);
    List<PropertySourceDescriptor> descriptors=entry.getValue();
    List<ResourcePropertySource> resources=new ArrayList<ResourcePropertySource>(descriptors.size());
    for (    PropertySourceDescriptor descriptor : descriptors) {
      try {
        String resolvedLocation=this.environment.resolveRequiredPlaceholders(descriptor.location);
        Resource resource=this.resourceLoader.getResource(resolvedLocation);
        ResourcePropertySource ps=new ResourcePropertySource(resource);
        resources.add(ps);
        if (name == null) {
          name=ps.getName();
        }
      }
 catch (      IllegalArgumentException ex) {
        if (!descriptor.ignoreResourceNotFound) {
          throw ex;
        }
      }
catch (      FileNotFoundException ex) {
        if (!descriptor.ignoreResourceNotFound) {
          throw ex;
        }
      }
    }
    PropertySource<?> ps=collatePropertySources(name,resources);
    if (lastName != null) {
      envPropertySources.addBefore(lastName,ps);
    }
 else {
      envPropertySources.addLast(ps);
    }
    lastName=name;
  }
}
