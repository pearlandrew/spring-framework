{
  String name=propertySource.getString("name");
  String[] locations=propertySource.getStringArray("value");
  boolean ignoreResourceNotFound=propertySource.getBoolean("ignoreResourceNotFound");
  int locationCount=locations.length;
  if (locationCount == 0) {
    throw new IllegalArgumentException("At least one @PropertySource(value) location is required");
  }
  for (  String location : locations) {
    Resource resource=this.resourceLoader.getResource(this.environment.resolveRequiredPlaceholders(location));
    try {
      if (!StringUtils.hasText(name) || this.propertySources.containsKey(name)) {
        ResourcePropertySource ps=new ResourcePropertySource(resource);
        this.propertySources.add((StringUtils.hasText(name) ? name : ps.getName()),ps);
      }
 else {
        this.propertySources.add(name,new ResourcePropertySource(name,resource));
      }
    }
 catch (    FileNotFoundException ex) {
      if (!ignoreResourceNotFound) {
        throw ex;
      }
    }
  }
}
