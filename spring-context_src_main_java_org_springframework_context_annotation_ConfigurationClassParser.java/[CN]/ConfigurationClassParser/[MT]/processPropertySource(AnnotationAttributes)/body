{
  String name=propertySource.getString("name");
  String[] locations=propertySource.getStringArray("value");
  int locationCount=locations.length;
  if (locationCount == 0) {
    throw new IllegalArgumentException("At least one @PropertySource(value) location is required");
  }
  for (int i=0; i < locationCount; i++) {
    locations[i]=this.environment.resolveRequiredPlaceholders(locations[i]);
  }
  ClassLoader classLoader=this.resourceLoader.getClassLoader();
  if (!StringUtils.hasText(name)) {
    for (    String location : locations) {
      this.propertySources.push(new ResourcePropertySource(location,classLoader));
    }
  }
 else {
    if (locationCount == 1) {
      this.propertySources.push(new ResourcePropertySource(name,locations[0],classLoader));
    }
 else {
      CompositePropertySource ps=new CompositePropertySource(name);
      for (int i=locations.length - 1; i >= 0; i--) {
        ps.addPropertySource(new ResourcePropertySource(locations[i],classLoader));
      }
      this.propertySources.push(ps);
    }
  }
}
