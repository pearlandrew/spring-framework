{
  MockControl utControl=MockControl.createControl(UserTransaction.class);
  UserTransaction ut=(UserTransaction)utControl.getMock();
  MockControl tmControl=MockControl.createControl(TransactionManager.class);
  TransactionManager tm=(TransactionManager)tmControl.getMock();
  ut.getStatus();
  utControl.setReturnValue(Status.STATUS_ACTIVE,1);
  tm.suspend();
  tmControl.setThrowable(new SystemException());
  utControl.replay();
  tmControl.replay();
  JtaTransactionManager ptm=newJtaTransactionManager(ut,tm);
  TransactionTemplate tt=new TransactionTemplate(ptm);
  tt.setPropagationBehavior(TransactionDefinition.PROPAGATION_REQUIRES_NEW);
  assertFalse(TransactionSynchronizationManager.isSynchronizationActive());
  try {
    tt.execute(new TransactionCallbackWithoutResult(){
      @Override protected void doInTransactionWithoutResult(      TransactionStatus status){
        assertTrue(TransactionSynchronizationManager.isSynchronizationActive());
      }
    }
);
    fail("Should have thrown TransactionSystemException");
  }
 catch (  TransactionSystemException ex) {
  }
  assertFalse(TransactionSynchronizationManager.isSynchronizationActive());
  utControl.verify();
  tmControl.verify();
}
