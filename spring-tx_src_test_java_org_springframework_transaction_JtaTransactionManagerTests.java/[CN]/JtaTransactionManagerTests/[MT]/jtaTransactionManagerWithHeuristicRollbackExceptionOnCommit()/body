{
  UserTransaction ut=mock(UserTransaction.class);
  given(ut.getStatus()).willReturn(Status.STATUS_NO_TRANSACTION,Status.STATUS_ACTIVE,Status.STATUS_ACTIVE);
  willThrow(new HeuristicRollbackException("heuristic exception")).given(ut).commit();
  try {
    JtaTransactionManager ptm=newJtaTransactionManager(ut);
    TransactionTemplate tt=new TransactionTemplate(ptm);
    tt.execute(new TransactionCallbackWithoutResult(){
      @Override protected void doInTransactionWithoutResult(      TransactionStatus status){
        TransactionSynchronizationManager.registerSynchronization(new TransactionSynchronizationAdapter(){
          @Override public void afterCompletion(          int status){
            assertTrue("Correct completion status",status == TransactionSynchronization.STATUS_UNKNOWN);
          }
        }
);
      }
    }
);
    fail("Should have thrown HeuristicCompletionException");
  }
 catch (  HeuristicCompletionException ex) {
    assertTrue(ex.getOutcomeState() == HeuristicCompletionException.STATE_ROLLED_BACK);
  }
  verify(ut).begin();
}
