{
  List<Class<? extends Annotation>> transactionalCandidateList=asList(Transactional.class);
  assertNull(findAnnotationDeclaringClassForTypes(transactionalCandidateList,NonAnnotatedInterface.class));
  assertNull(findAnnotationDeclaringClassForTypes(transactionalCandidateList,NonAnnotatedClass.class));
  assertEquals(InheritedAnnotationInterface.class,findAnnotationDeclaringClassForTypes(transactionalCandidateList,InheritedAnnotationInterface.class));
  assertNull(findAnnotationDeclaringClassForTypes(transactionalCandidateList,SubInheritedAnnotationInterface.class));
  assertEquals(InheritedAnnotationClass.class,findAnnotationDeclaringClassForTypes(transactionalCandidateList,InheritedAnnotationClass.class));
  assertEquals(InheritedAnnotationClass.class,findAnnotationDeclaringClassForTypes(transactionalCandidateList,SubInheritedAnnotationClass.class));
  List<Class<? extends Annotation>> orderCandidateList=asList(Order.class);
  assertEquals(NonInheritedAnnotationInterface.class,findAnnotationDeclaringClassForTypes(orderCandidateList,NonInheritedAnnotationInterface.class));
  assertNull(findAnnotationDeclaringClassForTypes(orderCandidateList,SubNonInheritedAnnotationInterface.class));
  assertEquals(NonInheritedAnnotationClass.class,findAnnotationDeclaringClassForTypes(orderCandidateList,NonInheritedAnnotationClass.class));
  assertEquals(NonInheritedAnnotationClass.class,findAnnotationDeclaringClassForTypes(orderCandidateList,SubNonInheritedAnnotationClass.class));
}
