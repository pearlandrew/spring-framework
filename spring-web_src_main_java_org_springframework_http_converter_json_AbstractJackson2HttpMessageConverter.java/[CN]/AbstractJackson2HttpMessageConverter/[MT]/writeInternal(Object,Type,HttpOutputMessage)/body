{
  JsonEncoding encoding=getJsonEncoding(outputMessage.getHeaders().getContentType());
  JsonGenerator generator=this.objectMapper.getFactory().createGenerator(outputMessage.getBody(),encoding);
  try {
    writePrefix(generator,object);
    Class<?> serializationView=null;
    FilterProvider filters=null;
    Object value=object;
    JavaType javaType=null;
    if (type != null) {
      javaType=getJavaType(type,null);
    }
    if (object instanceof MappingJacksonValue) {
      MappingJacksonValue container=(MappingJacksonValue)object;
      value=container.getValue();
      serializationView=container.getSerializationView();
      filters=container.getFilters();
    }
    ObjectWriter objectWriter;
    if (serializationView != null) {
      objectWriter=this.objectMapper.writerWithView(serializationView);
    }
 else     if (filters != null) {
      objectWriter=this.objectMapper.writer(filters);
    }
 else {
      objectWriter=this.objectMapper.writer();
    }
    if (javaType != null && value != null && TypeUtils.isAssignable(type,value.getClass())) {
      objectWriter=objectWriter.withType(javaType);
    }
    objectWriter.writeValue(generator,value);
    writeSuffix(generator,object);
    generator.flush();
  }
 catch (  JsonProcessingException ex) {
    throw new HttpMessageNotWritableException("Could not write content: " + ex.getMessage(),ex);
  }
}
