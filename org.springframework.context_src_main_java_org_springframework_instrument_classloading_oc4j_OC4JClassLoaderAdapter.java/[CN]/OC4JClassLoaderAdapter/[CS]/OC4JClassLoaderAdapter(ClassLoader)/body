{
  try {
    Class<?> utilClass=classLoader.loadClass(CL_UTILS);
    this.processorClass=classLoader.loadClass(PREPROCESS_UTILS);
    this.addTransformer=utilClass.getMethod("addPreprocessor",new Class[]{ClassLoader.class,this.processorClass});
    this.copy=utilClass.getMethod("copy",new Class[]{ClassLoader.class});
  }
 catch (  Exception ex) {
    throw new IllegalStateException("Could not initialize OC4J LoadTimeWeaver because OC4J API classes are not available",ex);
  }
  this.classLoader=classLoader;
}
