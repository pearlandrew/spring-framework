{
  Map<String,Lifecycle> beans=new LinkedHashMap<String,Lifecycle>();
  String[] beanNames=this.beanFactory.getBeanNamesForType(Lifecycle.class,false,false);
  for (  String beanName : beanNames) {
    String beanNameToRegister=BeanFactoryUtils.transformedBeanName(beanName);
    String beanNameToCheck=(this.beanFactory.isFactoryBean(beanNameToRegister) ? BeanFactory.FACTORY_BEAN_PREFIX + beanName : beanName);
    if (this.beanFactory.containsSingleton(beanNameToRegister) || SmartLifecycle.class.isAssignableFrom(this.beanFactory.getType(beanNameToCheck))) {
      Lifecycle bean=this.beanFactory.getBean(beanNameToCheck,Lifecycle.class);
      if (bean != this) {
        beans.put(beanNameToRegister,bean);
      }
    }
  }
  return beans;
}
