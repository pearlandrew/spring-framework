{
  MockControl interceptorControl=MockControl.createControl(org.hibernate.Interceptor.class);
  Interceptor entityInterceptor=(Interceptor)interceptorControl.getMock();
  MockControl conControl=MockControl.createControl(Connection.class);
  Connection con=(Connection)conControl.getMock();
  MockControl session2Control=MockControl.createControl(Session.class);
  Session session2=(Session)session2Control.getMock();
  session2.connection();
  session2Control.setReturnValue(con,1);
  sf.openSession(con,entityInterceptor);
  sfControl.setReturnValue(session,1);
  session.flush();
  sessionControl.setVoidCallable(1);
  session.close();
  sessionControl.setReturnValue(null,1);
  sfControl.replay();
  sessionControl.replay();
  session2Control.replay();
  HibernateTemplate ht=new HibernateTemplate(sf);
  ht.setAlwaysUseNewSession(true);
  ht.setEntityInterceptor(entityInterceptor);
  TransactionSynchronizationManager.bindResource(sf,new SessionHolder(session2));
  try {
    final List l=new ArrayList();
    l.add("test");
    List result=ht.executeFind(new HibernateCallback(){
      @Override public Object doInHibernate(      org.hibernate.Session session) throws HibernateException {
        return l;
      }
    }
);
    assertTrue("Correct result list",result == l);
  }
  finally {
    TransactionSynchronizationManager.unbindResource(sf);
  }
}
