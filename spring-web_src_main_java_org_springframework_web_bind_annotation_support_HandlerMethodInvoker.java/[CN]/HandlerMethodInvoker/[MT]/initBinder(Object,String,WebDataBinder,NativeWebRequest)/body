{
  if (this.bindingInitializer != null) {
    this.bindingInitializer.initBinder(binder,webRequest);
  }
  if (handler != null) {
    Set<Method> initBinderMethods=this.methodResolver.getInitBinderMethods();
    if (!initBinderMethods.isEmpty()) {
      boolean debug=logger.isDebugEnabled();
      for (      Method initBinderMethod : initBinderMethods) {
        Method methodToInvoke=BridgeMethodResolver.findBridgedMethod(initBinderMethod);
        String[] targetNames=AnnotationUtils.findAnnotation(initBinderMethod,InitBinder.class).value();
        if (targetNames.length == 0 || Arrays.asList(targetNames).contains(attrName)) {
          Object[] initBinderArgs=resolveInitBinderArguments(handler,methodToInvoke,binder,webRequest);
          if (debug) {
            logger.debug("Invoking init-binder method: " + methodToInvoke);
          }
          ReflectionUtils.makeAccessible(methodToInvoke);
          Object returnValue=methodToInvoke.invoke(handler,initBinderArgs);
          if (returnValue != null) {
            throw new IllegalStateException("InitBinder methods must not have a return value: " + methodToInvoke);
          }
        }
      }
    }
  }
}
