{
  final Throwable t=new Throwable();
  @SuppressWarnings("serial") MyThrowsHandler th=new MyThrowsHandler(){
    public void afterThrowing(    RemoteException ex) throws Throwable {
      super.afterThrowing(ex);
      throw t;
    }
  }
;
  ThrowsAdviceInterceptor ti=new ThrowsAdviceInterceptor(th);
  TransactionRolledbackException ex=new TransactionRolledbackException();
  MethodInvocation mi=createMock(MethodInvocation.class);
  expect(mi.proceed()).andThrow(ex);
  replay(mi);
  try {
    ti.invoke(mi);
    fail();
  }
 catch (  Throwable caught) {
    assertEquals(t,caught);
  }
  assertEquals(1,th.getCalls());
  assertEquals(1,th.getCalls("remoteException"));
  verify(mi);
}
