{
  TransactionManager jtaTm=getJtaTransactionManager(sessionFactory,sessionHolder.getAnySession());
  if (jtaTm != null) {
    try {
      Transaction jtaTx=jtaTm.getTransaction();
      if (jtaTx != null) {
        int jtaStatus=jtaTx.getStatus();
        if (jtaStatus == Status.STATUS_ACTIVE || jtaStatus == Status.STATUS_MARKED_ROLLBACK) {
          Session session=sessionHolder.getValidatedSession(jtaTx);
          if (session == null && !sessionHolder.isSynchronizedWithTransaction()) {
            session=sessionHolder.getValidatedSession();
            if (session != null) {
              logger.debug("Registering JTA transaction synchronization for existing Hibernate Session");
              sessionHolder.addSession(jtaTx,session);
              jtaTx.registerSynchronization(new SpringJtaSynchronizationAdapter(new SpringSessionSynchronization(sessionHolder,sessionFactory,jdbcExceptionTranslator,false),jtaTm));
              sessionHolder.setSynchronizedWithTransaction(true);
              FlushMode flushMode=session.getFlushMode();
              if (flushMode.lessThan(FlushMode.COMMIT)) {
                session.setFlushMode(FlushMode.AUTO);
                sessionHolder.setPreviousFlushMode(flushMode);
              }
            }
          }
          return session;
        }
      }
      return sessionHolder.getValidatedSession();
    }
 catch (    Throwable ex) {
      throw new DataAccessResourceFailureException("Could not check JTA transaction",ex);
    }
  }
 else {
    return sessionHolder.getValidatedSession();
  }
}
