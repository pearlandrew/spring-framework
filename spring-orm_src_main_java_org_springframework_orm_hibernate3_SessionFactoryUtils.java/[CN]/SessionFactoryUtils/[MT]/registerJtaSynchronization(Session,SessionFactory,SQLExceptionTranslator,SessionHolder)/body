{
  TransactionManager jtaTm=getJtaTransactionManager(sessionFactory,session);
  if (jtaTm != null) {
    try {
      Transaction jtaTx=jtaTm.getTransaction();
      if (jtaTx != null) {
        int jtaStatus=jtaTx.getStatus();
        if (jtaStatus == Status.STATUS_ACTIVE || jtaStatus == Status.STATUS_MARKED_ROLLBACK) {
          logger.debug("Registering JTA transaction synchronization for new Hibernate Session");
          SessionHolder holderToUse=sessionHolder;
          if (holderToUse == null) {
            holderToUse=new SessionHolder(jtaTx,session);
          }
 else {
            holderToUse.addSession(jtaTx,session);
          }
          jtaTx.registerSynchronization(new SpringJtaSynchronizationAdapter(new SpringSessionSynchronization(holderToUse,sessionFactory,jdbcExceptionTranslator,true),jtaTm));
          holderToUse.setSynchronizedWithTransaction(true);
          if (holderToUse != sessionHolder) {
            TransactionSynchronizationManager.bindResource(sessionFactory,holderToUse);
          }
        }
      }
    }
 catch (    Throwable ex) {
      throw new DataAccessResourceFailureException("Could not register synchronization with JTA TransactionManager",ex);
    }
  }
}
