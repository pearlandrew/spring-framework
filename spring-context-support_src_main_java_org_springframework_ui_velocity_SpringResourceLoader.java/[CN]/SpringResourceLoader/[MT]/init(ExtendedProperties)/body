{
  this.resourceLoader=(org.springframework.core.io.ResourceLoader)this.rsvc.getApplicationAttribute(SPRING_RESOURCE_LOADER);
  String resourceLoaderPath=(String)this.rsvc.getApplicationAttribute(SPRING_RESOURCE_LOADER_PATH);
  if (this.resourceLoader == null) {
    throw new IllegalArgumentException("'resourceLoader' application attribute must be present for SpringResourceLoader");
  }
  if (resourceLoaderPath == null) {
    throw new IllegalArgumentException("'resourceLoaderPath' application attribute must be present for SpringResourceLoader");
  }
  this.resourceLoaderPaths=StringUtils.commaDelimitedListToStringArray(resourceLoaderPath);
  for (int i=0; i < this.resourceLoaderPaths.length; i++) {
    String path=this.resourceLoaderPaths[i];
    if (!path.endsWith("/")) {
      this.resourceLoaderPaths[i]=path + "/";
    }
  }
  if (logger.isInfoEnabled()) {
    logger.info("SpringResourceLoader for Velocity: using resource loader [" + this.resourceLoader + "] and resource loader paths "+ Arrays.asList(this.resourceLoaderPaths));
  }
}
