{
  return new XStream(this.reflectionProvider,this.streamDriver,this.beanClassLoader,this.mapper,this.converterLookup,this.converterRegistry){
    @Override protected MapperWrapper wrapMapper(    MapperWrapper next){
      MapperWrapper mapperToWrap=next;
      if (mapperWrappers != null) {
        for (        Class<?> mapperWrapper : mapperWrappers) {
          Assert.isAssignable(MapperWrapper.class,mapperWrapper);
          Constructor<?> ctor;
          try {
            ctor=mapperWrapper.getConstructor(Mapper.class);
          }
 catch (          NoSuchMethodException ex) {
            try {
              ctor=mapperWrapper.getConstructor(MapperWrapper.class);
            }
 catch (            NoSuchMethodException ex2) {
              throw new IllegalStateException("No appropriate MapperWrapper constructor found: " + mapperWrapper);
            }
          }
          try {
            mapperToWrap=(MapperWrapper)ctor.newInstance(mapperToWrap);
          }
 catch (          Exception ex) {
            throw new IllegalStateException("Failed to construct MapperWrapper: " + mapperWrapper);
          }
        }
      }
      return mapperToWrap;
    }
  }
;
}
