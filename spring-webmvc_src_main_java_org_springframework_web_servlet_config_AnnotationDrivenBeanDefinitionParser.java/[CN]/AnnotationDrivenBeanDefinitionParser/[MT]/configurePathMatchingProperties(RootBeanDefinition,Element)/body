{
  Element pathMatchingElement=DomUtils.getChildElementByTagName(element,"path-matching");
  if (pathMatchingElement != null) {
    if (pathMatchingElement.hasAttribute("suffix-pattern")) {
      Boolean useSuffixPatternMatch=Boolean.valueOf(pathMatchingElement.getAttribute("suffix-pattern"));
      handlerMappingDef.getPropertyValues().add("useSuffixPatternMatch",useSuffixPatternMatch);
    }
    if (pathMatchingElement.hasAttribute("trailing-slash")) {
      Boolean useTrailingSlashMatch=Boolean.valueOf(pathMatchingElement.getAttribute("trailing-slash"));
      handlerMappingDef.getPropertyValues().add("useTrailingSlashMatch",useTrailingSlashMatch);
    }
    if (pathMatchingElement.hasAttribute("registered-suffixes-only")) {
      Boolean useRegisteredSuffixPatternMatch=Boolean.valueOf(pathMatchingElement.getAttribute("registered-suffixes-only"));
      handlerMappingDef.getPropertyValues().add("useRegisteredSuffixPatternMatch",useRegisteredSuffixPatternMatch);
    }
    if (pathMatchingElement.hasAttribute("path-helper")) {
      RuntimeBeanReference pathHelperRef=new RuntimeBeanReference(pathMatchingElement.getAttribute("path-helper"));
      handlerMappingDef.getPropertyValues().add("urlPathHelper",pathHelperRef);
    }
    if (pathMatchingElement.hasAttribute("path-matcher")) {
      RuntimeBeanReference pathMatcherRef=new RuntimeBeanReference(pathMatchingElement.getAttribute("path-matcher"));
      handlerMappingDef.getPropertyValues().add("pathMatcher",pathMatcherRef);
    }
  }
}
