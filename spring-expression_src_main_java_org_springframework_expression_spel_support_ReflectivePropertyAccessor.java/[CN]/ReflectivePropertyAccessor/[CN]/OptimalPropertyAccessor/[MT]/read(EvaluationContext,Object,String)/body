{
  if (this.member instanceof Method) {
    Method method=(Method)this.member;
    try {
      if (this.needsToBeMadeAccessible && !method.isAccessible()) {
        method.setAccessible(true);
      }
      Object value=method.invoke(target);
      return new TypedValue(value,this.typeDescriptor.narrow(value));
    }
 catch (    Exception ex) {
      throw new AccessException("Unable to access property '" + name + "' through getter method",ex);
    }
  }
 else {
    Field field=(Field)this.member;
    try {
      if (this.needsToBeMadeAccessible && !field.isAccessible()) {
        field.setAccessible(true);
      }
      Object value=field.get(target);
      return new TypedValue(value,this.typeDescriptor.narrow(value));
    }
 catch (    Exception ex) {
      throw new AccessException("Unable to access field '" + name + "'",ex);
    }
  }
}
