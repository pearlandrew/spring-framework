{
  assertEquals("",pathMatcher.combine(null,null));
  assertEquals("/hotels",pathMatcher.combine("/hotels",null));
  assertEquals("/hotels",pathMatcher.combine(null,"/hotels"));
  assertEquals("/hotels/booking",pathMatcher.combine("/hotels/*","booking"));
  assertEquals("/hotels/booking",pathMatcher.combine("/hotels/*","/booking"));
  assertEquals("/hotels/**/booking",pathMatcher.combine("/hotels/**","booking"));
  assertEquals("/hotels/**/booking",pathMatcher.combine("/hotels/**","/booking"));
  assertEquals("/hotels/booking",pathMatcher.combine("/hotels","/booking"));
  assertEquals("/hotels/booking",pathMatcher.combine("/hotels","booking"));
  assertEquals("/hotels/{hotel}",pathMatcher.combine("/hotels/*","{hotel}"));
  assertEquals("/hotels/**/{hotel}",pathMatcher.combine("/hotels/**","{hotel}"));
  assertEquals("/hotels/{hotel}",pathMatcher.combine("/hotels","{hotel}"));
  assertEquals("/hotels/*/booking/{booking}",pathMatcher.combine("/hotels/*/booking","{booking}"));
  assertEquals("/hotel.html",pathMatcher.combine("/*.html","/hotel.html"));
  try {
    assertEquals("/hotel.html",pathMatcher.combine("/*.html","/hotel"));
    fail("IllegalArgumentException expected");
  }
 catch (  IllegalArgumentException ex) {
  }
}
