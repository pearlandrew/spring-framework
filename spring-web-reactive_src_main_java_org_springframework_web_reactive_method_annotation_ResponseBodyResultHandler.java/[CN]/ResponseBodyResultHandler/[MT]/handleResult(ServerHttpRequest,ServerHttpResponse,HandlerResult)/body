{
  Object value=result.getValue();
  if (value == null) {
    return Publishers.empty();
  }
  Publisher<?> publisher;
  ResolvableType elementType;
  ResolvableType returnType=result.getValueType();
  if (this.conversionService.canConvert(returnType.getRawClass(),Publisher.class)) {
    publisher=this.conversionService.convert(value,Publisher.class);
    elementType=returnType.getGeneric(0);
  }
 else {
    publisher=Publishers.just(value);
    elementType=returnType;
  }
  List<MediaType> requestedMediaTypes=getAcceptableMediaTypes(request);
  List<MediaType> producibleMediaTypes=getProducibleMediaTypes(elementType);
  if (producibleMediaTypes.isEmpty()) {
    producibleMediaTypes.add(MediaType.ALL);
  }
  Set<MediaType> compatibleMediaTypes=new LinkedHashSet<>();
  for (  MediaType requestedType : requestedMediaTypes) {
    for (    MediaType producibleType : producibleMediaTypes) {
      if (requestedType.isCompatibleWith(producibleType)) {
        compatibleMediaTypes.add(getMostSpecificMediaType(requestedType,producibleType));
      }
    }
  }
  if (compatibleMediaTypes.isEmpty()) {
    return Publishers.error(new HttpMediaTypeNotAcceptableException(producibleMediaTypes));
  }
  List<MediaType> mediaTypes=new ArrayList<>(compatibleMediaTypes);
  MediaType.sortBySpecificityAndQuality(mediaTypes);
  MediaType selectedMediaType=null;
  for (  MediaType mediaType : mediaTypes) {
    if (mediaType.isConcrete()) {
      selectedMediaType=mediaType;
      break;
    }
 else     if (mediaType.equals(MediaType.ALL) || mediaType.equals(MEDIA_TYPE_APPLICATION)) {
      selectedMediaType=MediaType.APPLICATION_OCTET_STREAM;
      break;
    }
  }
  if (selectedMediaType != null) {
    Encoder<?> encoder=resolveEncoder(elementType,selectedMediaType);
    if (encoder != null) {
      response.getHeaders().setContentType(selectedMediaType);
      return response.setBody(encoder.encode((Publisher)publisher,elementType,selectedMediaType));
    }
  }
  return Publishers.error(new HttpMediaTypeNotAcceptableException(this.allMediaTypes));
}
