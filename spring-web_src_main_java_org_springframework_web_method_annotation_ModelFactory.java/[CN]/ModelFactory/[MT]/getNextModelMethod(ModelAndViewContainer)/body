{
  for (  ModelMethod modelMethod : this.modelMethods) {
    if (modelMethod.checkDependencies(mavContainer)) {
      if (logger.isTraceEnabled()) {
        logger.trace("Selected @ModelAttribute method " + modelMethod);
      }
      this.modelMethods.remove(modelMethod);
      return modelMethod;
    }
  }
  ModelMethod modelMethod=this.modelMethods.get(0);
  if (logger.isTraceEnabled()) {
    logger.trace("Selected @ModelAttribute method (not present: " + modelMethod.getUnresolvedDependencies(mavContainer) + ") "+ modelMethod);
  }
  this.modelMethods.remove(modelMethod);
  return modelMethod;
}
