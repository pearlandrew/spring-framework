{
  MockControl mockSentTextMessage=MockControl.createControl(TextMessage.class);
  final TextMessage sentTextMessage=(TextMessage)mockSentTextMessage.getMock();
  mockSentTextMessage.replay();
  MockControl mockSession=MockControl.createControl(QueueSession.class);
  final QueueSession session=(QueueSession)mockSession.getMock();
  mockSession.replay();
  MockControl mockDelegate=MockControl.createControl(ResponsiveMessageDelegate.class);
  ResponsiveMessageDelegate delegate=(ResponsiveMessageDelegate)mockDelegate.getMock();
  delegate.handleMessage(sentTextMessage);
  mockDelegate.setThrowable(new IllegalArgumentException("Dow!"));
  mockDelegate.replay();
  final MessageListenerAdapter102 adapter=new MessageListenerAdapter102(delegate){
    protected Object extractMessage(    Message message){
      return message;
    }
  }
;
  new AssertThrows(ListenerExecutionFailedException.class){
    public void test() throws Exception {
      adapter.onMessage(sentTextMessage,session);
    }
  }
.runTest();
  mockDelegate.verify();
  mockSentTextMessage.verify();
  mockSession.verify();
}
