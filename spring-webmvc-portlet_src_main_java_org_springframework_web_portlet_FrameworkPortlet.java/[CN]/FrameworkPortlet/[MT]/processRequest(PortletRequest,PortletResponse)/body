{
  long startTime=System.currentTimeMillis();
  Throwable failureCause=null;
  LocaleContext previousLocaleContext=LocaleContextHolder.getLocaleContext();
  LocaleContextHolder.setLocaleContext(buildLocaleContext(request),this.threadContextInheritable);
  RequestAttributes previousRequestAttributes=RequestContextHolder.getRequestAttributes();
  PortletRequestAttributes requestAttributes=null;
  if (previousRequestAttributes == null || previousRequestAttributes.getClass().equals(PortletRequestAttributes.class) || previousRequestAttributes.getClass().equals(ServletRequestAttributes.class)) {
    requestAttributes=new PortletRequestAttributes(request,response);
    RequestContextHolder.setRequestAttributes(requestAttributes,this.threadContextInheritable);
  }
  if (logger.isTraceEnabled()) {
    logger.trace("Bound request context to thread: " + request);
  }
  try {
    String phase=(String)request.getAttribute(PortletRequest.LIFECYCLE_PHASE);
    if (PortletRequest.ACTION_PHASE.equals(phase)) {
      doActionService((ActionRequest)request,(ActionResponse)response);
    }
 else     if (PortletRequest.RENDER_PHASE.equals(phase)) {
      doRenderService((RenderRequest)request,(RenderResponse)response);
    }
 else     if (PortletRequest.RESOURCE_PHASE.equals(phase)) {
      doResourceService((ResourceRequest)request,(ResourceResponse)response);
    }
 else     if (PortletRequest.EVENT_PHASE.equals(phase)) {
      doEventService((EventRequest)request,(EventResponse)response);
    }
 else {
      throw new IllegalStateException("Invalid portlet request phase: " + phase);
    }
  }
 catch (  PortletException ex) {
    failureCause=ex;
    throw ex;
  }
catch (  IOException ex) {
    failureCause=ex;
    throw ex;
  }
catch (  Throwable ex) {
    failureCause=ex;
    throw new PortletException("Request processing failed",ex);
  }
 finally {
    LocaleContextHolder.setLocaleContext(previousLocaleContext,this.threadContextInheritable);
    if (requestAttributes != null) {
      RequestContextHolder.setRequestAttributes(previousRequestAttributes,this.threadContextInheritable);
      requestAttributes.requestCompleted();
    }
    if (logger.isTraceEnabled()) {
      logger.trace("Cleared thread-bound resource request context: " + request);
    }
    if (failureCause != null) {
      logger.error("Could not complete request",failureCause);
    }
 else {
      logger.debug("Successfully completed request");
    }
    if (this.publishEvents) {
      long processingTime=System.currentTimeMillis() - startTime;
      this.portletApplicationContext.publishEvent(new PortletRequestHandledEvent(this,getPortletConfig().getPortletName(),request.getPortletMode().toString(),(request instanceof ActionRequest ? "action" : "render"),request.getRequestedSessionId(),getUsernameForRequest(request),processingTime,failureCause));
    }
  }
}
