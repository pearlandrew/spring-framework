{
  Class<?> contextClass=getContextClass();
  if (logger.isDebugEnabled()) {
    logger.debug("Portlet with name '" + getPortletName() + "' will try to create custom ApplicationContext context of class '"+ contextClass.getName()+ "'"+ ", using parent context ["+ parent+ "]");
  }
  if (!ConfigurablePortletApplicationContext.class.isAssignableFrom(contextClass)) {
    throw new ApplicationContextException("Fatal initialization error in portlet with name '" + getPortletName() + "': custom ApplicationContext class ["+ contextClass.getName()+ "] is not of type ConfigurablePortletApplicationContext");
  }
  ConfigurablePortletApplicationContext pac=(ConfigurablePortletApplicationContext)BeanUtils.instantiateClass(contextClass);
  String portletContextName=getPortletContext().getPortletContextName();
  if (portletContextName != null) {
    pac.setId(ConfigurablePortletApplicationContext.APPLICATION_CONTEXT_ID_PREFIX + portletContextName + "."+ getPortletName());
  }
 else {
    pac.setId(ConfigurablePortletApplicationContext.APPLICATION_CONTEXT_ID_PREFIX + getPortletName());
  }
  pac.setEnvironment(getEnvironment());
  pac.setParent(parent);
  pac.setPortletContext(getPortletContext());
  pac.setPortletConfig(getPortletConfig());
  pac.setNamespace(getNamespace());
  pac.setConfigLocation(getContextConfigLocation());
  pac.addApplicationListener(new SourceFilteringListener(pac,this));
  ConfigurableEnvironment env=pac.getEnvironment();
  if (env instanceof StandardPortletEnvironment) {
    ((StandardPortletEnvironment)env).initPropertySources(pac.getServletContext(),getPortletContext(),getPortletConfig());
  }
  postProcessPortletApplicationContext(pac);
  pac.refresh();
  return pac;
}
