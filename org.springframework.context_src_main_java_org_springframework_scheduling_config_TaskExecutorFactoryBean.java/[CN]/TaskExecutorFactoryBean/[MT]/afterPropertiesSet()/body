{
  Class<?> executorClass=(shouldUseBackport() ? getClass().getClassLoader().loadClass("org.springframework.scheduling.backportconcurrent.ThreadPoolTaskExecutor") : ThreadPoolTaskExecutor.class);
  BeanWrapper bw=new BeanWrapperImpl(executorClass);
  determinePoolSizeRange(bw);
  if (this.queueCapacity != null) {
    bw.setPropertyValue("queueCapacity",this.queueCapacity);
  }
  if (this.keepAliveSeconds != null) {
    bw.setPropertyValue("keepAliveSeconds",this.keepAliveSeconds);
  }
  if (this.rejectedExecutionHandler != null) {
    bw.setPropertyValue("rejectedExecutionHandler",this.rejectedExecutionHandler);
  }
  if (this.beanName != null) {
    bw.setPropertyValue("threadNamePrefix",this.beanName + "-");
  }
  this.target=(TaskExecutor)bw.getWrappedInstance();
  if (this.target instanceof InitializingBean) {
    ((InitializingBean)this.target).afterPropertiesSet();
  }
}
