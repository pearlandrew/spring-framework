{
  if (!StringUtils.hasText(this.poolSize)) {
    return null;
  }
  Integer[] range=null;
  try {
    int separatorIndex=poolSize.indexOf('-');
    if (separatorIndex != -1) {
      range=new Integer[2];
      range[0]=Integer.valueOf(poolSize.substring(0,separatorIndex));
      range[1]=Integer.valueOf(poolSize.substring(separatorIndex + 1,poolSize.length()));
      if (range[0] > range[1]) {
        throw new BeanCreationException(this.beanName,"Lower bound of pool-size range must not exceed the upper bound.");
      }
      if (this.queueCapacity == null) {
        if (range[0] == 0) {
          this.setValueIfNotNull("allowCoreThreadTimeOut",true);
          range[0]=range[1];
        }
 else {
          throw new BeanCreationException(this.beanName,"A non-zero lower bound for the size range requires a queue-capacity value.");
        }
      }
    }
 else {
      Integer value=Integer.valueOf(poolSize);
      range=new Integer[]{value,value};
    }
  }
 catch (  NumberFormatException ex) {
    throw new BeanCreationException(this.beanName,"Invalid pool-size value [" + poolSize + "]: only single maximum integer "+ "(e.g. \"5\") and minimum-maximum range (e.g. \"3-5\") are supported.",ex);
  }
  return range;
}
