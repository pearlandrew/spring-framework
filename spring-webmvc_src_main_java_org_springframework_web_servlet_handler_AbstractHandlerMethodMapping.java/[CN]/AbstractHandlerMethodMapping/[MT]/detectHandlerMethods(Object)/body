{
  Class<?> handlerType=(handler instanceof String ? getApplicationContext().getType((String)handler) : handler.getClass());
  final Class<?> userType=ClassUtils.getUserClass(handlerType);
  Map<Method,T> methods=MethodIntrospector.selectMethods(userType,new MethodIntrospector.MetadataLookup<T>(){
    @Override public T inspect(    Method method){
      return getMappingForMethod(method,userType);
    }
  }
);
  if (logger.isDebugEnabled()) {
    logger.debug(methods.size() + " request handler methods found on " + userType+ ": "+ methods);
  }
  for (  Map.Entry<Method,T> entry : methods.entrySet()) {
    registerHandlerMethod(handler,entry.getKey(),entry.getValue());
  }
}
