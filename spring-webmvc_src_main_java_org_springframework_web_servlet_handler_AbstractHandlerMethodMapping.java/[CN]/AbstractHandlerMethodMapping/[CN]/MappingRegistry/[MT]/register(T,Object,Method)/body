{
  this.readWriteLock.writeLock().lock();
  try {
    HandlerMethod handlerMethod=createHandlerMethod(handler,method);
    assertUniqueMethodMapping(handlerMethod,mapping);
    if (logger.isInfoEnabled()) {
      logger.info("Mapped \"" + mapping + "\" onto "+ handlerMethod);
    }
    this.mappingLookup.put(mapping,handlerMethod);
    List<String> directUrls=getDirectUrls(mapping);
    for (    String url : directUrls) {
      this.urlLookup.add(url,mapping);
    }
    String name=null;
    if (getNamingStrategy() != null) {
      name=getNamingStrategy().getName(handlerMethod,mapping);
      addMappingName(name,handlerMethod);
    }
    CorsConfiguration corsConfig=initCorsConfiguration(handler,method,mapping);
    if (corsConfig != null) {
      this.corsLookup.put(method,corsConfig);
    }
    this.registry.put(mapping,new MappingRegistration<T>(mapping,handlerMethod,directUrls,name,corsConfig));
  }
  finally {
    this.readWriteLock.writeLock().unlock();
  }
}
