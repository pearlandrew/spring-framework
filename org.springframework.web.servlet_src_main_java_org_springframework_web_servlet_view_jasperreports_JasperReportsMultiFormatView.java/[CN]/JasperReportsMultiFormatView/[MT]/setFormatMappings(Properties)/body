{
  if (mappingsWithClassNames == null || mappingsWithClassNames.isEmpty()) {
    throw new IllegalArgumentException("formatMappings must not be empty");
  }
  this.formatMappings=new HashMap(mappingsWithClassNames.size());
  for (Enumeration discriminators=mappingsWithClassNames.propertyNames(); discriminators.hasMoreElements(); ) {
    String discriminator=(String)discriminators.nextElement();
    String className=mappingsWithClassNames.getProperty(discriminator);
    try {
      if (logger.isDebugEnabled()) {
        logger.debug("Mapped view class [" + className + "] to mapping key ["+ discriminator+ "]");
      }
      this.formatMappings.put(discriminator,ClassUtils.forName(className));
    }
 catch (    ClassNotFoundException ex) {
      throw new ApplicationContextException("Class [" + className + "] mapped to format ["+ discriminator+ "] cannot be found",ex);
    }
  }
}
