{
  Topic destination=mock(Topic.class);
  TextMessage sentTextMessage=mock(TextMessage.class);
  given(sentTextMessage.getJMSCorrelationID()).willReturn(CORRELATION_ID);
  given(sentTextMessage.getJMSReplyTo()).willReturn(null);
  TextMessage responseTextMessage=mock(TextMessage.class);
  TopicPublisher topicPublisher=mock(TopicPublisher.class);
  TopicSession session=mock(TopicSession.class);
  given(session.createTextMessage(RESPONSE_TEXT)).willReturn(responseTextMessage);
  given(session.createPublisher(destination)).willReturn(topicPublisher);
  ResponsiveMessageDelegate delegate=mock(ResponsiveMessageDelegate.class);
  given(delegate.handleMessage(sentTextMessage)).willReturn(RESPONSE_TEXT);
  MessageListenerAdapter102 adapter=new MessageListenerAdapter102(delegate){
    @Override protected Object extractMessage(    Message message){
      return message;
    }
  }
;
  adapter.setDefaultResponseDestination(destination);
  adapter.onMessage(sentTextMessage,session);
  verify(responseTextMessage).setJMSCorrelationID(CORRELATION_ID);
  verify(topicPublisher).publish(responseTextMessage);
  verify(topicPublisher).close();
  verify(delegate).handleMessage(sentTextMessage);
}
