{
  TypedValue currentContext=state.getActiveContextObject();
  Object[] arguments=new Object[getChildCount()];
  for (int i=0; i < arguments.length; i++) {
    arguments[i]=children[i].getValueInternal(state).getValue();
  }
  if (currentContext.getValue() == null) {
    if (nullSafe) {
      return TypedValue.NULL_TYPED_VALUE;
    }
 else {
      throw new SpelEvaluationException(getStartPosition(),SpelMessages.METHOD_CALL_ON_NULL_OBJECT_NOT_ALLOWED,FormatHelper.formatMethodForMessage(name,getTypes(arguments)));
    }
  }
  MethodExecutor executorToUse=this.cachedExecutor;
  if (executorToUse != null) {
    try {
      return executorToUse.execute(state.getEvaluationContext(),state.getActiveContextObject().getValue(),arguments);
    }
 catch (    AccessException ae) {
      this.cachedExecutor=null;
    }
  }
  executorToUse=findAccessorForMethod(this.name,getTypes(arguments),state);
  this.cachedExecutor=executorToUse;
  try {
    return executorToUse.execute(state.getEvaluationContext(),state.getActiveContextObject().getValue(),arguments);
  }
 catch (  AccessException ae) {
    throw new SpelEvaluationException(getStartPosition(),ae,SpelMessages.EXCEPTION_DURING_METHOD_INVOCATION,this.name,state.getActiveContextObject().getValue().getClass().getName(),ae.getMessage());
  }
}
