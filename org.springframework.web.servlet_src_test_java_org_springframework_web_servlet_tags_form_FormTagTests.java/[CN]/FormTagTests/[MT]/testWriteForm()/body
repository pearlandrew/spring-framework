{
  String commandName="myCommand";
  String name="formName";
  String action="/form.html";
  String method="POST";
  String target="myTarget";
  String enctype="my/enctype";
  String acceptCharset="iso-8859-1";
  String onsubmit="onsubmit";
  String onreset="onreset";
  String autocomplete="off";
  String cssClass="myClass";
  String cssStyle="myStyle";
  String dynamicAttribute1="attr1";
  String dynamicAttribute2="attr2";
  this.tag.setName(name);
  this.tag.setCssClass(cssClass);
  this.tag.setCssStyle(cssStyle);
  this.tag.setCommandName(commandName);
  this.tag.setAction(action);
  this.tag.setMethod(method);
  this.tag.setTarget(target);
  this.tag.setEnctype(enctype);
  this.tag.setAcceptCharset(acceptCharset);
  this.tag.setOnsubmit(onsubmit);
  this.tag.setOnreset(onreset);
  this.tag.setAutocomplete(autocomplete);
  this.tag.setDynamicAttribute(null,dynamicAttribute1,dynamicAttribute1);
  this.tag.setDynamicAttribute(null,dynamicAttribute2,dynamicAttribute2);
  int result=this.tag.doStartTag();
  assertEquals(Tag.EVAL_BODY_INCLUDE,result);
  assertEquals("Form attribute not exposed",commandName,getPageContext().getRequest().getAttribute(FormTag.MODEL_ATTRIBUTE_VARIABLE_NAME));
  result=this.tag.doEndTag();
  assertEquals(Tag.EVAL_PAGE,result);
  this.tag.doFinally();
  assertNull("Form attribute not cleared after tag ends",getPageContext().getRequest().getAttribute(FormTag.MODEL_ATTRIBUTE_VARIABLE_NAME));
  String output=getOutput();
  assertFormTagOpened(output);
  assertFormTagClosed(output);
  assertContainsAttribute(output,"class",cssClass);
  assertContainsAttribute(output,"style",cssStyle);
  assertContainsAttribute(output,"action",action);
  assertContainsAttribute(output,"method",method);
  assertContainsAttribute(output,"target",target);
  assertContainsAttribute(output,"enctype",enctype);
  assertContainsAttribute(output,"accept-charset",acceptCharset);
  assertContainsAttribute(output,"onsubmit",onsubmit);
  assertContainsAttribute(output,"onreset",onreset);
  assertContainsAttribute(output,"autocomplete",autocomplete);
  assertContainsAttribute(output,"id",commandName);
  assertContainsAttribute(output,"name",name);
  assertContainsAttribute(output,dynamicAttribute1,dynamicAttribute1);
  assertContainsAttribute(output,dynamicAttribute2,dynamicAttribute2);
}
