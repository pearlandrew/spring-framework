{
  TypeDescriptor typeDescriptor=new TypeDescriptor(bodyParameter);
  boolean convertFromMono=getConversionService().canConvert(MONO_TYPE,typeDescriptor);
  boolean convertFromFlux=getConversionService().canConvert(FLUX_TYPE,typeDescriptor);
  ResolvableType elementType=ResolvableType.forMethodParameter(bodyParameter);
  if (convertFromMono || convertFromFlux) {
    elementType=elementType.getGeneric(0);
  }
  ServerHttpRequest request=exchange.getRequest();
  MediaType mediaType=request.getHeaders().getContentType();
  if (mediaType == null) {
    mediaType=MediaType.APPLICATION_OCTET_STREAM;
  }
  for (  HttpMessageConverter<?> converter : getMessageConverters()) {
    if (converter.canRead(elementType,mediaType)) {
      if (convertFromFlux) {
        Flux<?> flux=converter.read(elementType,request);
        if (this.validator != null) {
          flux=flux.map(applyValidationIfApplicable(bodyParameter));
        }
        return Mono.just(getConversionService().convert(flux,FLUX_TYPE,typeDescriptor));
      }
 else {
        Mono<?> mono=converter.readMono(elementType,request);
        if (this.validator != null) {
          mono=mono.map(applyValidationIfApplicable(bodyParameter));
        }
        if (convertFromMono) {
          return Mono.just(getConversionService().convert(mono,MONO_TYPE,typeDescriptor));
        }
 else {
          return Mono.from(mono);
        }
      }
    }
  }
  return Mono.error(new UnsupportedMediaTypeStatusException(mediaType,this.supportedMediaTypes));
}
