{
  if (method.getName().equals("equals")) {
    return (proxy == args[0]);
  }
 else   if (method.getName().equals("hashCode")) {
    return System.identityHashCode(proxy);
  }
 else   if (method.getName().equals("toString")) {
    return "Spring PersistenceManager proxy for target factory [" + getPersistenceManagerFactory() + "]";
  }
 else   if (method.getName().equals("getPersistenceManagerFactory")) {
    return getPersistenceManagerFactory();
  }
 else   if (method.getName().equals("isClosed")) {
    return false;
  }
 else   if (method.getName().equals("close")) {
    return null;
  }
  PersistenceManager pm=PersistenceManagerFactoryUtils.doGetPersistenceManager(getPersistenceManagerFactory(),isAllowCreate());
  try {
    Object retVal=method.invoke(pm,args);
    if (retVal instanceof Query) {
      PersistenceManagerFactoryUtils.applyTransactionTimeout((Query)retVal,getPersistenceManagerFactory(),getJdoDialect());
    }
    return retVal;
  }
 catch (  InvocationTargetException ex) {
    throw ex.getTargetException();
  }
 finally {
    PersistenceManagerFactoryUtils.doReleasePersistenceManager(pm,getPersistenceManagerFactory());
  }
}
