{
  root=new XmlPortletApplicationContext();
  PortletContext portletContext=new MockPortletContext();
  PortletConfig portletConfig=new MockPortletConfig(portletContext);
  root.setPortletConfig(portletConfig);
  root.setConfigLocations(new String[]{"/org/springframework/web/context/WEB-INF/applicationContext.xml"});
  root.addBeanFactoryPostProcessor(new BeanFactoryPostProcessor(){
    public void postProcessBeanFactory(    ConfigurableListableBeanFactory beanFactory) throws BeansException {
      beanFactory.addBeanPostProcessor(new BeanPostProcessor(){
        public Object postProcessBeforeInitialization(        Object bean,        String beanName) throws BeansException {
          if (bean instanceof TestBean) {
            ((TestBean)bean).getFriends().add("myFriend");
          }
          return bean;
        }
        public Object postProcessAfterInitialization(        Object bean,        String beanName) throws BeansException {
          return bean;
        }
      }
);
    }
  }
);
  root.refresh();
  XmlPortletApplicationContext pac=new XmlPortletApplicationContext();
  pac.setParent(root);
  pac.setPortletConfig(portletConfig);
  pac.setNamespace("test-portlet");
  pac.setConfigLocations(new String[]{"/org/springframework/web/portlet/context/WEB-INF/test-portlet.xml"});
  pac.refresh();
  return pac;
}
