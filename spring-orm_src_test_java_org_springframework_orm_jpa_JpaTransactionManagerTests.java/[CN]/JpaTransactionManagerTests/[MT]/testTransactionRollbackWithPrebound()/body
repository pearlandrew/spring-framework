{
  given(manager.getTransaction()).willReturn(tx);
  given(tx.isActive()).willReturn(true);
  assertTrue(!TransactionSynchronizationManager.hasResource(factory));
  assertTrue(!TransactionSynchronizationManager.isSynchronizationActive());
  TransactionSynchronizationManager.bindResource(factory,new EntityManagerHolder(manager));
  try {
    tt.execute(new TransactionCallback(){
      @Override public Object doInTransaction(      TransactionStatus status){
        assertTrue(TransactionSynchronizationManager.hasResource(factory));
        assertTrue(TransactionSynchronizationManager.isSynchronizationActive());
        template.execute(new JpaCallback(){
          @Override public Object doInJpa(          EntityManager em){
            return null;
          }
        }
);
        status.setRollbackOnly();
        return null;
      }
    }
);
    assertTrue(TransactionSynchronizationManager.hasResource(factory));
    assertTrue(!TransactionSynchronizationManager.isSynchronizationActive());
  }
  finally {
    TransactionSynchronizationManager.unbindResource(factory);
  }
  verify(tx).begin();
  verify(tx).rollback();
  verify(manager).clear();
}
