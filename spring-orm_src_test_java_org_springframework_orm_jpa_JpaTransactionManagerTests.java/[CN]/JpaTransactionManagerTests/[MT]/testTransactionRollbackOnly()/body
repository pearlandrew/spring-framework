{
  given(manager.getTransaction()).willReturn(tx);
  given(tx.isActive()).willReturn(true);
  final List<String> l=new ArrayList<String>();
  l.add("test");
  assertTrue(!TransactionSynchronizationManager.hasResource(factory));
  assertTrue(!TransactionSynchronizationManager.isSynchronizationActive());
  tt.execute(new TransactionCallback(){
    @Override public Object doInTransaction(    TransactionStatus status){
      assertTrue(TransactionSynchronizationManager.hasResource(factory));
      Object res=template.execute(new JpaCallback(){
        @Override public Object doInJpa(        EntityManager em){
          em.flush();
          return l;
        }
      }
);
      status.setRollbackOnly();
      return res;
    }
  }
);
  assertTrue(!TransactionSynchronizationManager.hasResource(factory));
  assertTrue(!TransactionSynchronizationManager.isSynchronizationActive());
  verify(manager).flush();
  verify(tx).rollback();
  verify(manager).close();
}
