{
  given(manager.getTransaction()).willReturn(tx);
  final List<String> l=new ArrayList<String>();
  l.add("test");
  assertTrue(!TransactionSynchronizationManager.hasResource(factory));
  assertTrue(!TransactionSynchronizationManager.isSynchronizationActive());
  try {
    tt.execute(new TransactionCallback(){
      @Override public Object doInTransaction(      TransactionStatus status){
        assertTrue(TransactionSynchronizationManager.hasResource(factory));
        return template.execute(new JpaCallback(){
          @Override public Object doInJpa(          EntityManager em){
            throw new RuntimeException("some exception");
          }
        }
);
      }
    }
);
    fail("Should have propagated RuntimeException");
  }
 catch (  RuntimeException ex) {
  }
  assertTrue(!TransactionSynchronizationManager.hasResource(factory));
  assertTrue(!TransactionSynchronizationManager.isSynchronizationActive());
  verify(manager).close();
}
