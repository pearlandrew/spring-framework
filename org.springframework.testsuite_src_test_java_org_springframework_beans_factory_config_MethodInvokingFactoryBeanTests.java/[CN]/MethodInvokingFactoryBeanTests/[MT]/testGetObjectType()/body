{
  MethodInvokerTests.TestClass1 tc1=new MethodInvokerTests.TestClass1();
  MethodInvokingFactoryBean mcfb=new MethodInvokingFactoryBean();
  mcfb=new MethodInvokingFactoryBean();
  mcfb.setTargetObject(tc1);
  mcfb.setTargetMethod("method1");
  mcfb.afterPropertiesSet();
  assertTrue(int.class.equals(mcfb.getObjectType()));
  mcfb=new MethodInvokingFactoryBean();
  mcfb.setTargetClass(MethodInvokerTests.TestClass1.class);
  mcfb.setTargetMethod("voidRetvalMethod");
  mcfb.afterPropertiesSet();
  Class objType=mcfb.getObjectType();
  assertTrue(objType.equals(void.class));
  MethodInvokerTests.TestClass1._staticField1=0;
  mcfb=new MethodInvokingFactoryBean();
  mcfb.setTargetClass(MethodInvokerTests.TestClass1.class);
  mcfb.setTargetMethod("supertypes");
  mcfb.setArguments(new Object[]{new ArrayList(),new ArrayList(),"hello"});
  mcfb.afterPropertiesSet();
  mcfb.getObjectType();
  mcfb=new MethodInvokingFactoryBean();
  mcfb.registerCustomEditor(String.class,new StringTrimmerEditor(false));
  mcfb.setTargetClass(MethodInvokerTests.TestClass1.class);
  mcfb.setTargetMethod("supertypes");
  mcfb.setArguments(new Object[]{"1",new Object()});
  try {
    mcfb.afterPropertiesSet();
    fail("Should have thrown NoSuchMethodException");
  }
 catch (  NoSuchMethodException ex) {
  }
}
