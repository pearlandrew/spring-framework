{
  MockControl interceptorControl=MockControl.createControl(org.hibernate.Interceptor.class);
  org.hibernate.Interceptor entityInterceptor=(org.hibernate.Interceptor)interceptorControl.getMock();
  interceptorControl.replay();
  MockControl sfControl=MockControl.createControl(SessionFactory.class);
  SessionFactory sf=(SessionFactory)sfControl.getMock();
  MockControl sessionControl=MockControl.createControl(Session.class);
  Session session=(Session)sessionControl.getMock();
  sf.openSession(entityInterceptor);
  sfControl.setReturnValue(session,1);
  session.getSessionFactory();
  sessionControl.setReturnValue(sf,1);
  session.flush();
  sessionControl.setVoidCallable(1);
  session.close();
  sessionControl.setReturnValue(null,1);
  sfControl.replay();
  sessionControl.replay();
  HibernateInterceptor interceptor=new HibernateInterceptor();
  interceptor.setSessionFactory(sf);
  interceptor.setEntityInterceptor(entityInterceptor);
  try {
    interceptor.invoke(new TestInvocation(sf));
  }
 catch (  Throwable t) {
    fail("Should not have thrown Throwable: " + t.getMessage());
  }
  interceptorControl.verify();
  sfControl.verify();
  sessionControl.verify();
}
