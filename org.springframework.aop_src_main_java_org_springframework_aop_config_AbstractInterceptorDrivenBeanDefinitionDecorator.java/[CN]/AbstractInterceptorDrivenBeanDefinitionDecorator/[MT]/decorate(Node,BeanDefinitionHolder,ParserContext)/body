{
  BeanDefinitionRegistry registry=parserContext.getRegistry();
  String existingBeanName=definitionHolder.getBeanName();
  BeanDefinition targetDefinition=definitionHolder.getBeanDefinition();
  BeanDefinition interceptorDefinition=createInterceptorDefinition(node);
  String interceptorName=existingBeanName + "." + getInterceptorNameSuffix(interceptorDefinition);
  BeanDefinitionReaderUtils.registerBeanDefinition(new BeanDefinitionHolder(interceptorDefinition,interceptorName),registry);
  BeanDefinitionHolder result=definitionHolder;
  if (!isProxyFactoryBeanDefinition(targetDefinition)) {
    RootBeanDefinition proxyDefinition=new RootBeanDefinition();
    proxyDefinition.setBeanClass(ProxyFactoryBean.class);
    proxyDefinition.getPropertyValues().add("target",targetDefinition);
    proxyDefinition.getPropertyValues().add("interceptorNames",new ManagedList<String>());
    proxyDefinition.setAutowireCandidate(targetDefinition.isAutowireCandidate());
    proxyDefinition.setPrimary(targetDefinition.isPrimary());
    if (targetDefinition instanceof AbstractBeanDefinition) {
      proxyDefinition.copyQualifiersFrom((AbstractBeanDefinition)targetDefinition);
    }
    result=new BeanDefinitionHolder(proxyDefinition,existingBeanName);
  }
  addInterceptorNameToList(interceptorName,result.getBeanDefinition());
  return result;
}
