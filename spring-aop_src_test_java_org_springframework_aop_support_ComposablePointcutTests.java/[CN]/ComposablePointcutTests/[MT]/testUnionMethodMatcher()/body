{
  ComposablePointcut pc=new ComposablePointcut(ClassFilter.TRUE,GET_AGE_METHOD_MATCHER);
  assertFalse(Pointcuts.matches(pc,PointcutsTests.TEST_BEAN_ABSQUATULATE,TestBean.class,null));
  assertTrue(Pointcuts.matches(pc,PointcutsTests.TEST_BEAN_GET_AGE,TestBean.class,null));
  assertFalse(Pointcuts.matches(pc,PointcutsTests.TEST_BEAN_GET_NAME,TestBean.class,null));
  pc.union(GETTER_METHOD_MATCHER);
  assertFalse(Pointcuts.matches(pc,PointcutsTests.TEST_BEAN_ABSQUATULATE,TestBean.class,null));
  assertTrue(Pointcuts.matches(pc,PointcutsTests.TEST_BEAN_GET_AGE,TestBean.class,null));
  assertTrue(Pointcuts.matches(pc,PointcutsTests.TEST_BEAN_GET_NAME,TestBean.class,null));
  pc.union(ABSQUATULATE_METHOD_MATCHER);
  assertTrue(Pointcuts.matches(pc,PointcutsTests.TEST_BEAN_ABSQUATULATE,TestBean.class,null));
  assertTrue(Pointcuts.matches(pc,PointcutsTests.TEST_BEAN_GET_AGE,TestBean.class,null));
  assertTrue(Pointcuts.matches(pc,PointcutsTests.TEST_BEAN_GET_NAME,TestBean.class,null));
  assertFalse(Pointcuts.matches(pc,PointcutsTests.TEST_BEAN_SET_AGE,TestBean.class,null));
}
