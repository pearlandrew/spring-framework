{
  RootBeanDefinition containerDef=new RootBeanDefinition();
  containerDef.setSource(context.getSource());
  containerDef.getPropertyValues().addPropertyValues(context.getContainerValues());
  parseListenerConfiguration(context.getListenerElement(),context.getParserContext(),containerDef);
  Element containerEle=context.getContainerElement();
  String containerType=containerEle.getAttribute(CONTAINER_TYPE_ATTRIBUTE);
  String containerClass=containerEle.getAttribute(CONTAINER_CLASS_ATTRIBUTE);
  if (!"".equals(containerClass)) {
    containerDef.setBeanClassName(containerClass);
  }
 else   if ("".equals(containerType) || containerType.startsWith("default")) {
    containerDef.setBeanClassName("org.springframework.jms.listener.DefaultMessageListenerContainer");
  }
 else   if (containerType.startsWith("simple")) {
    containerDef.setBeanClassName("org.springframework.jms.listener.SimpleMessageListenerContainer");
  }
 else {
    context.getParserContext().getReaderContext().error("Invalid 'container-type' attribute: only \"default\" and \"simple\" supported.",containerEle);
  }
  String phase=containerEle.getAttribute(PHASE_ATTRIBUTE);
  if (StringUtils.hasText(phase)) {
    containerDef.getPropertyValues().add("phase",phase);
  }
  return containerDef;
}
