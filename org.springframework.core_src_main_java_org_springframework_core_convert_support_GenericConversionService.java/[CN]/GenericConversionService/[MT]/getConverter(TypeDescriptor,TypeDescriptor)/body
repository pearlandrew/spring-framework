{
  ConverterCacheKey key=new ConverterCacheKey(sourceType,targetType);
  GenericConverter converter=this.converterCache.get(key);
  if (converter != null) {
    if (logger.isTraceEnabled()) {
      logger.trace("Matched cached converter " + converter);
    }
    return converter != NO_MATCH ? converter : null;
  }
 else {
    converter=findConverterForClassPair(sourceType,targetType);
    if (converter == null) {
      converter=getDefaultConverter(sourceType,targetType);
    }
    if (converter != null) {
      if (logger.isTraceEnabled()) {
        logger.trace("Caching matched Converter under key " + key);
      }
      this.converterCache.put(key,converter);
      return converter;
    }
 else {
      if (logger.isTraceEnabled()) {
        logger.trace("Caching Converter [NO_MATCH] result under key " + key);
      }
      this.converterCache.put(key,NO_MATCH);
      return null;
    }
  }
}
