{
  assertNotNull(sourceType,targetType);
  if (logger.isDebugEnabled()) {
    logger.debug("Converting value " + StylerUtils.style(source) + " of "+ sourceType+ " to "+ targetType);
  }
  if (sourceType == TypeDescriptor.NULL) {
    Assert.isTrue(source == null,"The value must be null if sourceType == TypeDescriptor.NULL");
    Object result=convertNullSource(sourceType,targetType);
    if (result == null) {
      assertNotPrimitiveTargetType(sourceType,targetType);
    }
    if (logger.isDebugEnabled()) {
      logger.debug("Converted to " + StylerUtils.style(result));
    }
    return result;
  }
  if (targetType == TypeDescriptor.NULL) {
    logger.debug("Converted to null");
    return null;
  }
  Assert.isTrue(source == null || sourceType.getObjectType().isInstance(source));
  GenericConverter converter=getConverter(sourceType,targetType);
  if (converter == null) {
    return handleConverterNotFound(source,sourceType,targetType);
  }
  Object result=ConversionUtils.invokeConverter(converter,source,sourceType,targetType);
  if (result == null) {
    assertNotPrimitiveTargetType(sourceType,targetType);
  }
  if (logger.isDebugEnabled()) {
    logger.debug("Converted to " + StylerUtils.style(result));
  }
  return result;
}
