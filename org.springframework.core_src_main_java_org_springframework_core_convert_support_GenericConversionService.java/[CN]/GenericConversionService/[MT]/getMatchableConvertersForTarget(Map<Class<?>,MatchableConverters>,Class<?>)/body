{
  if (targetType.isInterface()) {
    LinkedList<Class<?>> classQueue=new LinkedList<Class<?>>();
    classQueue.addFirst(targetType);
    while (!classQueue.isEmpty()) {
      Class<?> currentClass=classQueue.removeLast();
      MatchableConverters converter=converters.get(currentClass);
      if (converter != null) {
        return converter;
      }
      Class<?>[] interfaces=currentClass.getInterfaces();
      for (      Class<?> ifc : interfaces) {
        classQueue.addFirst(ifc);
      }
    }
    return converters.get(Object.class);
  }
 else {
    LinkedList<Class<?>> classQueue=new LinkedList<Class<?>>();
    classQueue.addFirst(targetType);
    while (!classQueue.isEmpty()) {
      Class<?> currentClass=classQueue.removeLast();
      MatchableConverters converter=converters.get(currentClass);
      if (converter != null) {
        return converter;
      }
      if (currentClass.isArray()) {
        Class<?> componentType=ClassUtils.resolvePrimitiveIfNecessary(currentClass.getComponentType());
        if (componentType.getSuperclass() != null) {
          classQueue.addFirst(Array.newInstance(componentType.getSuperclass(),0).getClass());
        }
      }
 else {
        Class<?>[] interfaces=currentClass.getInterfaces();
        for (        Class<?> ifc : interfaces) {
          classQueue.addFirst(ifc);
        }
        if (currentClass.getSuperclass() != null) {
          classQueue.addFirst(currentClass.getSuperclass());
        }
      }
    }
    return null;
  }
}
