{
  if (!(o1 instanceof Advisor && o2 instanceof Advisor)) {
    throw new IllegalArgumentException("AspectJPrecedenceComparator can only compare the order of Advisors, " + "but was passed [" + o1 + "] and ["+ o2+ "]");
  }
  Advisor advisor1=(Advisor)o1;
  Advisor advisor2=(Advisor)o2;
  boolean oneOrOtherIsAfterAdvice=(AspectJAopUtils.isAfterAdvice(advisor1) || AspectJAopUtils.isAfterAdvice(advisor2));
  boolean oneOrOtherIsBeforeAdvice=(AspectJAopUtils.isBeforeAdvice(advisor1) || AspectJAopUtils.isBeforeAdvice(advisor2));
  if (oneOrOtherIsAfterAdvice && oneOrOtherIsBeforeAdvice) {
    return NOT_COMPARABLE;
  }
 else {
    int advisorPrecedence=this.advisorComparator.compare(advisor1,advisor2);
    if (advisorPrecedence == SAME_PRECEDENCE && declaredInSameAspect(advisor1,advisor2)) {
      advisorPrecedence=comparePrecedenceWithinAspect(advisor1,advisor2);
    }
    return advisorPrecedence;
  }
}
