{
  if (processInnerClasses == false)   return;
  String innerClassName=convertResourcePathToClassName(name);
  String configClassName=configClass.getName();
  if (innerClassName.equals(configClassName)) {
    if (innerClasses.containsKey(outerName)) {
      configClass.setDeclaringClass(innerClasses.get(outerName));
    }
    return;
  }
  ConfigurationClass innerConfigClass=new ConfigurationClass();
  ConfigurationClassVisitor ccVisitor=new ConfigurationClassVisitor(innerConfigClass,new ConfigurationModel(),problemReporter,classLoader);
  ccVisitor.setProcessInnerClasses(false);
  ClassReader reader=AsmUtils.newClassReader(name,classLoader);
  reader.accept(ccVisitor,false);
  if (innerClasses.containsKey(outerName))   innerConfigClass.setDeclaringClass(innerClasses.get(outerName));
  if (innerConfigClass.getMetadata() != null)   innerClasses.put(name,innerConfigClass);
}
