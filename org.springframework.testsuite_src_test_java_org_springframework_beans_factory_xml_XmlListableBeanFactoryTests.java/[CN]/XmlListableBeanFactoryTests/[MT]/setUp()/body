{
  parent=new DefaultListableBeanFactory();
  Map m=new HashMap();
  m.put("name","Albert");
  parent.registerBeanDefinition("father",new RootBeanDefinition(TestBean.class,new MutablePropertyValues(m)));
  m=new HashMap();
  m.put("name","Roderick");
  parent.registerBeanDefinition("rod",new RootBeanDefinition(TestBean.class,new MutablePropertyValues(m)));
  this.factory=new XmlBeanFactory(new ClassPathResource("test.xml",getClass()),parent);
  this.factory.addBeanPostProcessor(new BeanPostProcessor(){
    public Object postProcessBeforeInitialization(    Object bean,    String name) throws BeansException {
      if (bean instanceof TestBean) {
        ((TestBean)bean).setPostProcessed(true);
      }
      if (bean instanceof DummyFactory) {
        ((DummyFactory)bean).setPostProcessed(true);
      }
      return bean;
    }
    public Object postProcessAfterInitialization(    Object bean,    String name) throws BeansException {
      return bean;
    }
  }
);
  this.factory.addBeanPostProcessor(new LifecycleBean.PostProcessor());
  this.factory.addBeanPostProcessor(new ProtectedLifecycleBean.PostProcessor());
}
