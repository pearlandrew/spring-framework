{
  if (sourceType.isInterface()) {
    LinkedList classQueue=new LinkedList();
    classQueue.addFirst(sourceType);
    while (!classQueue.isEmpty()) {
      Class currentClass=(Class)classQueue.removeLast();
      Map converters=getConvertersForSource(currentClass);
      System.out.println("Source:" + currentClass);
      Converter converter=getConverter(converters,targetType);
      if (converter != null) {
        return converter;
      }
      Class[] interfaces=currentClass.getInterfaces();
      for (int i=0; i < interfaces.length; i++) {
        classQueue.addFirst(interfaces[i]);
      }
    }
    Map objectConverters=getConvertersForSource(Object.class);
    return getConverter(objectConverters,targetType);
  }
 else {
    LinkedList classQueue=new LinkedList();
    classQueue.addFirst(sourceType);
    while (!classQueue.isEmpty()) {
      Class currentClass=(Class)classQueue.removeLast();
      Map converters=getConvertersForSource(currentClass);
      Converter converter=getConverter(converters,targetType);
      if (converter != null) {
        return converter;
      }
      if (currentClass.getSuperclass() != null) {
        classQueue.addFirst(currentClass.getSuperclass());
      }
      Class[] interfaces=currentClass.getInterfaces();
      for (int i=0; i < interfaces.length; i++) {
        classQueue.addFirst(interfaces[i]);
      }
    }
    return null;
  }
}
