{
  MultiValueMap<String,Object> parts=new LinkedMultiValueMap<String,Object>();
  parts.add("name 1","value 1");
  parts.add("name 2","value 2+1");
  parts.add("name 2","value 2+2");
  parts.add("name 3",null);
  Resource logo=new ClassPathResource("/org/springframework/http/converter/logo.jpg");
  parts.add("logo",logo);
  Source xml=new StreamSource(new StringReader("<root><child/></root>"));
  HttpHeaders entityHeaders=new HttpHeaders();
  entityHeaders.setContentType(MediaType.TEXT_XML);
  HttpEntity<Source> entity=new HttpEntity<Source>(xml,entityHeaders);
  parts.add("xml",entity);
  MockHttpOutputMessage outputMessage=new MockHttpOutputMessage();
  converter.write(parts,MediaType.MULTIPART_FORM_DATA,outputMessage);
  final MediaType contentType=outputMessage.getHeaders().getContentType();
  assertNotNull("No boundary found",contentType.getParameter("boundary"));
  FileItemFactory fileItemFactory=new DiskFileItemFactory();
  FileUpload fileUpload=new FileUpload(fileItemFactory);
  List items=fileUpload.parseRequest(new MockHttpOutputMessageRequestContext(outputMessage));
  assertEquals(5,items.size());
  FileItem item=(FileItem)items.get(0);
  assertTrue(item.isFormField());
  assertEquals("name 1",item.getFieldName());
  assertEquals("value 1",item.getString());
  item=(FileItem)items.get(1);
  assertTrue(item.isFormField());
  assertEquals("name 2",item.getFieldName());
  assertEquals("value 2+1",item.getString());
  item=(FileItem)items.get(2);
  assertTrue(item.isFormField());
  assertEquals("name 2",item.getFieldName());
  assertEquals("value 2+2",item.getString());
  item=(FileItem)items.get(3);
  assertFalse(item.isFormField());
  assertEquals("logo",item.getFieldName());
  assertEquals("logo.jpg",item.getName());
  assertEquals("image/jpeg",item.getContentType());
  assertEquals(logo.getFile().length(),item.getSize());
  item=(FileItem)items.get(4);
  assertEquals("xml",item.getFieldName());
  assertEquals("text/xml",item.getContentType());
}
