{
  FieldAccessor fieldAccessor=getFieldAccessor(propertyName);
  if (fieldAccessor == null) {
    throw new NotWritablePropertyException(getRootClass(),propertyName,"Field '" + propertyName + "' does not exist");
  }
  Field field=fieldAccessor.getField();
  Object oldValue=null;
  try {
    oldValue=fieldAccessor.getValue();
    Object convertedValue=this.typeConverterDelegate.convertIfNecessary(field.getName(),oldValue,newValue,field.getType(),new TypeDescriptor(field));
    fieldAccessor.setValue(convertedValue);
  }
 catch (  ConverterNotFoundException ex) {
    PropertyChangeEvent pce=new PropertyChangeEvent(getRootInstance(),propertyName,oldValue,newValue);
    throw new ConversionNotSupportedException(pce,field.getType(),ex);
  }
catch (  ConversionException ex) {
    PropertyChangeEvent pce=new PropertyChangeEvent(getRootInstance(),propertyName,oldValue,newValue);
    throw new TypeMismatchException(pce,field.getType(),ex);
  }
catch (  IllegalStateException ex) {
    PropertyChangeEvent pce=new PropertyChangeEvent(getRootInstance(),propertyName,oldValue,newValue);
    throw new ConversionNotSupportedException(pce,field.getType(),ex);
  }
catch (  IllegalArgumentException ex) {
    PropertyChangeEvent pce=new PropertyChangeEvent(getRootInstance(),propertyName,oldValue,newValue);
    throw new TypeMismatchException(pce,field.getType(),ex);
  }
}
