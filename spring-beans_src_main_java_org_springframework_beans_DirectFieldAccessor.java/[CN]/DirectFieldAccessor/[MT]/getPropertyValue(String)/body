{
  Field field=this.fieldMap.get(propertyName);
  if (field == null) {
    throw new NotReadablePropertyException(this.target.getClass(),propertyName,"Field '" + propertyName + "' does not exist");
  }
  try {
    ReflectionUtils.makeAccessible(field);
    return field.get(this.target);
  }
 catch (  IllegalAccessException ex) {
    throw new InvalidPropertyException(this.target.getClass(),propertyName,"Field is not accessible",ex);
  }
}
