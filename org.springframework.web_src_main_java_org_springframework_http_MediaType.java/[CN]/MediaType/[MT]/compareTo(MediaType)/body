{
  int comp=this.type.compareToIgnoreCase(other.type);
  if (comp != 0) {
    return comp;
  }
  comp=this.subtype.compareToIgnoreCase(other.subtype);
  if (comp != 0) {
    return comp;
  }
  comp=this.parameters.size() - other.parameters.size();
  if (comp != 0) {
    return comp;
  }
  TreeSet<String> thisAttributes=new TreeSet<String>(String.CASE_INSENSITIVE_ORDER);
  thisAttributes.addAll(this.parameters.keySet());
  TreeSet<String> otherAttributes=new TreeSet<String>(String.CASE_INSENSITIVE_ORDER);
  otherAttributes.addAll(other.parameters.keySet());
  Iterator<String> thisAttributesIterator=thisAttributes.iterator();
  Iterator<String> otherAttributesIterator=otherAttributes.iterator();
  while (thisAttributesIterator.hasNext()) {
    String thisAttribute=thisAttributesIterator.next();
    String otherAttribute=otherAttributesIterator.next();
    comp=thisAttribute.compareToIgnoreCase(otherAttribute);
    if (comp != 0) {
      return comp;
    }
    String thisValue=this.parameters.get(thisAttribute);
    String otherValue=other.parameters.get(otherAttribute);
    if (otherValue == null) {
      otherValue="";
    }
    comp=thisValue.compareTo(otherValue);
    if (comp != 0) {
      return comp;
    }
  }
  return 0;
}
