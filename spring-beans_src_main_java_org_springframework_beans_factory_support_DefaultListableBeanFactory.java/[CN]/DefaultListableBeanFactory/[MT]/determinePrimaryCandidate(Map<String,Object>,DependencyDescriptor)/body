{
  String primaryBeanName=null;
  String fallbackBeanName=null;
  for (  Map.Entry<String,Object> entry : candidateBeans.entrySet()) {
    String candidateBeanName=entry.getKey();
    Object beanInstance=entry.getValue();
    if (isPrimary(candidateBeanName,beanInstance)) {
      if (primaryBeanName != null) {
        boolean candidateLocal=containsBeanDefinition(candidateBeanName);
        boolean primaryLocal=containsBeanDefinition(primaryBeanName);
        if (candidateLocal == primaryLocal) {
          throw new NoUniqueBeanDefinitionException(descriptor.getDependencyType(),candidateBeans.size(),"more than one 'primary' bean found among candidates: " + candidateBeans.keySet());
        }
 else         if (candidateLocal && !primaryLocal) {
          primaryBeanName=candidateBeanName;
        }
      }
 else {
        primaryBeanName=candidateBeanName;
      }
    }
    if (primaryBeanName == null && (this.resolvableDependencies.values().contains(beanInstance) || matchesBeanName(candidateBeanName,descriptor.getDependencyName()))) {
      fallbackBeanName=candidateBeanName;
    }
  }
  return (primaryBeanName != null ? primaryBeanName : fallbackBeanName);
}
