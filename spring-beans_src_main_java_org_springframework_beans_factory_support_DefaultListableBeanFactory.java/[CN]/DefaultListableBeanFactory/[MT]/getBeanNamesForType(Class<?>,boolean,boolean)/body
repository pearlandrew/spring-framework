{
  if (!isConfigurationFrozen() || type == null || !allowEagerInit) {
    return doGetBeanNamesForType(ResolvableType.forClass(type != null ? type : Object.class),includeNonSingletons,allowEagerInit);
  }
  Map<Class<?>,String[]> cache=(includeNonSingletons ? this.allBeanNamesByType : this.singletonBeanNamesByType);
  String[] resolvedBeanNames=cache.get(type);
  if (resolvedBeanNames != null) {
    return resolvedBeanNames;
  }
  resolvedBeanNames=doGetBeanNamesForType(ResolvableType.forClass(type),includeNonSingletons,allowEagerInit);
  if (ClassUtils.isCacheSafe(type,getBeanClassLoader())) {
    cache.put(type,resolvedBeanNames);
  }
  return resolvedBeanNames;
}
