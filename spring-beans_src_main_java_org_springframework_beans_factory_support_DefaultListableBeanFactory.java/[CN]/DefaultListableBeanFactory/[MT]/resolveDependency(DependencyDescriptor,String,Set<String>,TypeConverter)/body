{
  descriptor.initParameterNameDiscovery(getParameterNameDiscoverer());
  if (descriptor.getDependencyType().equals(javaUtilOptionalClass)) {
    return new OptionalDependencyFactory().createOptionalDependency(descriptor,beanName);
  }
 else   if (ObjectFactory.class == descriptor.getDependencyType() || SmartObjectFactory.class == descriptor.getDependencyType()) {
    return new DependencyObjectFactory(descriptor,beanName);
  }
 else   if (javaxInjectProviderClass == descriptor.getDependencyType()) {
    return new DependencyProviderFactory().createDependencyProvider(descriptor,beanName);
  }
 else {
    Object result=getAutowireCandidateResolver().getLazyResolutionProxyIfNecessary(descriptor,beanName);
    if (result == null) {
      result=doResolveDependency(descriptor,beanName,autowiredBeanNames,typeConverter);
    }
    return result;
  }
}
