{
  Assert.notNull(requiredType,"Required type must not be null");
  String[] beanNames=getBeanNamesForType(requiredType);
  if (beanNames.length > 1) {
    ArrayList<String> autowireCandidates=new ArrayList<String>();
    for (    String beanName : beanNames) {
      if (getBeanDefinition(beanName).isAutowireCandidate()) {
        autowireCandidates.add(beanName);
      }
    }
    if (autowireCandidates.size() > 0) {
      beanNames=autowireCandidates.toArray(new String[autowireCandidates.size()]);
    }
  }
  if (beanNames.length == 1) {
    return getBean(beanNames[0],requiredType);
  }
 else   if (beanNames.length > 1) {
    T primaryBean=null;
    for (    String beanName : beanNames) {
      T beanInstance=getBean(beanName,requiredType);
      if (isPrimary(beanName,beanInstance)) {
        if (primaryBean != null) {
          throw new NoUniqueBeanDefinitionException(requiredType,beanNames.length,"more than one 'primary' bean found of required type: " + Arrays.asList(beanNames));
        }
        primaryBean=beanInstance;
      }
    }
    if (primaryBean != null) {
      return primaryBean;
    }
    throw new NoUniqueBeanDefinitionException(requiredType,beanNames);
  }
 else   if (getParentBeanFactory() != null) {
    return getParentBeanFactory().getBean(requiredType);
  }
 else {
    throw new NoSuchBeanDefinitionException(requiredType);
  }
}
