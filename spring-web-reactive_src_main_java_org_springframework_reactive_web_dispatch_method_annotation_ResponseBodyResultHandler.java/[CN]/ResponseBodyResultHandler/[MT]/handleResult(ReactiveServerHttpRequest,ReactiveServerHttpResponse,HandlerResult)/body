{
  Object value=result.getValue();
  if (value == null) {
    return Publishers.empty();
  }
  HandlerMethod hm=(HandlerMethod)result.getHandler();
  ResolvableType returnType=ResolvableType.forMethodParameter(hm.getReturnValueType(value));
  Publisher<?> elementStream;
  ResolvableType elementType;
  if (this.conversionService.canConvert(returnType.getRawClass(),Publisher.class)) {
    elementStream=this.conversionService.convert(value,Publisher.class);
    elementType=returnType.getGeneric(0);
  }
 else {
    elementStream=Publishers.just(value);
    elementType=returnType;
  }
  MediaType mediaType=resolveMediaType(request);
  Encoder<?> encoder=resolveEncoder(elementType,mediaType);
  if (encoder == null) {
    return Publishers.error(new IllegalStateException("Return value type '" + returnType + "' with media type '"+ mediaType+ "' not supported"));
  }
  Publisher<ByteBuffer> outputStream=encoder.encode((Publisher)elementStream,returnType,mediaType);
  if (mediaType == null || mediaType.isWildcardType() || mediaType.isWildcardSubtype()) {
    List<MimeType> mimeTypes=encoder.getSupportedMimeTypes();
    if (!mimeTypes.isEmpty()) {
      MimeType mimeType=mimeTypes.get(0);
      mediaType=new MediaType(mimeType.getType(),mimeType.getSubtype(),mimeType.getParameters());
    }
  }
  if (mediaType != null && !mediaType.equals(MediaType.ALL)) {
    response.getHeaders().setContentType(mediaType);
  }
  return response.setBody(outputStream);
}
