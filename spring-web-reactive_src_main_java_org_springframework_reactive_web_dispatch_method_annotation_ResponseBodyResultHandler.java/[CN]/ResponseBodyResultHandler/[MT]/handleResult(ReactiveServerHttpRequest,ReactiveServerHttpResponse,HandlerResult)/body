{
  Object value=result.getValue();
  HandlerMethod handlerMethod=(HandlerMethod)result.getHandler();
  MethodParameter returnType=handlerMethod.getReturnValueType(value);
  if (value == null) {
    return Publishers.empty();
  }
  ResolvableType type=ResolvableType.forMethodParameter(returnType);
  MediaType mediaType=resolveMediaType(request);
  Publisher<?> elementStream;
  ResolvableType elementType;
  if (conversionService.canConvert(type.getRawClass(),Publisher.class)) {
    elementStream=conversionService.convert(value,Publisher.class);
    elementType=type.getGeneric(0);
  }
 else {
    elementStream=Publishers.just(value);
    elementType=type;
  }
  Encoder<?> serializer=resolveSerializer(elementType,mediaType);
  if (serializer != null) {
    Publisher<ByteBuffer> outputStream=serializer.encode((Publisher)elementStream,type,mediaType);
    if (mediaType == null || mediaType.isWildcardType() || mediaType.isWildcardSubtype()) {
      List<MimeType> mimeTypes=serializer.getSupportedMimeTypes();
      if (!mimeTypes.isEmpty()) {
        MimeType mimeType=mimeTypes.get(0);
        mediaType=new MediaType(mimeType.getType(),mimeType.getSubtype(),mimeType.getParameters());
      }
    }
    if (mediaType != null && !mediaType.equals(MediaType.ALL)) {
      response.getHeaders().setContentType(mediaType);
    }
    return response.setBody(outputStream);
  }
  String returnTypeName=returnType.getParameterType().getName();
  return Publishers.error(new IllegalStateException("Return value type '" + returnTypeName + "' with media type '"+ mediaType+ "' not supported"));
}
