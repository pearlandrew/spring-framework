{
  final Locale defaultLocale=Locale.getDefault();
  Locale.setDefault(Locale.US);
  try {
    final Country austria=Country.COUNTRY_AT;
    final Country usa=Country.COUNTRY_US;
    final Map someMap=new HashMap();
    someMap.put(austria,LOCALE_AT);
    someMap.put(usa,Locale.US);
    this.bean.setSomeMap(someMap);
    this.tag.setPath("someMap");
    this.tag.setItems(getCountryToLocaleMap());
    this.tag.setItemValue("isoCode");
    this.tag.setItemLabel("displayLanguage");
    BeanPropertyBindingResult bindingResult=new BeanPropertyBindingResult(getTestBean(),COMMAND_NAME);
    bindingResult.getPropertyAccessor().registerCustomEditor(Country.class,new PropertyEditorSupport(){
      @Override public void setAsText(      final String text) throws IllegalArgumentException {
        setValue(Country.getCountryWithIsoCode(text));
      }
      @Override public String getAsText(){
        return ((Country)getValue()).getIsoCode();
      }
    }
);
    exposeBindingResult(bindingResult);
    int result=this.tag.doStartTag();
    assertEquals(Tag.SKIP_BODY,result);
    String output=getOutput();
    output="<doc>" + output + "</doc>";
    SAXReader reader=new SAXReader();
    Document document=reader.read(new StringReader(output));
    Element rootElement=document.getRootElement();
    assertEquals(2,rootElement.elements().size());
    Element selectElement=rootElement.element("select");
    assertEquals("select",selectElement.getName());
    assertEquals("someMap",selectElement.attribute("name").getValue());
    List children=selectElement.elements();
    assertEquals("Incorrect number of children",3,children.size());
    Element e;
    e=(Element)selectElement.selectSingleNode("option[@value = '" + austria.getIsoCode() + "']");
    assertNotNull("Option node not found with Country ISO code value [" + austria.getIsoCode() + "].",e);
    assertEquals("AT node not selected.","selected",e.attribute("selected").getValue());
    assertEquals("AT Locale displayLanguage property not used for option label.",LOCALE_AT.getDisplayLanguage(),e.getData());
    e=(Element)selectElement.selectSingleNode("option[@value = '" + usa.getIsoCode() + "']");
    assertNotNull("Option node not found with Country ISO code value [" + usa.getIsoCode() + "].",e);
    assertEquals("US node not selected.","selected",e.attribute("selected").getValue());
    assertEquals("US Locale displayLanguage property not used for option label.",Locale.US.getDisplayLanguage(),e.getData());
  }
  finally {
    Locale.setDefault(defaultLocale);
  }
}
