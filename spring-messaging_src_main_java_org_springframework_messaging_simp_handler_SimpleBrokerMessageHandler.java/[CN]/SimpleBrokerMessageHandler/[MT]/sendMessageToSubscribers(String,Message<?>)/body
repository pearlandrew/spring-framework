{
  MultiValueMap<String,String> subscriptions=this.subscriptionRegistry.findSubscriptions(message);
  if ((subscriptions.size() > 0) && logger.isDebugEnabled()) {
    logger.debug("Sending message with destination=" + destination + " to "+ subscriptions.size()+ " subscriber(s)");
  }
  for (  String sessionId : subscriptions.keySet()) {
    for (    String subscriptionId : subscriptions.get(sessionId)) {
      SimpMessageHeaderAccessor headers=SimpMessageHeaderAccessor.wrap(message);
      headers.setSessionId(sessionId);
      headers.setSubscriptionId(subscriptionId);
      Object payload=message.getPayload();
      Message<?> clientMessage=MessageBuilder.withPayload(payload).setHeaders(headers).build();
      try {
        this.clientOutboundChannel.send(clientMessage);
      }
 catch (      Throwable ex) {
        logger.error("Failed to send message to destination=" + destination + ", sessionId="+ sessionId+ ", subscriptionId="+ subscriptionId,ex);
      }
    }
  }
}
