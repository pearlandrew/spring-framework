{
  if (method != null && isOverridable(method,targetClass) && targetClass != null && targetClass != method.getDeclaringClass()) {
    try {
      if (Modifier.isPublic(method.getModifiers())) {
        try {
          return targetClass.getMethod(method.getName(),method.getParameterTypes());
        }
 catch (        NoSuchMethodException ex) {
          return method;
        }
      }
 else {
        Method specificMethod=ReflectionUtils.findMethod(targetClass,method.getName(),method.getParameterTypes());
        return (specificMethod != null ? specificMethod : method);
      }
    }
 catch (    SecurityException ex) {
    }
  }
  return method;
}
