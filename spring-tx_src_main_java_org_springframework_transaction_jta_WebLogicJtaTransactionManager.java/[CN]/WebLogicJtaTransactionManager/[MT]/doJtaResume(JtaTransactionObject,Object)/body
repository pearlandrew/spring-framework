{
  try {
    getTransactionManager().resume((Transaction)suspendedTransaction);
  }
 catch (  InvalidTransactionException ex) {
    if (!this.weblogicTransactionManagerAvailable) {
      throw ex;
    }
    if (logger.isDebugEnabled()) {
      logger.debug("Standard JTA resume threw InvalidTransactionException: " + ex.getMessage() + " - trying WebLogic JTA forceResume");
    }
    try {
      this.forceResumeMethod.invoke(getTransactionManager(),suspendedTransaction);
    }
 catch (    InvocationTargetException ex2) {
      throw new TransactionSystemException("WebLogic's TransactionManager.forceResume(Transaction) method failed",ex2.getTargetException());
    }
catch (    Exception ex2) {
      throw new TransactionSystemException("Could not access WebLogic's TransactionManager.forceResume(Transaction) method",ex2);
    }
  }
}
