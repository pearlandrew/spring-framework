{
  String[] candidateBeans=BeanFactoryUtils.beanNamesForTypeIncludingAncestors(bf,beanType);
  String matchingBean=null;
  for (  String beanName : candidateBeans) {
    if (isQualifierMatch(qualifier,beanName,bf)) {
      if (matchingBean != null) {
        throw new NoSuchBeanDefinitionException(qualifier,"No unique " + beanType.getSimpleName() + " bean found for qualifier '"+ qualifier+ "'");
      }
      matchingBean=beanName;
    }
  }
  if (matchingBean != null) {
    return bf.getBean(matchingBean,beanType);
  }
 else   if (bf.containsBean(qualifier)) {
    return bf.getBean(qualifier,beanType);
  }
 else {
    throw new NoSuchBeanDefinitionException(qualifier,"No matching " + beanType.getSimpleName() + " bean found for qualifier '"+ qualifier+ "' - neither qualifier match nor bean name match!");
  }
}
