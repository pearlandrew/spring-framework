{
  this.brokerRelay.start();
  String sessionId="sess1";
  StompHeaderAccessor headers=StompHeaderAccessor.create(StompCommand.CONNECT);
  headers.setSessionId(sessionId);
  headers.setUser(new TestPrincipal("joe"));
  this.brokerRelay.handleMessage(MessageBuilder.createMessage(new byte[0],headers.getMessageHeaders()));
  assertEquals(2,this.brokerRelay.getConnectionCount());
  this.brokerRelay.stopInternal();
  headers=StompHeaderAccessor.create(StompCommand.SEND);
  headers.setSessionId(sessionId);
  headers.setUser(new TestPrincipal("joe"));
  headers.setDestination("/foo");
  this.brokerRelay.handleMessage(MessageBuilder.createMessage(new byte[0],headers.getMessageHeaders()));
  assertEquals(1,this.brokerRelay.getConnectionCount());
  Message<byte[]> actual=this.outboundChannel.getMessages().get(0);
  StompHeaderAccessor actualHeaders=StompHeaderAccessor.getAccessor(actual,StompHeaderAccessor.class);
  assertEquals(StompCommand.ERROR,actualHeaders.getCommand());
  assertEquals(sessionId,actualHeaders.getSessionId());
  assertEquals("joe",actualHeaders.getUser().getName());
  assertEquals("Broker not available.",actualHeaders.getMessage());
}
