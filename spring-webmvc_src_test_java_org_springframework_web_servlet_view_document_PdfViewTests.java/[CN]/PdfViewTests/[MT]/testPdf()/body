{
  final String text="this should be in the PDF";
  MockHttpServletRequest request=new MockHttpServletRequest();
  MockHttpServletResponse response=new MockHttpServletResponse();
  AbstractPdfView pdfView=new AbstractPdfView(){
    @Override protected void buildPdfDocument(    Map model,    Document document,    PdfWriter writer,    HttpServletRequest request,    HttpServletResponse response) throws Exception {
      document.add(new Paragraph(text));
    }
  }
;
  pdfView.render(new HashMap(),request,response);
  byte[] pdfContent=response.getContentAsByteArray();
  assertEquals("correct response content type","application/pdf",response.getContentType());
  assertEquals("correct response content length",pdfContent.length,response.getContentLength());
  Document document=new Document(PageSize.A4);
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  PdfWriter writer=PdfWriter.getInstance(document,baos);
  writer.setViewerPreferences(PdfWriter.AllowPrinting | PdfWriter.PageLayoutSinglePage);
  document.open();
  document.add(new Paragraph(text));
  document.close();
  byte[] baosContent=baos.toByteArray();
  assertEquals("correct size",pdfContent.length,baosContent.length);
  int diffCount=0;
  for (int i=0; i < pdfContent.length; i++) {
    if (pdfContent[i] != baosContent[i]) {
      diffCount++;
    }
  }
  assertTrue("difference only in encryption",diffCount < 70);
}
