{
  if (this.defaultRequestBuilder != null) {
    if (requestBuilder instanceof Mergeable) {
      requestBuilder=(RequestBuilder)((Mergeable)requestBuilder).merge(this.defaultRequestBuilder);
    }
  }
  MockHttpServletRequest request=requestBuilder.buildRequest(this.servletContext);
  MockHttpServletResponse response=new MockHttpServletResponse();
  final MvcResult mvcResult=new DefaultMvcResult(request,response);
  request.setAttribute(MVC_RESULT_ATTRIBUTE,mvcResult);
  this.filterChain.reset();
  this.filterChain.doFilter(request,response);
  applyDefaultResultActions(mvcResult);
  return new ResultActions(){
    public ResultActions andExpect(    ResultMatcher matcher) throws Exception {
      matcher.match(mvcResult);
      return this;
    }
    public ResultActions andDo(    ResultHandler printer) throws Exception {
      printer.handle(mvcResult);
      return this;
    }
    public MvcResult andReturn(){
      return mvcResult;
    }
  }
;
}
