{
  ResponseStatus responseStatusAnn=AnnotationUtils.findAnnotation(handlerMethod,ResponseStatus.class);
  if (responseStatusAnn != null) {
    HttpStatus responseStatus=responseStatusAnn.value();
    String reason=responseStatusAnn.reason();
    if (!StringUtils.hasText(reason)) {
      webRequest.getResponse().setStatus(responseStatus.value());
    }
 else {
      webRequest.getResponse().sendError(responseStatus.value(),reason);
    }
  }
  if (returnValue != null && AnnotationUtils.findAnnotation(handlerMethod,ResponseBody.class) != null) {
    return handleResponseBody(returnValue,webRequest);
  }
  if (returnValue instanceof ModelAndView) {
    return (ModelAndView)returnValue;
  }
 else   if (returnValue instanceof Model) {
    return new ModelAndView().addAllObjects(((Model)returnValue).asMap());
  }
 else   if (returnValue instanceof Map) {
    return new ModelAndView().addAllObjects((Map)returnValue);
  }
 else   if (returnValue instanceof View) {
    return new ModelAndView((View)returnValue);
  }
 else   if (returnValue instanceof String) {
    return new ModelAndView((String)returnValue);
  }
 else   if (returnValue == null) {
    return new ModelAndView();
  }
 else {
    throw new IllegalArgumentException("Invalid handler method return value: " + returnValue);
  }
}
