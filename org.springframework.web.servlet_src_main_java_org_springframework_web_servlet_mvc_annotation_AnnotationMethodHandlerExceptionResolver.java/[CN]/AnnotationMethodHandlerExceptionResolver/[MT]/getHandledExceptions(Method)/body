{
  List<Class<? extends Throwable>> result=new ArrayList<Class<? extends Throwable>>();
  ExceptionHandler exceptionHandler=method.getAnnotation(ExceptionHandler.class);
  if (exceptionHandler != null) {
    if (!ObjectUtils.isEmpty(exceptionHandler.value())) {
      result.addAll(Arrays.asList(exceptionHandler.value()));
    }
 else {
      for (      Class<?> param : method.getParameterTypes()) {
        if (Throwable.class.isAssignableFrom(param)) {
          result.add((Class<? extends Throwable>)param);
        }
      }
    }
  }
  return result;
}
