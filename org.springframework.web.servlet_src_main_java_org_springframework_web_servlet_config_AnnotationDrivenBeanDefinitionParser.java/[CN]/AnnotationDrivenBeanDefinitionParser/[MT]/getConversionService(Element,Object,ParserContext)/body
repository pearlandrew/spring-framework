{
  RuntimeBeanReference conversionServiceRef;
  if (element.hasAttribute("conversion-service")) {
    conversionServiceRef=new RuntimeBeanReference(element.getAttribute("conversion-service"));
  }
 else {
    RootBeanDefinition conversionDef=new RootBeanDefinition(FormattingConversionServiceFactoryBean.class);
    conversionDef.setSource(source);
    conversionDef.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);
    String conversionName=parserContext.getReaderContext().registerWithGeneratedName(conversionDef);
    parserContext.registerComponent(new BeanComponentDefinition(conversionDef,conversionName));
    conversionServiceRef=new RuntimeBeanReference(conversionName);
  }
  Element formattersElement=DomUtils.getChildElementByTagName(element,"formatters");
  if (formattersElement != null) {
    ManagedList<BeanDefinitionHolder> formatters=new ManagedList<BeanDefinitionHolder>();
    formatters.setSource(source);
    for (    Element formatter : DomUtils.getChildElementsByTagName(formattersElement,"bean")) {
      BeanDefinitionHolder beanDef=parserContext.getDelegate().parseBeanDefinitionElement(formatter);
      beanDef=parserContext.getDelegate().decorateBeanDefinitionIfRequired(formatter,beanDef);
      formatters.add(beanDef);
    }
    BeanDefinition beanDef=parserContext.getRegistry().getBeanDefinition(conversionServiceRef.getBeanName());
    beanDef.getPropertyValues().add("formatters",formatters);
  }
  return conversionServiceRef;
}
