{
  System.setProperty(ALLOWED_PROPERTY_NAME,ALLOWED_PROPERTY_VALUE);
  System.setProperty(DISALLOWED_PROPERTY_NAME,DISALLOWED_PROPERTY_VALUE);
  System.getProperties().put(STRING_PROPERTY_NAME,NON_STRING_PROPERTY_VALUE);
  System.getProperties().put(NON_STRING_PROPERTY_NAME,STRING_PROPERTY_VALUE);
{
    Map<?,?> systemProperties=environment.getSystemProperties();
    assertThat(systemProperties,notNullValue());
    assertSame(systemProperties,System.getProperties());
    assertThat(systemProperties.get(ALLOWED_PROPERTY_NAME),equalTo((Object)ALLOWED_PROPERTY_VALUE));
    assertThat(systemProperties.get(DISALLOWED_PROPERTY_NAME),equalTo((Object)DISALLOWED_PROPERTY_VALUE));
    assertThat(systemProperties.get(STRING_PROPERTY_NAME),equalTo(NON_STRING_PROPERTY_VALUE));
    assertThat(systemProperties.get(NON_STRING_PROPERTY_NAME),equalTo((Object)STRING_PROPERTY_VALUE));
  }
  SecurityManager oldSecurityManager=System.getSecurityManager();
  SecurityManager securityManager=new SecurityManager(){
    @Override public void checkPropertiesAccess(){
      throw new AccessControlException("Accessing the system properties is disallowed");
    }
    @Override public void checkPropertyAccess(    String key){
      if (DISALLOWED_PROPERTY_NAME.equals(key)) {
        throw new AccessControlException(format("Accessing the system property [%s] is disallowed",DISALLOWED_PROPERTY_NAME));
      }
    }
    @Override public void checkPermission(    Permission perm){
    }
  }
;
  System.setSecurityManager(securityManager);
{
    Map<?,?> systemProperties=environment.getSystemProperties();
    assertThat(systemProperties,notNullValue());
    assertThat(systemProperties,instanceOf(ReadOnlySystemAttributesMap.class));
    assertThat((String)systemProperties.get(ALLOWED_PROPERTY_NAME),equalTo(ALLOWED_PROPERTY_VALUE));
    assertThat(systemProperties.get(DISALLOWED_PROPERTY_NAME),equalTo(null));
    assertThat(systemProperties.get(STRING_PROPERTY_NAME),nullValue());
    try {
      systemProperties.get(NON_STRING_PROPERTY_NAME);
      fail("Expected IllegalStateException when searching with non-string key against ReadOnlySystemAttributesMap");
    }
 catch (    IllegalStateException ex) {
    }
  }
  System.setSecurityManager(oldSecurityManager);
  System.clearProperty(ALLOWED_PROPERTY_NAME);
  System.clearProperty(DISALLOWED_PROPERTY_NAME);
  System.getProperties().remove(STRING_PROPERTY_NAME);
  System.getProperties().remove(NON_STRING_PROPERTY_NAME);
}
