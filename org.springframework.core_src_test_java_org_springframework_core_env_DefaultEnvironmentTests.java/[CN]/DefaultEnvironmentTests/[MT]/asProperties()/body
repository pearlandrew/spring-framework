{
  ConfigurableEnvironment env=new AbstractEnvironment(){
  }
;
  assertThat(env.asProperties(),notNullValue());
  env.addPropertySource("lowestPrecedence",new HashMap(){
{
      put("common","lowCommon");
      put("lowKey","lowVal");
    }
  }
);
  env.addPropertySource("middlePrecedence",new HashMap(){
{
      put("common","midCommon");
      put("midKey","midVal");
    }
  }
);
  env.addPropertySource("highestPrecedence",new HashMap(){
{
      put("common","highCommon");
      put("highKey","highVal");
    }
  }
);
  Properties props=env.asProperties();
  assertThat(props.getProperty("common"),is("highCommon"));
  assertThat(props.getProperty("lowKey"),is("lowVal"));
  assertThat(props.getProperty("midKey"),is("midVal"));
  assertThat(props.getProperty("highKey"),is("highVal"));
  assertThat(props.size(),is(4));
}
