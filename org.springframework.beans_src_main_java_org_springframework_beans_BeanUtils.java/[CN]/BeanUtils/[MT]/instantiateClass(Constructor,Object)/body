{
  Assert.notNull(ctor,"Constructor must not be null");
  try {
    ReflectionUtils.makeAccessible(ctor);
    return ctor.newInstance(args);
  }
 catch (  InstantiationException ex) {
    throw new BeanInstantiationException(ctor.getDeclaringClass(),"Is it an abstract class?",ex);
  }
catch (  IllegalAccessException ex) {
    throw new BeanInstantiationException(ctor.getDeclaringClass(),"Is the constructor accessible?",ex);
  }
catch (  IllegalArgumentException ex) {
    throw new BeanInstantiationException(ctor.getDeclaringClass(),"Illegal arguments for constructor",ex);
  }
catch (  InvocationTargetException ex) {
    throw new BeanInstantiationException(ctor.getDeclaringClass(),"Constructor threw exception",ex.getTargetException());
  }
}
