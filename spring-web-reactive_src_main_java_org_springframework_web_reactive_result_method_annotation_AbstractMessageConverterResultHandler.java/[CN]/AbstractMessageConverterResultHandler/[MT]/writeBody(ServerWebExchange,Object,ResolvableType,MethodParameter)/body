{
  Publisher<?> publisher=null;
  ResolvableType elementType;
  if (Publisher.class.isAssignableFrom(bodyType.getRawClass())) {
    publisher=(Publisher<?>)body;
  }
 else {
    TypeDescriptor descriptor=new TypeDescriptor(bodyTypeParameter);
    if (getConversionService().canConvert(descriptor,MONO_TYPE)) {
      publisher=(Publisher<?>)getConversionService().convert(body,descriptor,MONO_TYPE);
    }
 else     if (getConversionService().canConvert(descriptor,FLUX_TYPE)) {
      publisher=(Publisher<?>)getConversionService().convert(body,descriptor,FLUX_TYPE);
    }
  }
  if (publisher != null) {
    elementType=bodyType.getGeneric(0);
  }
 else {
    elementType=bodyType;
    publisher=Mono.justOrEmpty(body);
  }
  if (void.class == elementType.getRawClass() || Void.class == elementType.getRawClass()) {
    return Mono.from((Publisher<Void>)publisher);
  }
  List<MediaType> producibleTypes=getProducibleMediaTypes(elementType);
  if (producibleTypes.isEmpty()) {
    return Mono.error(new IllegalStateException("No converter for return value type: " + elementType));
  }
  MediaType bestMediaType=selectMediaType(exchange,producibleTypes);
  if (bestMediaType != null) {
    for (    HttpMessageConverter<?> converter : getMessageConverters()) {
      if (converter.canWrite(elementType,bestMediaType)) {
        ServerHttpResponse response=exchange.getResponse();
        return converter.write((Publisher)publisher,elementType,bestMediaType,response);
      }
    }
  }
  return Mono.error(new NotAcceptableStatusException(producibleTypes));
}
