{
  if (matchSelf(metadataReader)) {
    return true;
  }
  ClassMetadata metadata=metadataReader.getClassMetadata();
  if (matchClassName(metadata.getClassName())) {
    return true;
  }
  if (this.considerInherited) {
    if (metadata.hasSuperClass()) {
      Boolean superClassMatch=matchSuperClass(metadata.getSuperClassName());
      if (superClassMatch != null) {
        if (superClassMatch.booleanValue()) {
          return true;
        }
      }
 else {
        try {
          if (match(metadata.getSuperClassName(),metadataReaderFactory)) {
            return true;
          }
        }
 catch (        IOException ex) {
          logger.debug("Could not read super class [" + metadata.getSuperClassName() + "] of type-filtered class ["+ metadata.getClassName()+ "]");
        }
      }
    }
  }
  if (this.considerInterfaces) {
    for (    String ifc : metadata.getInterfaceNames()) {
      Boolean interfaceMatch=matchInterface(ifc);
      if (interfaceMatch != null) {
        if (interfaceMatch.booleanValue()) {
          return true;
        }
      }
 else {
        try {
          if (match(ifc,metadataReaderFactory)) {
            return true;
          }
        }
 catch (        IOException ex) {
          logger.debug("Could not read interface [" + ifc + "] for type-filtered class ["+ metadata.getClassName()+ "]");
        }
      }
    }
  }
  return false;
}
