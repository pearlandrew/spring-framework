{
  Resource resource=getResource(request);
  if (resource == null) {
    logger.trace("No matching resource found - returning 404");
    response.sendError(HttpServletResponse.SC_NOT_FOUND);
    return;
  }
  if (HttpMethod.OPTIONS.matches(request.getMethod())) {
    response.setHeader("Allow",getAllowHeader());
    return;
  }
  checkRequest(request);
  if (new ServletWebRequest(request,response).checkNotModified(resource.lastModified())) {
    logger.trace("Resource not modified - returning 304");
    return;
  }
  prepareResponse(response);
  MediaType mediaType=getMediaType(request,resource);
  if (mediaType != null) {
    if (logger.isTraceEnabled()) {
      logger.trace("Determined media type '" + mediaType + "' for "+ resource);
    }
  }
 else {
    if (logger.isTraceEnabled()) {
      logger.trace("No media type found for " + resource + " - not sending a content-type header");
    }
  }
  if (METHOD_HEAD.equals(request.getMethod())) {
    setHeaders(response,resource,mediaType);
    logger.trace("HEAD request - skipping content");
    return;
  }
  ServletServerHttpResponse outputMessage=new ServletServerHttpResponse(response);
  outputMessage.getHeaders().add(HttpHeaders.ACCEPT_RANGES,"bytes");
  if (request.getHeader(HttpHeaders.RANGE) == null) {
    setHeaders(response,resource,mediaType);
    this.resourceHttpMessageConverter.write(resource,mediaType,outputMessage);
  }
 else {
    ServletServerHttpRequest inputMessage=new ServletServerHttpRequest(request);
    try {
      List<HttpRange> httpRanges=inputMessage.getHeaders().getRange();
      response.setStatus(HttpServletResponse.SC_PARTIAL_CONTENT);
      if (httpRanges.size() == 1) {
        ResourceRegion resourceRegion=httpRanges.get(0).toResourceRegion(resource);
        this.resourceRegionHttpMessageConverter.write(resourceRegion,mediaType,outputMessage);
      }
 else {
        this.resourceRegionHttpMessageConverter.write(HttpRange.toResourceRegions(httpRanges,resource),mediaType,outputMessage);
      }
    }
 catch (    IllegalArgumentException ex) {
      response.addHeader("Content-Range","bytes */" + resource.contentLength());
      response.sendError(HttpServletResponse.SC_REQUESTED_RANGE_NOT_SATISFIABLE);
    }
  }
}
