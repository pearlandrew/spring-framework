{
  try {
    if (type.isArray()) {
      Class<?> componentType=type.getComponentType();
      if (componentType.isArray()) {
        Object array=Array.newInstance(componentType,1);
        Array.set(array,0,Array.newInstance(componentType.getComponentType(),0));
        return array;
      }
 else {
        return Array.newInstance(componentType,0);
      }
    }
 else     if (Collection.class.isAssignableFrom(type)) {
      TypeDescriptor elementDesc=(desc != null ? desc.getElementTypeDescriptor() : null);
      return CollectionFactory.createCollection(type,(elementDesc != null ? elementDesc.getType() : null),16);
    }
 else     if (Map.class.isAssignableFrom(type)) {
      TypeDescriptor keyDesc=(desc != null ? desc.getMapKeyTypeDescriptor() : null);
      return CollectionFactory.createMap(type,(keyDesc != null ? keyDesc.getType() : null),16);
    }
 else {
      return type.newInstance();
    }
  }
 catch (  Exception ex) {
    throw new NullValueInNestedPathException(getRootClass(),this.nestedPath + name,"Could not instantiate property type [" + type.getName() + "] to auto-grow nested property path: "+ ex);
  }
}
