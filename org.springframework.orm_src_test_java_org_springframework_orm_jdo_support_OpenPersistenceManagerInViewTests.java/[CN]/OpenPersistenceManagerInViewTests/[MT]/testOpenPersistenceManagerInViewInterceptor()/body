{
  MockControl pmfControl=MockControl.createControl(PersistenceManagerFactory.class);
  PersistenceManagerFactory pmf=(PersistenceManagerFactory)pmfControl.getMock();
  MockControl pmControl=MockControl.createControl(PersistenceManager.class);
  PersistenceManager pm=(PersistenceManager)pmControl.getMock();
  OpenPersistenceManagerInViewInterceptor interceptor=new OpenPersistenceManagerInViewInterceptor();
  interceptor.setPersistenceManagerFactory(pmf);
  MockServletContext sc=new MockServletContext();
  MockHttpServletRequest request=new MockHttpServletRequest(sc);
  MockHttpServletResponse response=new MockHttpServletResponse();
  pmf.getPersistenceManager();
  pmfControl.setReturnValue(pm,1);
  pmfControl.replay();
  pmControl.replay();
  interceptor.preHandle(new ServletWebRequest(request));
  assertTrue(TransactionSynchronizationManager.hasResource(pmf));
  interceptor.preHandle(new ServletWebRequest(request));
  interceptor.preHandle(new ServletWebRequest(request));
  interceptor.postHandle(new ServletWebRequest(request),null);
  interceptor.afterCompletion(new ServletWebRequest(request),null);
  interceptor.postHandle(new ServletWebRequest(request),null);
  interceptor.afterCompletion(new ServletWebRequest(request),null);
  interceptor.preHandle(new ServletWebRequest(request));
  interceptor.postHandle(new ServletWebRequest(request),null);
  interceptor.afterCompletion(new ServletWebRequest(request),null);
  pmfControl.verify();
  pmControl.verify();
  pmfControl.reset();
  pmControl.reset();
  pmfControl.replay();
  pmControl.replay();
  interceptor.postHandle(new ServletWebRequest(request),null);
  assertTrue(TransactionSynchronizationManager.hasResource(pmf));
  pmfControl.verify();
  pmControl.verify();
  pmfControl.reset();
  pmControl.reset();
  pm.close();
  pmControl.setVoidCallable(1);
  pmfControl.replay();
  pmControl.replay();
  interceptor.afterCompletion(new ServletWebRequest(request),null);
  assertFalse(TransactionSynchronizationManager.hasResource(pmf));
  pmfControl.verify();
  pmControl.verify();
}
