{
  Annotation[] anns=this.cachedAnnotations;
  if (anns == null) {
    Field underlyingField=ReflectionUtils.findField(getMethodParameter().getMethod().getDeclaringClass(),this.propertyDescriptor.getName());
    Map<Class,Annotation> annMap=new LinkedHashMap<Class,Annotation>();
    if (underlyingField != null) {
      for (      Annotation ann : underlyingField.getAnnotations()) {
        annMap.put(ann.annotationType(),ann);
      }
    }
    Method writeMethod=this.propertyDescriptor.getWriteMethod();
    Method readMethod=this.propertyDescriptor.getReadMethod();
    if (writeMethod != null && writeMethod != getMethodParameter().getMethod()) {
      for (      Annotation ann : writeMethod.getAnnotations()) {
        annMap.put(ann.annotationType(),ann);
      }
    }
    if (readMethod != null && readMethod != getMethodParameter().getMethod()) {
      for (      Annotation ann : readMethod.getAnnotations()) {
        annMap.put(ann.annotationType(),ann);
      }
    }
    for (    Annotation ann : getMethodParameter().getMethodAnnotations()) {
      annMap.put(ann.annotationType(),ann);
    }
    for (    Annotation ann : getMethodParameter().getParameterAnnotations()) {
      annMap.put(ann.annotationType(),ann);
    }
    anns=annMap.values().toArray(new Annotation[annMap.size()]);
    this.cachedAnnotations=anns;
  }
  return anns;
}
