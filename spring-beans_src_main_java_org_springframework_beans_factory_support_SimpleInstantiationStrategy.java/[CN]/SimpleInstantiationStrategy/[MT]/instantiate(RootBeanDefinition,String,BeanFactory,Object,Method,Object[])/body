{
  try {
    if (System.getSecurityManager() != null) {
      AccessController.doPrivileged(new PrivilegedAction<Object>(){
        @Override public Object run(){
          ReflectionUtils.makeAccessible(factoryMethod);
          return null;
        }
      }
);
    }
 else {
      ReflectionUtils.makeAccessible(factoryMethod);
    }
    Method priorInvokedFactoryMethod=currentlyInvokedFactoryMethod.get();
    try {
      currentlyInvokedFactoryMethod.set(factoryMethod);
      return factoryMethod.invoke(factoryBean,args);
    }
  finally {
      if (priorInvokedFactoryMethod != null) {
        currentlyInvokedFactoryMethod.set(priorInvokedFactoryMethod);
      }
 else {
        currentlyInvokedFactoryMethod.remove();
      }
    }
  }
 catch (  IllegalArgumentException ex) {
    throw new BeanDefinitionStoreException("Illegal arguments to factory method [" + factoryMethod + "]; "+ "args: "+ StringUtils.arrayToCommaDelimitedString(args));
  }
catch (  IllegalAccessException ex) {
    throw new BeanDefinitionStoreException("Cannot access factory method [" + factoryMethod + "]; is it public?");
  }
catch (  InvocationTargetException ex) {
    throw new BeanDefinitionStoreException("Factory method [" + factoryMethod + "] threw exception",ex.getTargetException());
  }
}
