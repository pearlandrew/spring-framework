{
  assertTrue(Pointcuts.matches(allClassGetAgePointcut,TEST_BEAN_GET_AGE,TestBean.class,null));
  assertTrue(Pointcuts.matches(allClassGetAgePointcut,TEST_BEAN_GET_AGE,MyTestBean.class,null));
  assertFalse(Pointcuts.matches(myTestBeanGetterPointcut,TEST_BEAN_GET_NAME,TestBean.class,null));
  assertFalse(Pointcuts.matches(myTestBeanGetterPointcut,TEST_BEAN_GET_AGE,TestBean.class,null));
  assertTrue(Pointcuts.matches(myTestBeanGetterPointcut,TEST_BEAN_GET_NAME,MyTestBean.class,null));
  assertTrue(Pointcuts.matches(myTestBeanGetterPointcut,TEST_BEAN_GET_AGE,MyTestBean.class,null));
  Pointcut intersection=Pointcuts.intersection(allClassGetAgePointcut,myTestBeanGetterPointcut);
  assertFalse(Pointcuts.matches(intersection,TEST_BEAN_GET_NAME,TestBean.class,null));
  assertFalse(Pointcuts.matches(intersection,TEST_BEAN_GET_AGE,TestBean.class,null));
  assertFalse(Pointcuts.matches(intersection,TEST_BEAN_GET_NAME,MyTestBean.class,null));
  assertTrue(Pointcuts.matches(intersection,TEST_BEAN_GET_AGE,MyTestBean.class,null));
  assertFalse(Pointcuts.matches(intersection,TEST_BEAN_GET_NAME,MyTestBeanSubclass.class,null));
  assertTrue(Pointcuts.matches(intersection,TEST_BEAN_GET_AGE,MyTestBeanSubclass.class,null));
  intersection=Pointcuts.intersection(intersection,myTestBeanSubclassGetterPointcut);
  assertFalse(Pointcuts.matches(intersection,TEST_BEAN_GET_NAME,TestBean.class,null));
  assertFalse(Pointcuts.matches(intersection,TEST_BEAN_GET_AGE,TestBean.class,null));
  assertFalse(Pointcuts.matches(intersection,TEST_BEAN_GET_NAME,MyTestBean.class,null));
  assertFalse(Pointcuts.matches(intersection,TEST_BEAN_GET_AGE,MyTestBean.class,null));
  assertFalse(Pointcuts.matches(intersection,TEST_BEAN_GET_NAME,MyTestBeanSubclass.class,null));
  assertTrue(Pointcuts.matches(intersection,TEST_BEAN_GET_AGE,MyTestBeanSubclass.class,null));
  Pointcut union=Pointcuts.union(intersection,allTestBeanMethodsPointcut);
  assertTrue(Pointcuts.matches(union,TEST_BEAN_GET_NAME,TestBean.class,null));
  assertTrue(Pointcuts.matches(union,TEST_BEAN_GET_AGE,TestBean.class,null));
  assertFalse(Pointcuts.matches(union,TEST_BEAN_GET_NAME,MyTestBean.class,null));
  assertFalse(Pointcuts.matches(union,TEST_BEAN_GET_AGE,MyTestBean.class,null));
  assertFalse(Pointcuts.matches(union,TEST_BEAN_GET_NAME,MyTestBeanSubclass.class,null));
  assertTrue(Pointcuts.matches(union,TEST_BEAN_GET_AGE,MyTestBeanSubclass.class,null));
  assertTrue(Pointcuts.matches(union,TEST_BEAN_ABSQUATULATE,TestBean.class,null));
  assertFalse(Pointcuts.matches(union,TEST_BEAN_ABSQUATULATE,MyTestBean.class,null));
}
