{
  MediaType contentType=inputMessage.getHeaders().getContentType();
  if (contentType == null) {
    contentType=MediaType.APPLICATION_OCTET_STREAM;
  }
  Class<?> contextClass=methodParam.getDeclaringClass();
  Map<TypeVariable,Type> map=GenericTypeResolver.getTypeVariableMap(contextClass);
  Class<T> targetClass=(Class<T>)GenericTypeResolver.resolveType(targetType,map);
  for (  HttpMessageConverter<?> converter : this.messageConverters) {
    if (converter instanceof GenericHttpMessageConverter) {
      GenericHttpMessageConverter genericConverter=(GenericHttpMessageConverter)converter;
      if (genericConverter.canRead(targetType,contextClass,contentType)) {
        if (logger.isDebugEnabled()) {
          logger.debug("Reading [" + targetType + "] as \""+ contentType+ "\" using ["+ converter+ "]");
        }
        return genericConverter.read(targetType,contextClass,inputMessage);
      }
    }
    if (targetClass != null) {
      if (converter.canRead(targetClass,contentType)) {
        if (logger.isDebugEnabled()) {
          logger.debug("Reading [" + targetClass.getName() + "] as \""+ contentType+ "\" using ["+ converter+ "]");
        }
        return ((HttpMessageConverter<T>)converter).read(targetClass,inputMessage);
      }
    }
  }
  throw new HttpMediaTypeNotSupportedException(contentType,allSupportedMediaTypes);
}
