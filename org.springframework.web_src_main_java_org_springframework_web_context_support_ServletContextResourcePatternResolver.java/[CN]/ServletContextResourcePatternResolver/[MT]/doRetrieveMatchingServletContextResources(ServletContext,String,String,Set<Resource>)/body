{
  Set candidates=servletContext.getResourcePaths(dir);
  if (candidates != null) {
    boolean dirDepthNotFixed=fullPattern.contains("**");
    int jarFileSep=fullPattern.indexOf(ResourceUtils.JAR_URL_SEPARATOR);
    String jarFilePath=null;
    String pathInJarFile=null;
    if (jarFileSep > 0 && jarFileSep + ResourceUtils.JAR_URL_SEPARATOR.length() < fullPattern.length()) {
      jarFilePath=fullPattern.substring(0,jarFileSep);
      pathInJarFile=fullPattern.substring(jarFileSep + ResourceUtils.JAR_URL_SEPARATOR.length());
    }
    for (    Object candidate : candidates) {
      String currPath=(String)candidate;
      if (!currPath.startsWith(dir)) {
        int dirIndex=currPath.indexOf(dir);
        if (dirIndex != -1) {
          currPath=currPath.substring(dirIndex);
        }
      }
      if (currPath.endsWith("/") && (dirDepthNotFixed || StringUtils.countOccurrencesOf(currPath,"/") <= StringUtils.countOccurrencesOf(fullPattern,"/"))) {
        doRetrieveMatchingServletContextResources(servletContext,fullPattern,currPath,result);
      }
      if (jarFilePath != null && getPathMatcher().match(jarFilePath,currPath)) {
        String absoluteJarPath=servletContext.getRealPath(currPath);
        if (absoluteJarPath != null) {
          doRetrieveMatchingJarEntries(absoluteJarPath,pathInJarFile,result);
        }
      }
      if (getPathMatcher().match(fullPattern,currPath)) {
        result.add(new ServletContextResource(servletContext,currPath));
      }
    }
  }
}
