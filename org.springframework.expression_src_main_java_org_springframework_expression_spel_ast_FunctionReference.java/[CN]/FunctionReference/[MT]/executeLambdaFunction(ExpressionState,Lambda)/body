{
  Object[] functionArgs=getArguments(state);
  List<String> args=lambdaExpression.getArguments();
  if (args.size() != functionArgs.length) {
    throw new SpelException(SpelMessages.INCORRECT_NUMBER_OF_ARGUMENTS_TO_FUNCTION,functionArgs.length,args.size());
  }
  Map<String,Object> argMap=new HashMap<String,Object>();
  for (int i=0; i < args.size(); i++) {
    argMap.put(args.get(i),functionArgs[i]);
  }
  try {
    state.enterScope(argMap);
    return ((SpelNode)lambdaExpression.getExpression()).getValue(state);
  }
  finally {
    state.exitScope();
  }
}
