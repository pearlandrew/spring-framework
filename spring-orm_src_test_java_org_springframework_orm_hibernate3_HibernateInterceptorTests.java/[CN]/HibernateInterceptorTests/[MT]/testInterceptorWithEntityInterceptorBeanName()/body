{
  org.hibernate.Interceptor entityInterceptor=mock(org.hibernate.Interceptor.class);
  org.hibernate.Interceptor entityInterceptor2=mock(org.hibernate.Interceptor.class);
  given(sessionFactory.openSession(entityInterceptor)).willReturn(session);
  given(sessionFactory.openSession(entityInterceptor2)).willReturn(session);
  BeanFactory beanFactory=mock(BeanFactory.class);
  given(beanFactory.getBean("entityInterceptor",org.hibernate.Interceptor.class)).willReturn(entityInterceptor,entityInterceptor2);
  HibernateInterceptor interceptor=new HibernateInterceptor();
  interceptor.setSessionFactory(sessionFactory);
  interceptor.setEntityInterceptorBeanName("entityInterceptor");
  interceptor.setBeanFactory(beanFactory);
  for (int i=0; i < 2; i++) {
    try {
      interceptor.invoke(invocation);
    }
 catch (    Throwable t) {
      fail("Should not have thrown Throwable: " + t.getMessage());
    }
  }
  verify(session,times(2)).flush();
  verify(session,times(2)).close();
}
