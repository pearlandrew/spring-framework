{
  this.sessionFactory=mock(SessionFactory.class);
  this.session=mock(Session.class);
  this.invocation=mock(MethodInvocation.class);
  given(sessionFactory.openSession()).willReturn(session);
  given(session.getSessionFactory()).willReturn(sessionFactory);
  given(invocation.proceed()).willAnswer(new Answer<Object>(){
    @Override public Object answer(    InvocationOnMock invocation) throws Throwable {
      if (!TransactionSynchronizationManager.hasResource(sessionFactory)) {
        throw new IllegalStateException("Session not bound");
      }
      return null;
    }
  }
);
}
